ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.mqtt_pub_request_cb,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	mqtt_pub_request_cb:
  25              	.LFB177:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V.
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    **** 
  20:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  22:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *    and/or other materials provided with the distribution.
  25:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  26:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  27:Src/main.c    ****   *    derived from this software without specific written permission.
  28:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  29:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  30:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  32:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 2


  33:Src/main.c    ****   *    this license.
  34:Src/main.c    ****   *
  35:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  36:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  37:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  38:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  40:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  43:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  44:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  45:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/main.c    ****   *
  48:Src/main.c    ****   ******************************************************************************
  49:Src/main.c    ****   */
  50:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  51:Src/main.c    **** #include "main.h"
  52:Src/main.c    **** #include "stm32f7xx_hal.h"
  53:Src/main.c    **** #include "cmsis_os.h"
  54:Src/main.c    **** #include "lwip.h"
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN Includes */
  57:Src/main.c    **** #include  <errno.h>
  58:Src/main.c    **** #include  <sys/unistd.h>
  59:Src/main.c    **** 
  60:Src/main.c    **** #include "stm32746g_discovery_lcd.h"
  61:Src/main.c    **** #include "Utilities/Fonts/fonts.h"
  62:Src/main.c    **** #include "stm32746g_discovery_ts.h"
  63:Src/main.c    **** #include "term_io.h"
  64:Src/main.c    **** #include "dbgu.h"
  65:Src/main.c    **** #include "ansi.h"
  66:Src/main.c    **** 
  67:Src/main.c    **** #include "FreeRTOS.h"
  68:Src/main.c    **** #include "task.h"
  69:Src/main.c    **** #include "queue.h"
  70:Src/main.c    **** 
  71:Src/main.c    **** #include "lwip/opt.h"
  72:Src/main.c    **** #include "lwip/api.h"
  73:Src/main.c    **** #include "lwip/apps/fs.h"
  74:Src/main.c    **** #include "lwip/dhcp.h"
  75:Src/main.c    **** #include "lwip/tcpip.h"
  76:Src/main.c    **** #include "lwip/netdb.h"
  77:Src/main.c    **** #include "lwip/sockets.h"
  78:Src/main.c    **** 
  79:Src/main.c    **** #include "lwip.h"
  80:Src/main.c    **** 
  81:Src/main.c    **** #include "wm8994/wm8994.h"
  82:Src/main.c    **** 
  83:Src/main.c    **** //
  84:Src/main.c    **** #include "lwip/apps/mqtt.h"
  85:Src/main.c    **** 
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END Includes */
  88:Src/main.c    **** 
  89:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 3


  90:Src/main.c    **** ADC_HandleTypeDef hadc3;
  91:Src/main.c    **** 
  92:Src/main.c    **** CRC_HandleTypeDef hcrc;
  93:Src/main.c    **** 
  94:Src/main.c    **** DCMI_HandleTypeDef hdcmi;
  95:Src/main.c    **** 
  96:Src/main.c    **** DMA2D_HandleTypeDef hdma2d;
  97:Src/main.c    **** 
  98:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  99:Src/main.c    **** I2C_HandleTypeDef hi2c3;
 100:Src/main.c    **** 
 101:Src/main.c    **** LTDC_HandleTypeDef hltdc;
 102:Src/main.c    **** 
 103:Src/main.c    **** QSPI_HandleTypeDef hqspi;
 104:Src/main.c    **** 
 105:Src/main.c    **** RTC_HandleTypeDef hrtc;
 106:Src/main.c    **** 
 107:Src/main.c    **** SAI_HandleTypeDef hsai_BlockA2;
 108:Src/main.c    **** SAI_HandleTypeDef hsai_BlockB2;
 109:Src/main.c    **** 
 110:Src/main.c    **** SD_HandleTypeDef hsd1;
 111:Src/main.c    **** 
 112:Src/main.c    **** SPDIFRX_HandleTypeDef hspdif;
 113:Src/main.c    **** 
 114:Src/main.c    **** SPI_HandleTypeDef hspi2;
 115:Src/main.c    **** 
 116:Src/main.c    **** TIM_HandleTypeDef htim1;
 117:Src/main.c    **** TIM_HandleTypeDef htim2;
 118:Src/main.c    **** TIM_HandleTypeDef htim3;
 119:Src/main.c    **** TIM_HandleTypeDef htim5;
 120:Src/main.c    **** TIM_HandleTypeDef htim7;
 121:Src/main.c    **** TIM_HandleTypeDef htim8;
 122:Src/main.c    **** TIM_HandleTypeDef htim12;
 123:Src/main.c    **** 
 124:Src/main.c    **** UART_HandleTypeDef huart1;
 125:Src/main.c    **** UART_HandleTypeDef huart6;
 126:Src/main.c    **** 
 127:Src/main.c    **** SDRAM_HandleTypeDef hsdram1;
 128:Src/main.c    **** 
 129:Src/main.c    **** osThreadId defaultTaskHandle;
 130:Src/main.c    **** 
 131:Src/main.c    **** /* USER CODE BEGIN PV */
 132:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 133:Src/main.c    **** 
 134:Src/main.c    **** /* USER CODE END PV */
 135:Src/main.c    **** 
 136:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 137:Src/main.c    **** void SystemClock_Config(void);
 138:Src/main.c    **** static void MX_GPIO_Init(void);
 139:Src/main.c    **** static void MX_I2C1_Init(void);
 140:Src/main.c    **** static void MX_USART1_UART_Init(void);
 141:Src/main.c    **** static void MX_USART6_UART_Init(void);
 142:Src/main.c    **** void StartDefaultTask(void const * argument);
 143:Src/main.c    **** 
 144:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 145:Src/main.c    **** 
 146:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 4


 147:Src/main.c    **** float buffer[BUFFER_SIZE];
 148:Src/main.c    **** int first_index = 0;
 149:Src/main.c    **** int current_pos = 0;
 150:Src/main.c    **** int is_full = 0;
 151:Src/main.c    **** 
 152:Src/main.c    **** float buffer2[BUFFER_SIZE];
 153:Src/main.c    **** int first_index2= 0;
 154:Src/main.c    **** int current_pos2 = 0;
 155:Src/main.c    **** int is_full2 = 0;
 156:Src/main.c    **** 
 157:Src/main.c    **** 
 158:Src/main.c    **** /* USER CODE BEGIN PFP */
 159:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 160:Src/main.c    **** 
 161:Src/main.c    **** /* USER CODE END PFP */
 162:Src/main.c    **** 
 163:Src/main.c    **** /* USER CODE BEGIN 0 */
 164:Src/main.c    **** void mainTask(void* p);
 165:Src/main.c    **** 
 166:Src/main.c    **** osThreadId netconn_thread_handle;
 167:Src/main.c    **** 
 168:Src/main.c    **** #define LCD_X_SIZE			RK043FN48H_WIDTH
 169:Src/main.c    **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
 170:Src/main.c    **** 
 171:Src/main.c    **** #define PRINTF_USES_HAL_TX		0
 172:Src/main.c    **** 
 173:Src/main.c    **** int __io_putchar(int ch)
 174:Src/main.c    **** {
 175:Src/main.c    **** 	uint8_t data = ch;
 176:Src/main.c    **** 	#if PRINTF_USES_HAL_TX
 177:Src/main.c    **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);
 178:Src/main.c    **** 	#else
 179:Src/main.c    **** 		while(__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 180:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 181:Src/main.c    **** 	#endif
 182:Src/main.c    **** 	return 0;
 183:Src/main.c    **** }
 184:Src/main.c    **** 
 185:Src/main.c    **** char inkey(void)
 186:Src/main.c    **** {
 187:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 188:Src/main.c    **** 
 189:Src/main.c    **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 190:Src/main.c    **** 	{
 191:Src/main.c    **** 		__HAL_UART_CLEAR_OREFLAG(&huart1);
 192:Src/main.c    **** 		return (huart1.Instance->RDR);
 193:Src/main.c    **** 	}
 194:Src/main.c    **** 	else
 195:Src/main.c    **** 		return 0;
 196:Src/main.c    **** }
 197:Src/main.c    **** 
 198:Src/main.c    **** //partially based on available code examples
 199:Src/main.c    **** static void lcd_start(void)
 200:Src/main.c    **** {
 201:Src/main.c    ****   /* LCD Initialization */
 202:Src/main.c    ****   BSP_LCD_SetFont(&Font12);
 203:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 5


 204:Src/main.c    ****   BSP_LCD_Init();
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* LCD Initialization */
 207:Src/main.c    ****   BSP_LCD_LayerDefaultInit(0, (unsigned int)0xC0000000);
 208:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 209:Src/main.c    ****   BSP_LCD_LayerDefaultInit(1, (unsigned int)0xC0000000+(LCD_X_SIZE*LCD_Y_SIZE*4));
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* Enable the LCD */
 212:Src/main.c    ****   BSP_LCD_DisplayOn();
 213:Src/main.c    **** 
 214:Src/main.c    ****   /* Select the LCD Background Layer  */
 215:Src/main.c    ****   BSP_LCD_SelectLayer(0);
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* Clear the Background Layer */
 218:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 219:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 220:Src/main.c    **** 
 221:Src/main.c    ****   BSP_LCD_SetColorKeying(1,LCD_COLOR_WHITE);
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* Select the LCD Foreground Layer  */
 224:Src/main.c    ****   BSP_LCD_SelectLayer(1);
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* Clear the Foreground Layer */
 227:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 228:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* Configure the transparency for foreground and background :
 231:Src/main.c    ****      Increase the transparency */
 232:Src/main.c    ****   BSP_LCD_SetTransparency(0, 255);
 233:Src/main.c    ****   BSP_LCD_SetTransparency(1, 255);
 234:Src/main.c    **** }
 235:Src/main.c    **** 
 236:Src/main.c    **** //[rmv]
 237:Src/main.c    **** void draw_button(int button[4], uint32_t color, uint8_t* text);
 238:Src/main.c    **** void draw_background(void)
 239:Src/main.c    **** {
 240:Src/main.c    **** 	/* Select the LCD Background Layer  */
 241:Src/main.c    **** 	BSP_LCD_SelectLayer(0);
 242:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 243:Src/main.c    **** 	BSP_LCD_FillRect(0,0,LCD_X_SIZE,LCD_Y_SIZE);
 244:Src/main.c    **** 
 245:Src/main.c    **** 	//select Foreground Layer
 246:Src/main.c    **** 	BSP_LCD_SelectLayer(1);
 247:Src/main.c    **** 	// char greeting[] = "Hello";
 248:Src/main.c    **** 	// draw_button(50,50,100,100,LCD_COLOR_MAGENTA,&greeting);
 249:Src/main.c    **** }
 250:Src/main.c    **** 
 251:Src/main.c    **** void draw_button(int button[4], uint32_t color, uint8_t* text){
 252:Src/main.c    ****   int xPos = button[0];
 253:Src/main.c    ****   int yPos = button[1];
 254:Src/main.c    ****   int width = button[2];
 255:Src/main.c    ****   int height = button[3];
 256:Src/main.c    **** 
 257:Src/main.c    **** 	BSP_LCD_SelectLayer(0);
 258:Src/main.c    **** 	BSP_LCD_SetTextColor(color);
 259:Src/main.c    **** 	BSP_LCD_DrawRect(xPos,yPos,width,height);
 260:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 6


 261:Src/main.c    **** 	BSP_LCD_DisplayStringAt(xPos+5, yPos+height/2, text, 0);
 262:Src/main.c    **** 
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** void draw_chart(){
 266:Src/main.c    **** 	if(current_pos == BUFFER_SIZE - 1 || current_pos == BUFFER_SIZE - 2){
 267:Src/main.c    **** 		return;
 268:Src/main.c    **** 	}
 269:Src/main.c    ****     int chart_height = 200;
 270:Src/main.c    **** 	int chart_height_coord = 230;
 271:Src/main.c    ****     int chart_length = 450;
 272:Src/main.c    ****     int chart_y_pos = 250;
 273:Src/main.c    ****     int chart_x_pos = 20;
 274:Src/main.c    **** 	int chart_y_pos_coord = 20;
 275:Src/main.c    **** 
 276:Src/main.c    **** //drawing coordinates system
 277:Src/main.c    ****     BSP_LCD_SelectLayer(0);
 278:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 279:Src/main.c    ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 280:Src/main.c    ****     BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos,chart_length);
 281:Src/main.c    ****     BSP_LCD_DrawVLine(chart_x_pos,chart_y_pos_coord,chart_height_coord);
 282:Src/main.c    ****     
 283:Src/main.c    **** //    BSP_LCD_FillTriangle(chart_length-10,chart_length-10,chart_length,chart_y_pos+5,chart_y_pos-5
 284:Src/main.c    **** 
 285:Src/main.c    ****     //check amount of data
 286:Src/main.c    ****     int n = 0;
 287:Src/main.c    ****     for(int i = 0; i < BUFFER_SIZE; i++){
 288:Src/main.c    ****         if(buffer[i] != INT32_MIN)
 289:Src/main.c    ****             n++;
 290:Src/main.c    ****     }
 291:Src/main.c    **** 
 292:Src/main.c    ****     //int n = 90; //sizeof(data)/sizeof(data[0]);
 293:Src/main.c    ****     float max = 30;//buffer[0];
 294:Src/main.c    ****     float min = 20;//buffer[0];//0;//data[0];
 295:Src/main.c    **** 
 296:Src/main.c    ****     for(int i=1; i<n; i++){
 297:Src/main.c    ****       if(buffer[i] < min)
 298:Src/main.c    ****           min = buffer[i];
 299:Src/main.c    ****       if(buffer[i] > max)
 300:Src/main.c    ****           max = buffer[i];
 301:Src/main.c    ****     }
 302:Src/main.c    ****     int min_i = min;//0;//min;
 303:Src/main.c    ****     int max_i = max;
 304:Src/main.c    ****     float coordinates_scale = chart_height/(max_i - min_i);
 305:Src/main.c    ****     float amplitude = max - min; // ?
 306:Src/main.c    ****     float scale = chart_height/amplitude; // ?
 307:Src/main.c    **** 
 308:Src/main.c    ****     // draw scale
 309:Src/main.c    ****     int y = chart_y_pos;
 310:Src/main.c    ****     BSP_LCD_SetTextColor(LCD_COLOR_LIGHTGRAY);
 311:Src/main.c    ****     for(int i=1;i<amplitude;i++){
 312:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 313:Src/main.c    ****     }
 314:Src/main.c    **** 
 315:Src/main.c    **** // draw data
 316:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 317:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 7


 318:Src/main.c    ****   int sample_len = chart_length/n;
 319:Src/main.c    ****   int stop_cond; 
 320:Src/main.c    **** 
 321:Src/main.c    ****    if(first_index == 0){
 322:Src/main.c    **** 		stop_cond = BUFFER_SIZE -1;
 323:Src/main.c    **** 	} 
 324:Src/main.c    **** 	else{
 325:Src/main.c    **** 		stop_cond = first_index - 1;
 326:Src/main.c    **** 	}
 327:Src/main.c    ****   for(int i= first_index; i != stop_cond; i = (i+1)%BUFFER_SIZE){
 328:Src/main.c    ****       if(buffer[(i+1)%BUFFER_SIZE] != INT32_MIN) {
 329:Src/main.c    **** 		  //printf("i:  %d\n",i);
 330:Src/main.c    ****           int x1, y1, x2, y2;
 331:Src/main.c    ****           x1 = chart_x_pos + i * sample_len;
 332:Src/main.c    ****           x2 = chart_x_pos + (i + 1) * sample_len;
 333:Src/main.c    ****           y1 = chart_y_pos - (buffer[i%BUFFER_SIZE] - min_i) * coordinates_scale;
 334:Src/main.c    ****           y2 = chart_y_pos - (buffer[(i + 1)%BUFFER_SIZE] - min_i) * coordinates_scale;
 335:Src/main.c    ****           BSP_LCD_DrawLine(x1, y1, x2, y2);
 336:Src/main.c    ****       }
 337:Src/main.c    **** 	  //printf("iiii:   %d\n",i);
 338:Src/main.c    ****   }
 339:Src/main.c    ****     //printf("ended for\n");
 340:Src/main.c    ****   
 341:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 342:Src/main.c    **** 	Point points[3];
 343:Src/main.c    **** 	points[0].X=chart_x_pos+5;
 344:Src/main.c    **** 	points[1].X=chart_x_pos-5;
 345:Src/main.c    **** 	points[2].X=chart_x_pos;
 346:Src/main.c    **** 	
 347:Src/main.c    **** 	points[0].Y=chart_y_pos_coord+10;
 348:Src/main.c    **** 	points[1].Y=chart_y_pos_coord+10;
 349:Src/main.c    **** 	points[2].Y=chart_y_pos_coord;
 350:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 351:Src/main.c    **** 
 352:Src/main.c    **** 	points[0].X=chart_x_pos+chart_length-10;
 353:Src/main.c    **** 	points[1].X=chart_x_pos+chart_length;
 354:Src/main.c    **** 	points[2].X=chart_x_pos+chart_length-10;
 355:Src/main.c    **** 
 356:Src/main.c    **** 	points[0].Y=chart_y_pos-5;
 357:Src/main.c    **** 	points[1].Y=chart_y_pos;
 358:Src/main.c    **** 	points[2].Y=chart_y_pos+5;
 359:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 360:Src/main.c    **** 	//BSP_LCD_FillPolygon(chart_x_pos-5,chart_x_pos-5,chart_x_pos+5,chart_height-10,chart_height,chart
 361:Src/main.c    **** 
 362:Src/main.c    **** 
 363:Src/main.c    **** 	BSP_LCD_SetFont(&Font12);
 364:Src/main.c    **** 	
 365:Src/main.c    **** 	int j = 0;
 366:Src/main.c    **** 	for(int i = min; i <=max ; i+=5){
 367:Src/main.c    **** 		int someInt = i;
 368:Src/main.c    **** 		char str[3];
 369:Src/main.c    **** 		sprintf(str, "%d", someInt);
 370:Src/main.c    **** 		BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-j*coordinates_scale, (uint8_t*)str, LEFT_MOD
 371:Src/main.c    **** 		j+=5;
 372:Src/main.c    **** 	}
 373:Src/main.c    **** 	/*
 374:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5, (uint8_t*)"0", LEFT_MODE);
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 8


 375:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-5*coordinates_scale, (uint8_t*)"5", LEFT_MODE
 376:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-10*coordinates_scale, (uint8_t*)"10", LEFT_MO
 377:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-15*coordinates_scale, (uint8_t*)"15", LEFT_MO
 378:Src/main.c    **** 	*/
 379:Src/main.c    **** 	}
 380:Src/main.c    **** 
 381:Src/main.c    **** void draw_chart2(){
 382:Src/main.c    **** 
 383:Src/main.c    **** 	if(current_pos2 == BUFFER_SIZE - 1 || current_pos2 == BUFFER_SIZE - 2){
 384:Src/main.c    **** 		return;
 385:Src/main.c    **** 	}
 386:Src/main.c    ****     int chart_height = 200;
 387:Src/main.c    **** 	int chart_height_coord = 230;
 388:Src/main.c    ****     int chart_length = 450;
 389:Src/main.c    ****     int chart_y_pos = 250;
 390:Src/main.c    ****     int chart_x_pos = 20;
 391:Src/main.c    **** 	int chart_y_pos_coord = 20;
 392:Src/main.c    **** 
 393:Src/main.c    **** //drawing coordinates system
 394:Src/main.c    ****     BSP_LCD_SelectLayer(0);
 395:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 396:Src/main.c    ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 397:Src/main.c    ****     BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos,chart_length);
 398:Src/main.c    ****     BSP_LCD_DrawVLine(chart_x_pos,chart_y_pos_coord,chart_height_coord);
 399:Src/main.c    ****     
 400:Src/main.c    **** //    BSP_LCD_FillTriangle(chart_length-10,chart_length-10,chart_length,chart_y_pos+5,chart_y_pos-5
 401:Src/main.c    **** 
 402:Src/main.c    ****     //check amount of data
 403:Src/main.c    ****     int n = 0;
 404:Src/main.c    ****     for(int i = 0; i < BUFFER_SIZE; i++){
 405:Src/main.c    ****         if(buffer2[i] != INT32_MIN)
 406:Src/main.c    ****             n++;
 407:Src/main.c    ****     }
 408:Src/main.c    **** 
 409:Src/main.c    ****     //int n = 90; //sizeof(data)/sizeof(data[0]);
 410:Src/main.c    ****     float max = 30;//buffer[0];
 411:Src/main.c    ****     float min = 20;//buffer[0];//0;//data[0];
 412:Src/main.c    **** 
 413:Src/main.c    ****     for(int i=1; i<n; i++){
 414:Src/main.c    ****       if(buffer2[i] < min)
 415:Src/main.c    ****           min = buffer2[i];
 416:Src/main.c    ****       if(buffer2[i] > max)
 417:Src/main.c    ****           max = buffer2[i];
 418:Src/main.c    ****     }
 419:Src/main.c    ****     int min_i = min;//0;//min;
 420:Src/main.c    ****     int max_i = max;
 421:Src/main.c    ****     float coordinates_scale = chart_height/(max_i - min_i);
 422:Src/main.c    ****     float amplitude = max - min; // ?
 423:Src/main.c    ****     float scale = chart_height/amplitude; // ?
 424:Src/main.c    **** 
 425:Src/main.c    ****     // draw scale
 426:Src/main.c    ****     int y = chart_y_pos;
 427:Src/main.c    ****     BSP_LCD_SetTextColor(LCD_COLOR_LIGHTGRAY);
 428:Src/main.c    ****     for(int i=1;i<amplitude;i++){
 429:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 430:Src/main.c    ****     }
 431:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 9


 432:Src/main.c    **** // draw data
 433:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 434:Src/main.c    **** 
 435:Src/main.c    ****   int sample_len = chart_length/n;
 436:Src/main.c    ****   int stop_cond; 
 437:Src/main.c    **** 
 438:Src/main.c    ****    if(first_index2 == 0){
 439:Src/main.c    **** 		stop_cond = BUFFER_SIZE -1;
 440:Src/main.c    **** 	} 
 441:Src/main.c    **** 	else{
 442:Src/main.c    **** 		stop_cond = first_index2 - 1;
 443:Src/main.c    **** 	}
 444:Src/main.c    ****   for(int i= first_index2; i != stop_cond; i = (i+1)%BUFFER_SIZE){
 445:Src/main.c    ****       if(buffer2[(i+1)%BUFFER_SIZE] != INT32_MIN) {
 446:Src/main.c    **** 		  //printf("i:  %d\n",i);
 447:Src/main.c    ****           int x1, y1, x2, y2;
 448:Src/main.c    ****           x1 = chart_x_pos + i * sample_len;
 449:Src/main.c    ****           x2 = chart_x_pos + (i + 1) * sample_len;
 450:Src/main.c    ****           y1 = chart_y_pos - (buffer2[i%BUFFER_SIZE] - min_i) * coordinates_scale;
 451:Src/main.c    ****           y2 = chart_y_pos - (buffer2[(i + 1)%BUFFER_SIZE] - min_i) * coordinates_scale;
 452:Src/main.c    ****           BSP_LCD_DrawLine(x1, y1, x2, y2);
 453:Src/main.c    ****       }
 454:Src/main.c    ****   }
 455:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 456:Src/main.c    **** 	Point points[3];
 457:Src/main.c    **** 	points[0].X=chart_x_pos+5;
 458:Src/main.c    **** 	points[1].X=chart_x_pos-5;
 459:Src/main.c    **** 	points[2].X=chart_x_pos;
 460:Src/main.c    **** 	
 461:Src/main.c    **** 	points[0].Y=chart_y_pos_coord+10;
 462:Src/main.c    **** 	points[1].Y=chart_y_pos_coord+10;
 463:Src/main.c    **** 	points[2].Y=chart_y_pos_coord;
 464:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 465:Src/main.c    **** 
 466:Src/main.c    **** 	points[0].X=chart_x_pos+chart_length-10;
 467:Src/main.c    **** 	points[1].X=chart_x_pos+chart_length;
 468:Src/main.c    **** 	points[2].X=chart_x_pos+chart_length-10;
 469:Src/main.c    **** 
 470:Src/main.c    **** 	points[0].Y=chart_y_pos-5;
 471:Src/main.c    **** 	points[1].Y=chart_y_pos;
 472:Src/main.c    **** 	points[2].Y=chart_y_pos+5;
 473:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 474:Src/main.c    **** 	//BSP_LCD_FillPolygon(chart_x_pos-5,chart_x_pos-5,chart_x_pos+5,chart_height-10,chart_height,chart
 475:Src/main.c    **** 
 476:Src/main.c    **** 
 477:Src/main.c    **** 	BSP_LCD_SetFont(&Font12);
 478:Src/main.c    **** 	
 479:Src/main.c    **** 	int j = 0;
 480:Src/main.c    **** 	for(int i = min; i <=max ; i+=5){
 481:Src/main.c    **** 		int someInt = i;
 482:Src/main.c    **** 		char str[3];
 483:Src/main.c    **** 		sprintf(str, "%d", someInt);
 484:Src/main.c    **** 		BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-j*coordinates_scale, (uint8_t*)str, LEFT_MOD
 485:Src/main.c    **** 		j+=5;
 486:Src/main.c    **** 	}
 487:Src/main.c    **** 	/*
 488:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5, (uint8_t*)"0", LEFT_MODE);
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 10


 489:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-5*coordinates_scale, (uint8_t*)"5", LEFT_MODE
 490:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-10*coordinates_scale, (uint8_t*)"10", LEFT_MO
 491:Src/main.c    **** 	BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-15*coordinates_scale, (uint8_t*)"15", LEFT_MO
 492:Src/main.c    **** 	*/
 493:Src/main.c    **** 	}
 494:Src/main.c    **** 
 495:Src/main.c    **** static TS_StateTypeDef  TS_State;
 496:Src/main.c    **** 
 497:Src/main.c    **** 
 498:Src/main.c    **** int initialize_touchscreen(void)
 499:Src/main.c    **** {
 500:Src/main.c    **** 	uint8_t  status = 0;
 501:Src/main.c    **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 502:Src/main.c    **** 	if(status != TS_OK) return -1;
 503:Src/main.c    **** 	return 0;
 504:Src/main.c    **** }
 505:Src/main.c    **** 
 506:Src/main.c    **** 
 507:Src/main.c    **** void add_data_to_buffer(char* new_item, int client_number)
 508:Src/main.c    **** {
 509:Src/main.c    **** 	if(client_number == 1){
 510:Src/main.c    **** 
 511:Src/main.c    **** 		int buff_size = sizeof(buffer);
 512:Src/main.c    **** 		float new_item_f = atof(new_item);
 513:Src/main.c    **** 		buffer[current_pos] = new_item_f;
 514:Src/main.c    **** 		
 515:Src/main.c    **** 		printf("%2.6f to dodaje\n",new_item_f);
 516:Src/main.c    **** 		printf("Current pos %d\n",current_pos);
 517:Src/main.c    **** 		printf("First index %d\n",first_index);
 518:Src/main.c    **** 		printf("is_full %d \n",is_full);
 519:Src/main.c    **** 
 520:Src/main.c    **** 		if( is_full == 0){
 521:Src/main.c    **** 			current_pos = (current_pos+1)%BUFFER_SIZE;
 522:Src/main.c    **** 		}
 523:Src/main.c    **** 
 524:Src/main.c    **** 		if(is_full == 1){
 525:Src/main.c    **** 			first_index = (first_index+1)%BUFFER_SIZE;
 526:Src/main.c    **** 			current_pos = (current_pos+1)%BUFFER_SIZE;
 527:Src/main.c    **** 		}
 528:Src/main.c    **** 
 529:Src/main.c    **** 		if((current_pos == BUFFER_SIZE - 1) && is_full == 0)
 530:Src/main.c    **** 		{
 531:Src/main.c    **** 			is_full = 1;
 532:Src/main.c    **** 			first_index = 1;
 533:Src/main.c    **** 		}
 534:Src/main.c    **** 	}
 535:Src/main.c    **** 	else if(client_number == 2){
 536:Src/main.c    **** 
 537:Src/main.c    **** 		int buff_size = sizeof(buffer2);
 538:Src/main.c    **** 		float new_item_f = atof(new_item);
 539:Src/main.c    **** 		buffer2[current_pos2] = new_item_f;
 540:Src/main.c    **** 		
 541:Src/main.c    **** 		printf("%f to dodaje\n",new_item_f);
 542:Src/main.c    **** 
 543:Src/main.c    **** 		if( is_full2 == 0){
 544:Src/main.c    **** 			current_pos2 = (current_pos2+1)%BUFFER_SIZE;
 545:Src/main.c    **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 11


 546:Src/main.c    **** 
 547:Src/main.c    **** 		if(is_full2 == 1){
 548:Src/main.c    **** 			first_index2 = (first_index2+1)%BUFFER_SIZE;
 549:Src/main.c    **** 			current_pos2 = (current_pos2+1)%BUFFER_SIZE;
 550:Src/main.c    **** 		}
 551:Src/main.c    **** 
 552:Src/main.c    **** 		if((current_pos2 == BUFFER_SIZE - 1) && is_full2 == 0)
 553:Src/main.c    **** 		{
 554:Src/main.c    **** 			is_full2 = 1;
 555:Src/main.c    **** 			first_index2 = 1;
 556:Src/main.c    **** 		}
 557:Src/main.c    **** 	}
 558:Src/main.c    **** }
 559:Src/main.c    **** 
 560:Src/main.c    ****  int print_data(char* data, int client_id, int len){
 561:Src/main.c    ****     sFONT* old_font = BSP_LCD_GetFont();
 562:Src/main.c    **** 	BSP_LCD_SetFont(&LCD_DEFAULT_FONT);
 563:Src/main.c    **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 564:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 565:Src/main.c    **** 	if(client_id == 1){
 566:Src/main.c    **** 		printf("%s\n",data);
 567:Src/main.c    **** 		int i;
 568:Src/main.c    **** 		//for(i = 10; i < 70;i++)
 569:Src/main.c    **** 			//BSP_LCD_ClearStringLine(i);
 570:Src/main.c    **** 		BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 571:Src/main.c    **** 		BSP_LCD_FillRect(10,50,LCD_X_SIZE,LCD_Y_SIZE*0.08);
 572:Src/main.c    **** //BSP_LCD_FillRect(0.3*LCD_X_SIZE,0.1*LCD_Y_SIZE,10,50);
 573:Src/main.c    **** 
 574:Src/main.c    **** 		BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 575:Src/main.c    **** 		//BSP_LCD_ClearStringLine(10);
 576:Src/main.c    **** 		//BSP_LCD_ClearStringLine(50);
 577:Src/main.c    **** 		char target[100];
 578:Src/main.c    **** 
 579:Src/main.c    **** 		strncpy(target, data, len);
 580:Src/main.c    **** 		target[len] = '\0';
 581:Src/main.c    **** 		BSP_LCD_DisplayStringAt(0, 10, (uint8_t*)"Temperature1 is:", CENTER_MODE);
 582:Src/main.c    **** 		BSP_LCD_DisplayStringAt(0, 50, (uint8_t*)target, CENTER_MODE);
 583:Src/main.c    **** 	}
 584:Src/main.c    **** 	else{
 585:Src/main.c    **** 	printf("%s\n",data);
 586:Src/main.c    **** 	char target[100];
 587:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 588:Src/main.c    **** 		//BSP_LCD_FillRect(0.3*LCD_X_SIZE,0.1*LCD_Y_SIZE,10,50);
 589:Src/main.c    **** 		BSP_LCD_FillRect(10,110,LCD_X_SIZE,LCD_Y_SIZE*0.08);
 590:Src/main.c    **** 		BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 591:Src/main.c    **** 	strncpy(target, data, len);
 592:Src/main.c    **** 	target[len] = '\0';
 593:Src/main.c    **** 	BSP_LCD_DisplayStringAt(0, 70, (uint8_t*)"Temperature2 is:", CENTER_MODE);
 594:Src/main.c    **** 	BSP_LCD_DisplayStringAt(0, 110, (uint8_t*)target, CENTER_MODE);
 595:Src/main.c    **** 	}
 596:Src/main.c    **** 	
 597:Src/main.c    **** 	BSP_LCD_SetFont(old_font);
 598:Src/main.c    **** }
 599:Src/main.c    **** 
 600:Src/main.c    **** 
 601:Src/main.c    **** /* USER CODE END 0 */
 602:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 12


 603:Src/main.c    **** /**
 604:Src/main.c    ****   * @brief  The application entry point.
 605:Src/main.c    ****   *
 606:Src/main.c    ****   * @retval None
 607:Src/main.c    ****   */
 608:Src/main.c    **** int main(void)
 609:Src/main.c    **** {
 610:Src/main.c    **** 
 611:Src/main.c    **** 
 612:Src/main.c    ****   float data[90] = {20.34,21.39,20.05,25.07,21.97,24.27,26.34,26.39,26.32,22.01,20.34,27.39,22.05,2
 613:Src/main.c    **** 
 614:Src/main.c    **** // fill buffer
 615:Src/main.c    **** for(int i = 0; i < BUFFER_SIZE; i++){
 616:Src/main.c    ****     buffer[i] = INT32_MIN;
 617:Src/main.c    **** 	buffer2[i] = INT32_MIN;
 618:Src/main.c    **** }
 619:Src/main.c    ****   /* USER CODE BEGIN 1 */
 620:Src/main.c    **** 
 621:Src/main.c    ****   /* USER CODE END 1 */
 622:Src/main.c    **** 
 623:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 624:Src/main.c    **** 
 625:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 626:Src/main.c    ****   HAL_Init();
 627:Src/main.c    **** 
 628:Src/main.c    ****   /* USER CODE BEGIN Init */
 629:Src/main.c    **** 
 630:Src/main.c    ****   /* USER CODE END Init */
 631:Src/main.c    **** 
 632:Src/main.c    ****   /* Configure the system clock */
 633:Src/main.c    ****   SystemClock_Config();
 634:Src/main.c    **** 
 635:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 636:Src/main.c    **** 
 637:Src/main.c    ****   /* USER CODE END SysInit */
 638:Src/main.c    **** 
 639:Src/main.c    ****   /* Initialize all configured peripherals */
 640:Src/main.c    ****   MX_GPIO_Init();
 641:Src/main.c    ****   MX_USART1_UART_Init();
 642:Src/main.c    ****   MX_USART6_UART_Init();
 643:Src/main.c    ****   /* USER CODE BEGIN 2 */
 644:Src/main.c    ****   debug_init(&huart1);
 645:Src/main.c    **** 
 646:Src/main.c    ****   xprintf(ANSI_FG_GREEN "STM32F746 Discovery Project" ANSI_FG_DEFAULT "\n");
 647:Src/main.c    **** 
 648:Src/main.c    ****   printf("Regular printf\n");
 649:Src/main.c    **** 
 650:Src/main.c    **** lcd_start();
 651:Src/main.c    **** draw_background();
 652:Src/main.c    **** initialize_touchscreen();
 653:Src/main.c    **** draw_chart(data);
 654:Src/main.c    **** 
 655:Src/main.c    ****   /* Create the thread(s) */
 656:Src/main.c    ****   /* definition and creation of defaultTask */
 657:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
 658:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 659:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 13


 660:Src/main.c    **** 
 661:Src/main.c    ****   /* Start scheduler */
 662:Src/main.c    ****   osKernelStart();
 663:Src/main.c    **** 
 664:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 665:Src/main.c    **** 
 666:Src/main.c    ****   /* Infinite loop */
 667:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 668:Src/main.c    ****   while (1)
 669:Src/main.c    ****   {
 670:Src/main.c    **** 
 671:Src/main.c    ****   }
 672:Src/main.c    **** 
 673:Src/main.c    **** }
 674:Src/main.c    **** 
 675:Src/main.c    **** /**
 676:Src/main.c    ****   * @brief System Clock Configuration
 677:Src/main.c    ****   * @retval None
 678:Src/main.c    ****   */
 679:Src/main.c    **** void SystemClock_Config(void)
 680:Src/main.c    **** {
 681:Src/main.c    **** 
 682:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 683:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 684:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 685:Src/main.c    **** 
 686:Src/main.c    ****     /**Configure the main internal regulator output voltage
 687:Src/main.c    ****     */
 688:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 689:Src/main.c    **** 
 690:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 691:Src/main.c    **** 
 692:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 693:Src/main.c    ****     */
 694:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 695:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 696:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 697:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 698:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 699:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 700:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 701:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 702:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 703:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 704:Src/main.c    ****   {
 705:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 706:Src/main.c    ****   }
 707:Src/main.c    **** 
 708:Src/main.c    ****     /**Activate the Over-Drive mode
 709:Src/main.c    ****     */
 710:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 711:Src/main.c    ****   {
 712:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 713:Src/main.c    ****   }
 714:Src/main.c    **** 
 715:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 716:Src/main.c    ****     */
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 14


 717:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 718:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 719:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 720:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 721:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 722:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 723:Src/main.c    **** 
 724:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 725:Src/main.c    ****   {
 726:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 727:Src/main.c    ****   }
 728:Src/main.c    **** 
 729:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX|RCC_PERIPHCLK_LTDC
 730:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 731:Src/main.c    ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SAI2
 732:Src/main.c    ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C3
 733:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 734:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 735:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 736:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 737:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 738:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 739:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 740:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 741:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 742:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 743:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 744:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 745:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 746:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 747:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 748:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 749:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 750:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 751:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 752:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 753:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 754:Src/main.c    ****   {
 755:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 756:Src/main.c    ****   }
 757:Src/main.c    **** 
 758:Src/main.c    ****     /**Configure the Systick interrupt time
 759:Src/main.c    ****     */
 760:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 761:Src/main.c    **** 
 762:Src/main.c    ****     /**Configure the Systick
 763:Src/main.c    ****     */
 764:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 765:Src/main.c    **** 
 766:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 767:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 768:Src/main.c    **** }
 769:Src/main.c    **** 
 770:Src/main.c    **** 
 771:Src/main.c    **** 
 772:Src/main.c    **** 
 773:Src/main.c    **** /* USART1 init function */
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 15


 774:Src/main.c    **** static void MX_USART1_UART_Init(void)
 775:Src/main.c    **** {
 776:Src/main.c    **** 
 777:Src/main.c    ****   huart1.Instance = USART1;
 778:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 779:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 780:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 781:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 782:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 783:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 784:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 785:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 786:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 787:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 788:Src/main.c    ****   {
 789:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 790:Src/main.c    ****   }
 791:Src/main.c    **** 
 792:Src/main.c    **** }
 793:Src/main.c    **** 
 794:Src/main.c    **** /* USART6 init function */
 795:Src/main.c    **** static void MX_USART6_UART_Init(void)
 796:Src/main.c    **** {
 797:Src/main.c    **** 
 798:Src/main.c    ****   huart6.Instance = USART6;
 799:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 800:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 801:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 802:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 803:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 804:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 805:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 806:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 807:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 808:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 809:Src/main.c    ****   {
 810:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 811:Src/main.c    ****   }
 812:Src/main.c    **** 
 813:Src/main.c    **** }
 814:Src/main.c    **** 
 815:Src/main.c    **** 
 816:Src/main.c    **** 
 817:Src/main.c    **** /** Configure pins as
 818:Src/main.c    ****         * Analog
 819:Src/main.c    ****         * Input
 820:Src/main.c    ****         * Output
 821:Src/main.c    ****         * EVENT_OUT
 822:Src/main.c    ****         * EXTI
 823:Src/main.c    ****      PB5   ------> USB_OTG_HS_ULPI_D7
 824:Src/main.c    ****      PH4   ------> USB_OTG_HS_ULPI_NXT
 825:Src/main.c    ****      PB13   ------> USB_OTG_HS_ULPI_D6
 826:Src/main.c    ****      PB12   ------> USB_OTG_HS_ULPI_D5
 827:Src/main.c    ****      PC0   ------> USB_OTG_HS_ULPI_STP
 828:Src/main.c    ****      PC2   ------> USB_OTG_HS_ULPI_DIR
 829:Src/main.c    ****      PA5   ------> USB_OTG_HS_ULPI_CK
 830:Src/main.c    ****      PB10   ------> USB_OTG_HS_ULPI_D3
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 16


 831:Src/main.c    ****      PA3   ------> USB_OTG_HS_ULPI_D0
 832:Src/main.c    ****      PB1   ------> USB_OTG_HS_ULPI_D2
 833:Src/main.c    ****      PB0   ------> USB_OTG_HS_ULPI_D1
 834:Src/main.c    ****      PB11   ------> USB_OTG_HS_ULPI_D4
 835:Src/main.c    **** */
 836:Src/main.c    **** static void MX_GPIO_Init(void)
 837:Src/main.c    **** {
 838:Src/main.c    **** 
 839:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 840:Src/main.c    **** 
 841:Src/main.c    ****   /* GPIO Ports Clock Enable */
 842:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 843:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 844:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 845:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 846:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 847:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 848:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 849:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 850:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 851:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 852:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 853:Src/main.c    **** 
 854:Src/main.c    ****   /*Configure GPIO pin Output Level */
 855:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 856:Src/main.c    **** 
 857:Src/main.c    ****   /*Configure GPIO pin Output Level */
 858:Src/main.c    ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 859:Src/main.c    **** 
 860:Src/main.c    ****   /*Configure GPIO pin Output Level */
 861:Src/main.c    ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 862:Src/main.c    **** 
 863:Src/main.c    ****   /*Configure GPIO pin Output Level */
 864:Src/main.c    ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 865:Src/main.c    **** 
 866:Src/main.c    ****   /*Configure GPIO pin Output Level */
 867:Src/main.c    ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 868:Src/main.c    **** 
 869:Src/main.c    ****   /*Configure GPIO pin Output Level */
 870:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 871:Src/main.c    **** 
 872:Src/main.c    ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
 873:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 874:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 875:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 876:Src/main.c    ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 877:Src/main.c    **** 
 878:Src/main.c    ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
 879:Src/main.c    ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
 880:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 881:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
 882:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 883:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 884:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 885:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 886:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 887:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 17


 888:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
 889:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 890:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 891:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 892:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 893:Src/main.c    **** 
 894:Src/main.c    ****   /*Configure GPIO pin : Audio_INT_Pin */
 895:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 896:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 897:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 898:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 899:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 900:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 901:Src/main.c    **** 
 902:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
 903:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 904:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 905:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 906:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 907:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 908:Src/main.c    **** 
 909:Src/main.c    ****   /*Configure GPIO pin : uSD_Detect_Pin */
 910:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 911:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 912:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 913:Src/main.c    ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 914:Src/main.c    **** 
 915:Src/main.c    ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
 916:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 917:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 918:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 919:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 920:Src/main.c    ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 921:Src/main.c    **** 
 922:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 923:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 924:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 925:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 926:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 927:Src/main.c    **** 
 928:Src/main.c    ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
 929:Src/main.c    ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 930:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 931:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 932:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 933:Src/main.c    **** 
 934:Src/main.c    ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
 935:Src/main.c    ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 936:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 937:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 938:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 939:Src/main.c    ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 940:Src/main.c    **** 
 941:Src/main.c    ****   /*Configure GPIO pin : LCD_INT_Pin */
 942:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 943:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 944:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 18


 945:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 946:Src/main.c    **** 
 947:Src/main.c    ****   /*Configure GPIO pin : ULPI_NXT_Pin */
 948:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 949:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 950:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 951:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 952:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 953:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 954:Src/main.c    **** 
 955:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
 956:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 957:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 958:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 959:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 960:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 961:Src/main.c    **** 
 962:Src/main.c    ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
 963:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 964:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 965:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 966:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 967:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 968:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 969:Src/main.c    **** 
 970:Src/main.c    ****   /*Configure GPIO pin : RMII_RXER_Pin */
 971:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 972:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 973:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 974:Src/main.c    ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 975:Src/main.c    **** 
 976:Src/main.c    ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
 977:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 978:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 979:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 980:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 981:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 982:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 983:Src/main.c    **** 
 984:Src/main.c    **** }
 985:Src/main.c    **** 
 986:Src/main.c    **** 
 987:Src/main.c    **** 
 988:Src/main.c    **** /* USER CODE END 4 */
 989:Src/main.c    **** 
 990:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 991:Src/main.c    **** /**
 992:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
 993:Src/main.c    ****   * @param  argument: Not used
 994:Src/main.c    ****   * @retval None
 995:Src/main.c    ****   */
 996:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 997:Src/main.c    **** int which_window = 0;
 998:Src/main.c    **** static void mqtt_connection_cb(mqtt_client_t *client, void *arg, mqtt_connection_status_t status);
 999:Src/main.c    **** static void mqtt_incoming_publish_cb(void *arg, const char *topic, u32_t tot_len);
1000:Src/main.c    **** static void mqtt_incoming_data_cb(void *arg, const u8_t *data, u16_t len, u8_t flags);
1001:Src/main.c    **** static void mqtt_sub_request_cb(void *arg, err_t result);
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 19


1002:Src/main.c    **** static void mqtt_pub_request_cb(void *arg, err_t result);
1003:Src/main.c    **** int example_do_connect(mqtt_client_t *client)
1004:Src/main.c    **** {
1005:Src/main.c    ****   struct mqtt_connect_client_info_t ci;
1006:Src/main.c    ****   err_t err;
1007:Src/main.c    **** 
1008:Src/main.c    ****   /* Setup an empty client info structure */
1009:Src/main.c    ****   memset(&ci, 0, sizeof(ci));
1010:Src/main.c    **** 
1011:Src/main.c    ****   /* Minimal amount of information required is client identifier, so set it here */
1012:Src/main.c    ****   ci.client_id = "lwip_test";
1013:Src/main.c    **** 
1014:Src/main.c    ****   /* Initiate client and connect to server, if this fails immediately an error code is returned
1015:Src/main.c    ****      otherwise mqtt_connection_cb will be called with connection result after attempting
1016:Src/main.c    ****      to establish a connection with the server.
1017:Src/main.c    ****      For now MQTT version 3.1.1 is always used */
1018:Src/main.c    ****   ip_addr_t ip_addr;
1019:Src/main.c    ****   if(1 == ipaddr_aton( "192.168.0.111",&ip_addr)){
1020:Src/main.c    **** 	printf("Created ip");
1021:Src/main.c    ****   }
1022:Src/main.c    ****   err = mqtt_client_connect(client, &ip_addr, 1883, mqtt_connection_cb, 0, &ci);
1023:Src/main.c    **** 
1024:Src/main.c    ****   /* For now just print the result code if something goes wrong */
1025:Src/main.c    ****   if(err != ERR_OK) {
1026:Src/main.c    ****     printf("mqtt_connect return tutaj %d\n", err);
1027:Src/main.c    **** 	return 1;
1028:Src/main.c    **** 
1029:Src/main.c    ****   }
1030:Src/main.c    ****   else{
1031:Src/main.c    **** 	printf("mqtt_connectbvgfdbgfdgfd\n");
1032:Src/main.c    **** 	return 0;
1033:Src/main.c    ****   }
1034:Src/main.c    **** }
1035:Src/main.c    **** 
1036:Src/main.c    **** static void mqtt_connection_cb(mqtt_client_t *client, void *arg, mqtt_connection_status_t status)
1037:Src/main.c    **** {
1038:Src/main.c    **** 
1039:Src/main.c    ****   err_t err;
1040:Src/main.c    ****   err_t err2;
1041:Src/main.c    ****   if(status == MQTT_CONNECT_ACCEPTED) {
1042:Src/main.c    ****     printf("mqtt_connection_cb: Successfully connected\n");
1043:Src/main.c    **** 
1044:Src/main.c    ****     /* Setup callback for incoming publish requests */
1045:Src/main.c    ****     mqtt_set_inpub_callback(client, mqtt_incoming_publish_cb, mqtt_incoming_data_cb, arg);
1046:Src/main.c    **** 
1047:Src/main.c    ****     /* Subscribe to a topic named "subtopic" with QoS level 1, call mqtt_sub_request_cb with result
1048:Src/main.c    ****     err = mqtt_subscribe(client, "esp/temperature/client2", 1, mqtt_sub_request_cb, arg);
1049:Src/main.c    **** 	err2 = mqtt_subscribe(client, "esp/temperature/client1", 1, mqtt_sub_request_cb, arg);
1050:Src/main.c    **** 
1051:Src/main.c    ****     if(err != ERR_OK || err2 != ERR_OK) {
1052:Src/main.c    ****       printf("mqtt_subscribe return: %d\n", err);
1053:Src/main.c    ****     }
1054:Src/main.c    ****   } else {
1055:Src/main.c    ****     printf("mqtt_connection_cb: Disconnected, reason: %d\n", status);
1056:Src/main.c    ****     /* Its more nice to be connected, so try to reconnect */
1057:Src/main.c    ****     example_do_connect(client);
1058:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 20


1059:Src/main.c    **** 
1060:Src/main.c    **** }
1061:Src/main.c    **** 
1062:Src/main.c    **** static void mqtt_sub_request_cb(void *arg, err_t result)
1063:Src/main.c    **** {
1064:Src/main.c    ****   /* Just print the result code here for simplicity,
1065:Src/main.c    ****      normal behaviour would be to take some action if subscribe fails like
1066:Src/main.c    ****      notifying user, retry subscribe or disconnect from server */
1067:Src/main.c    ****   printf("Subscribe result: %d\n", result);
1068:Src/main.c    ****   if(result == ERR_OK){
1069:Src/main.c    ****   printf("Subscribe result is OK!\n");
1070:Src/main.c    ****   }
1071:Src/main.c    **** }
1072:Src/main.c    **** 
1073:Src/main.c    **** //-----------------------------------------------------------------
1074:Src/main.c    **** //3. Implementing callbacks for incoming publish and data
1075:Src/main.c    **** 
1076:Src/main.c    **** /* The idea is to demultiplex topic and create some reference to be used in data callbacks
1077:Src/main.c    ****    Example here uses a global variable, better would be to use a member in arg
1078:Src/main.c    ****    If RAM and CPU budget allows it, the easiest implementation might be to just take a copy of
1079:Src/main.c    ****    the topic string and use it in mqtt_incoming_data_cb
1080:Src/main.c    **** */
1081:Src/main.c    **** static int inpub_id;
1082:Src/main.c    **** static void mqtt_incoming_publish_cb(void *arg, const char *topic, u32_t tot_len) // callback invok
1083:Src/main.c    **** {
1084:Src/main.c    ****   printf("Incoming publish at topic %s with total length %u\n", topic, (unsigned int)tot_len);
1085:Src/main.c    **** 
1086:Src/main.c    ****   /* Decode topic string into a user defined reference */
1087:Src/main.c    ****   if(strcmp(topic, "print_payload") == 0) {
1088:Src/main.c    ****     inpub_id = 0;
1089:Src/main.c    ****   } else if(topic[0] == 'A') {
1090:Src/main.c    ****     /* All topics starting with 'A' might be handled at the same way */
1091:Src/main.c    ****     inpub_id = 1;
1092:Src/main.c    ****   } else if(strcmp(topic,"esp/temperature/client1") == 0){
1093:Src/main.c    **** 	inpub_id = 2;
1094:Src/main.c    ****   }
1095:Src/main.c    ****   else {
1096:Src/main.c    ****     /* For all other topics */
1097:Src/main.c    ****     inpub_id = 3;
1098:Src/main.c    ****   }
1099:Src/main.c    **** }
1100:Src/main.c    **** 
1101:Src/main.c    **** static void mqtt_incoming_data_cb(void *arg, const u8_t *data, u16_t len, u8_t flags) // callback f
1102:Src/main.c    **** {
1103:Src/main.c    ****   printf("Incoming publish payload with length %d, flags %u\n", len, (unsigned int)flags);
1104:Src/main.c    **** 
1105:Src/main.c    ****   if(flags & MQTT_DATA_FLAG_LAST) {
1106:Src/main.c    ****     /* Last fragment of payload received (or whole part if payload fits receive buffer
1107:Src/main.c    ****        See MQTT_VAR_HEADER_BUFFER_LEN)  */
1108:Src/main.c    **** 
1109:Src/main.c    ****     /* Call function or do action depending on reference, in this case inpub_id */
1110:Src/main.c    ****     if(inpub_id == 0) {
1111:Src/main.c    ****       /* Don't trust the publisher, check zero termination */
1112:Src/main.c    ****       if(data[len-1] == 0) {
1113:Src/main.c    ****         printf("mqtt_incoming_data_cb: %s\n", (const char *)data);
1114:Src/main.c    ****       }
1115:Src/main.c    ****     } else if(inpub_id == 1) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 21


1116:Src/main.c    ****       /* Call an 'A' function... */
1117:Src/main.c    **** 
1118:Src/main.c    **** 	  xprintf("Call an A function ...\n");
1119:Src/main.c    **** 
1120:Src/main.c    ****     } else if(inpub_id == 2){
1121:Src/main.c    **** 		add_data_to_buffer((const char *)data,1);
1122:Src/main.c    **** 		if(which_window == 2){
1123:Src/main.c    **** 			
1124:Src/main.c    **** 			print_data((const char *)data, 1,len);
1125:Src/main.c    **** 		}
1126:Src/main.c    **** 		if(which_window == 3){
1127:Src/main.c    **** 			draw_chosen_chart(1);
1128:Src/main.c    **** 		}
1129:Src/main.c    **** 	}
1130:Src/main.c    **** 	else {
1131:Src/main.c    ****       //printf("mqtt_incoming_data_cb: Ignoring payload...\n");
1132:Src/main.c    **** 	  printf("mqtt_incoming_data_cb: %s\n", (const char *)data);
1133:Src/main.c    **** 	  add_data_to_buffer((const char *)data,2);
1134:Src/main.c    **** 	  if(which_window == 2){
1135:Src/main.c    **** 		print_data((const char *)data,2,len);
1136:Src/main.c    **** 	  }
1137:Src/main.c    **** 	  if(which_window == 4){
1138:Src/main.c    **** 		draw_chosen_chart(2);
1139:Src/main.c    **** 	  }
1140:Src/main.c    ****     }
1141:Src/main.c    ****   } else {
1142:Src/main.c    ****     /* Handle fragmented payload, store in buffer, write to file or whatever */
1143:Src/main.c    ****   }
1144:Src/main.c    ****   //data = NULL;
1145:Src/main.c    **** }
1146:Src/main.c    **** 
1147:Src/main.c    **** //-----------------------------------------------------------------
1148:Src/main.c    **** //4. Using outgoing publish
1149:Src/main.c    ****  static void mqtt_pub_request_cb(void *arg, err_t result)
1150:Src/main.c    **** {
  27              		.loc 1 1150 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
1151:Src/main.c    ****   if(result != ERR_OK) {
  32              		.loc 1 1151 0
  33 0000 01B9     		cbnz	r1, .L7
  34 0002 7047     		bx	lr
  35              	.L7:
1150:Src/main.c    ****   if(result != ERR_OK) {
  36              		.loc 1 1150 0
  37 0004 08B5     		push	{r3, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
1152:Src/main.c    ****     printf("Publish result: %d\n", result);
  42              		.loc 1 1152 0
  43 0006 0248     		ldr	r0, .L8
  44              	.LVL1:
  45 0008 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 22


  46              	.LVL2:
  47 000c 08BD     		pop	{r3, pc}
  48              	.L9:
  49 000e 00BF     		.align	2
  50              	.L8:
  51 0010 00000000 		.word	.LC3
  52              		.cfi_endproc
  53              	.LFE177:
  55              		.section	.text.mqtt_sub_request_cb,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv5-sp-d16
  62              	mqtt_sub_request_cb:
  63              	.LFB174:
1063:Src/main.c    ****   /* Just print the result code here for simplicity,
  64              		.loc 1 1063 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              	.LVL3:
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
  74 0002 0C46     		mov	r4, r1
1067:Src/main.c    ****   if(result == ERR_OK){
  75              		.loc 1 1067 0
  76 0004 0448     		ldr	r0, .L14
  77              	.LVL4:
  78 0006 FFF7FEFF 		bl	printf
  79              	.LVL5:
1068:Src/main.c    ****   printf("Subscribe result is OK!\n");
  80              		.loc 1 1068 0
  81 000a 04B1     		cbz	r4, .L13
  82              	.L10:
  83 000c 10BD     		pop	{r4, pc}
  84              	.L13:
1069:Src/main.c    ****   }
  85              		.loc 1 1069 0
  86 000e 0348     		ldr	r0, .L14+4
  87 0010 FFF7FEFF 		bl	puts
  88              	.LVL6:
1071:Src/main.c    **** 
  89              		.loc 1 1071 0
  90 0014 FAE7     		b	.L10
  91              	.L15:
  92 0016 00BF     		.align	2
  93              	.L14:
  94 0018 00000000 		.word	.LC4
  95 001c 18000000 		.word	.LC5
  96              		.cfi_endproc
  97              	.LFE174:
  99              		.section	.text.MX_GPIO_Init,"ax",%progbits
 100              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 23


 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv5-sp-d16
 106              	MX_GPIO_Init:
 107              	.LFB171:
 837:Src/main.c    **** 
 108              		.loc 1 837 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 64
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 36
 115              		.cfi_offset 4, -36
 116              		.cfi_offset 5, -32
 117              		.cfi_offset 6, -28
 118              		.cfi_offset 7, -24
 119              		.cfi_offset 8, -20
 120              		.cfi_offset 9, -16
 121              		.cfi_offset 10, -12
 122              		.cfi_offset 11, -8
 123              		.cfi_offset 14, -4
 124 0004 91B0     		sub	sp, sp, #68
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 104
 127              	.LBB2:
 842:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 128              		.loc 1 842 0
 129 0006 954B     		ldr	r3, .L18
 130 0008 1A6B     		ldr	r2, [r3, #48]
 131 000a 42F01002 		orr	r2, r2, #16
 132 000e 1A63     		str	r2, [r3, #48]
 133 0010 1A6B     		ldr	r2, [r3, #48]
 134 0012 02F01002 		and	r2, r2, #16
 135 0016 0092     		str	r2, [sp]
 136 0018 009A     		ldr	r2, [sp]
 137              	.LBE2:
 138              	.LBB3:
 843:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 139              		.loc 1 843 0
 140 001a 1A6B     		ldr	r2, [r3, #48]
 141 001c 42F04002 		orr	r2, r2, #64
 142 0020 1A63     		str	r2, [r3, #48]
 143 0022 1A6B     		ldr	r2, [r3, #48]
 144 0024 02F04002 		and	r2, r2, #64
 145 0028 0192     		str	r2, [sp, #4]
 146 002a 019A     		ldr	r2, [sp, #4]
 147              	.LBE3:
 148              	.LBB4:
 844:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 149              		.loc 1 844 0
 150 002c 1A6B     		ldr	r2, [r3, #48]
 151 002e 42F00202 		orr	r2, r2, #2
 152 0032 1A63     		str	r2, [r3, #48]
 153 0034 1A6B     		ldr	r2, [r3, #48]
 154 0036 02F00202 		and	r2, r2, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 24


 155 003a 0292     		str	r2, [sp, #8]
 156 003c 029A     		ldr	r2, [sp, #8]
 157              	.LBE4:
 158              	.LBB5:
 845:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 159              		.loc 1 845 0
 160 003e 1A6B     		ldr	r2, [r3, #48]
 161 0040 42F00802 		orr	r2, r2, #8
 162 0044 1A63     		str	r2, [r3, #48]
 163 0046 1A6B     		ldr	r2, [r3, #48]
 164 0048 02F00802 		and	r2, r2, #8
 165 004c 0392     		str	r2, [sp, #12]
 166 004e 039A     		ldr	r2, [sp, #12]
 167              	.LBE5:
 168              	.LBB6:
 846:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 169              		.loc 1 846 0
 170 0050 1A6B     		ldr	r2, [r3, #48]
 171 0052 42F00402 		orr	r2, r2, #4
 172 0056 1A63     		str	r2, [r3, #48]
 173 0058 1A6B     		ldr	r2, [r3, #48]
 174 005a 02F00402 		and	r2, r2, #4
 175 005e 0492     		str	r2, [sp, #16]
 176 0060 049A     		ldr	r2, [sp, #16]
 177              	.LBE6:
 178              	.LBB7:
 847:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 179              		.loc 1 847 0
 180 0062 1A6B     		ldr	r2, [r3, #48]
 181 0064 42F00102 		orr	r2, r2, #1
 182 0068 1A63     		str	r2, [r3, #48]
 183 006a 1A6B     		ldr	r2, [r3, #48]
 184 006c 02F00102 		and	r2, r2, #1
 185 0070 0592     		str	r2, [sp, #20]
 186 0072 059A     		ldr	r2, [sp, #20]
 187              	.LBE7:
 188              	.LBB8:
 848:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 189              		.loc 1 848 0
 190 0074 1A6B     		ldr	r2, [r3, #48]
 191 0076 42F40072 		orr	r2, r2, #512
 192 007a 1A63     		str	r2, [r3, #48]
 193 007c 1A6B     		ldr	r2, [r3, #48]
 194 007e 02F40072 		and	r2, r2, #512
 195 0082 0692     		str	r2, [sp, #24]
 196 0084 069A     		ldr	r2, [sp, #24]
 197              	.LBE8:
 198              	.LBB9:
 849:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 199              		.loc 1 849 0
 200 0086 1A6B     		ldr	r2, [r3, #48]
 201 0088 42F48072 		orr	r2, r2, #256
 202 008c 1A63     		str	r2, [r3, #48]
 203 008e 1A6B     		ldr	r2, [r3, #48]
 204 0090 02F48072 		and	r2, r2, #256
 205 0094 0792     		str	r2, [sp, #28]
 206 0096 079A     		ldr	r2, [sp, #28]
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 25


 207              	.LBE9:
 208              	.LBB10:
 850:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 209              		.loc 1 850 0
 210 0098 1A6B     		ldr	r2, [r3, #48]
 211 009a 42F48062 		orr	r2, r2, #1024
 212 009e 1A63     		str	r2, [r3, #48]
 213 00a0 1A6B     		ldr	r2, [r3, #48]
 214 00a2 02F48062 		and	r2, r2, #1024
 215 00a6 0892     		str	r2, [sp, #32]
 216 00a8 089A     		ldr	r2, [sp, #32]
 217              	.LBE10:
 218              	.LBB11:
 851:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 219              		.loc 1 851 0
 220 00aa 1A6B     		ldr	r2, [r3, #48]
 221 00ac 42F02002 		orr	r2, r2, #32
 222 00b0 1A63     		str	r2, [r3, #48]
 223 00b2 1A6B     		ldr	r2, [r3, #48]
 224 00b4 02F02002 		and	r2, r2, #32
 225 00b8 0992     		str	r2, [sp, #36]
 226 00ba 099A     		ldr	r2, [sp, #36]
 227              	.LBE11:
 228              	.LBB12:
 852:Src/main.c    **** 
 229              		.loc 1 852 0
 230 00bc 1A6B     		ldr	r2, [r3, #48]
 231 00be 42F08002 		orr	r2, r2, #128
 232 00c2 1A63     		str	r2, [r3, #48]
 233 00c4 1B6B     		ldr	r3, [r3, #48]
 234 00c6 03F08003 		and	r3, r3, #128
 235 00ca 0A93     		str	r3, [sp, #40]
 236 00cc 0A9B     		ldr	r3, [sp, #40]
 237              	.LBE12:
 855:Src/main.c    **** 
 238              		.loc 1 855 0
 239 00ce 0122     		movs	r2, #1
 240 00d0 2021     		movs	r1, #32
 241 00d2 6348     		ldr	r0, .L18+4
 242 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 243              	.LVL7:
 858:Src/main.c    **** 
 244              		.loc 1 858 0
 245 00d8 0022     		movs	r2, #0
 246 00da 0C21     		movs	r1, #12
 247 00dc 6148     		ldr	r0, .L18+8
 248 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 249              	.LVL8:
 861:Src/main.c    **** 
 250              		.loc 1 861 0
 251 00e2 0122     		movs	r2, #1
 252 00e4 0821     		movs	r1, #8
 253 00e6 6048     		ldr	r0, .L18+12
 254 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 255              	.LVL9:
 864:Src/main.c    **** 
 256              		.loc 1 864 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 26


 257 00ec 0122     		movs	r2, #1
 258 00ee 4FF48051 		mov	r1, #4096
 259 00f2 5C48     		ldr	r0, .L18+8
 260 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL10:
 867:Src/main.c    **** 
 262              		.loc 1 867 0
 263 00f8 DFF88CA1 		ldr	r10, .L18+44
 264 00fc 0022     		movs	r2, #0
 265 00fe 4FF40051 		mov	r1, #8192
 266 0102 5046     		mov	r0, r10
 267 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL11:
 870:Src/main.c    **** 
 269              		.loc 1 870 0
 270 0108 0022     		movs	r2, #0
 271 010a C821     		movs	r1, #200
 272 010c 5748     		ldr	r0, .L18+16
 273 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL12:
 873:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 275              		.loc 1 873 0
 276 0112 4FF0080B 		mov	fp, #8
 277 0116 CDF82CB0 		str	fp, [sp, #44]
 874:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 278              		.loc 1 874 0
 279 011a 0024     		movs	r4, #0
 280 011c 0C94     		str	r4, [sp, #48]
 875:Src/main.c    ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 281              		.loc 1 875 0
 282 011e 0D94     		str	r4, [sp, #52]
 876:Src/main.c    **** 
 283              		.loc 1 876 0
 284 0120 0BA9     		add	r1, sp, #44
 285 0122 5348     		ldr	r0, .L18+20
 286 0124 FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL13:
 880:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
 288              		.loc 1 880 0
 289 0128 43F62343 		movw	r3, #15395
 290 012c 0B93     		str	r3, [sp, #44]
 882:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 291              		.loc 1 882 0
 292 012e 4FF00208 		mov	r8, #2
 293 0132 CDF83080 		str	r8, [sp, #48]
 883:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 294              		.loc 1 883 0
 295 0136 0D94     		str	r4, [sp, #52]
 884:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 296              		.loc 1 884 0
 297 0138 0327     		movs	r7, #3
 298 013a 0E97     		str	r7, [sp, #56]
 885:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 299              		.loc 1 885 0
 300 013c 0A26     		movs	r6, #10
 301 013e 0F96     		str	r6, [sp, #60]
 886:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 27


 302              		.loc 1 886 0
 303 0140 0BA9     		add	r1, sp, #44
 304 0142 4C48     		ldr	r0, .L18+24
 305 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 306              	.LVL14:
 889:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 307              		.loc 1 889 0
 308 0148 4FF48053 		mov	r3, #4096
 309 014c 0B93     		str	r3, [sp, #44]
 890:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 310              		.loc 1 890 0
 311 014e 0C94     		str	r4, [sp, #48]
 891:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 312              		.loc 1 891 0
 313 0150 0D94     		str	r4, [sp, #52]
 892:Src/main.c    **** 
 314              		.loc 1 892 0
 315 0152 0BA9     		add	r1, sp, #44
 316 0154 4848     		ldr	r0, .L18+28
 317 0156 FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL15:
 896:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 319              		.loc 1 896 0
 320 015a 2023     		movs	r3, #32
 321 015c 0B93     		str	r3, [sp, #44]
 897:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 322              		.loc 1 897 0
 323 015e 0125     		movs	r5, #1
 324 0160 0C95     		str	r5, [sp, #48]
 898:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 325              		.loc 1 898 0
 326 0162 0D94     		str	r4, [sp, #52]
 899:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 327              		.loc 1 899 0
 328 0164 0E94     		str	r4, [sp, #56]
 900:Src/main.c    **** 
 329              		.loc 1 900 0
 330 0166 0BA9     		add	r1, sp, #44
 331 0168 3D48     		ldr	r0, .L18+4
 332 016a FFF7FEFF 		bl	HAL_GPIO_Init
 333              	.LVL16:
 903:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 334              		.loc 1 903 0
 335 016e 41F20C03 		movw	r3, #4108
 336 0172 0B93     		str	r3, [sp, #44]
 904:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 337              		.loc 1 904 0
 338 0174 0C95     		str	r5, [sp, #48]
 905:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 339              		.loc 1 905 0
 340 0176 0D94     		str	r4, [sp, #52]
 906:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 341              		.loc 1 906 0
 342 0178 0E94     		str	r4, [sp, #56]
 907:Src/main.c    **** 
 343              		.loc 1 907 0
 344 017a 0BA9     		add	r1, sp, #44
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 28


 345 017c 3948     		ldr	r0, .L18+8
 346 017e FFF7FEFF 		bl	HAL_GPIO_Init
 347              	.LVL17:
 910:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 348              		.loc 1 910 0
 349 0182 4FF40059 		mov	r9, #8192
 350 0186 CDF82C90 		str	r9, [sp, #44]
 911:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 351              		.loc 1 911 0
 352 018a 0C94     		str	r4, [sp, #48]
 912:Src/main.c    ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 353              		.loc 1 912 0
 354 018c 0D94     		str	r4, [sp, #52]
 913:Src/main.c    **** 
 355              		.loc 1 913 0
 356 018e 0BA9     		add	r1, sp, #44
 357 0190 3A48     		ldr	r0, .L18+32
 358 0192 FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL18:
 916:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 360              		.loc 1 916 0
 361 0196 CDF82CB0 		str	fp, [sp, #44]
 917:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 917 0
 363 019a 0C95     		str	r5, [sp, #48]
 918:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 364              		.loc 1 918 0
 365 019c 0D94     		str	r4, [sp, #52]
 919:Src/main.c    ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 366              		.loc 1 919 0
 367 019e 0E94     		str	r4, [sp, #56]
 920:Src/main.c    **** 
 368              		.loc 1 920 0
 369 01a0 0BA9     		add	r1, sp, #44
 370 01a2 3148     		ldr	r0, .L18+12
 371 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 372              	.LVL19:
 923:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 373              		.loc 1 923 0
 374 01a8 4FF0100B 		mov	fp, #16
 375 01ac CDF82CB0 		str	fp, [sp, #44]
 924:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 376              		.loc 1 924 0
 377 01b0 0C94     		str	r4, [sp, #48]
 925:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 378              		.loc 1 925 0
 379 01b2 0D94     		str	r4, [sp, #52]
 926:Src/main.c    **** 
 380              		.loc 1 926 0
 381 01b4 0BA9     		add	r1, sp, #44
 382 01b6 2A48     		ldr	r0, .L18+4
 383 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 384              	.LVL20:
 929:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 385              		.loc 1 929 0
 386 01bc 48F20403 		movw	r3, #32772
 387 01c0 0B93     		str	r3, [sp, #44]
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 29


 930:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 388              		.loc 1 930 0
 389 01c2 0C94     		str	r4, [sp, #48]
 931:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 390              		.loc 1 931 0
 391 01c4 0D94     		str	r4, [sp, #52]
 932:Src/main.c    **** 
 392              		.loc 1 932 0
 393 01c6 0BA9     		add	r1, sp, #44
 394 01c8 5046     		mov	r0, r10
 395 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 396              	.LVL21:
 935:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 397              		.loc 1 935 0
 398 01ce CDF82C90 		str	r9, [sp, #44]
 936:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 399              		.loc 1 936 0
 400 01d2 0C95     		str	r5, [sp, #48]
 937:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 401              		.loc 1 937 0
 402 01d4 0D94     		str	r4, [sp, #52]
 938:Src/main.c    ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 403              		.loc 1 938 0
 404 01d6 0E94     		str	r4, [sp, #56]
 939:Src/main.c    **** 
 405              		.loc 1 939 0
 406 01d8 0BA9     		add	r1, sp, #44
 407 01da 5046     		mov	r0, r10
 408 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 409              	.LVL22:
 942:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 410              		.loc 1 942 0
 411 01e0 CDF82C90 		str	r9, [sp, #44]
 943:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 943 0
 413 01e4 264B     		ldr	r3, .L18+36
 414 01e6 0C93     		str	r3, [sp, #48]
 944:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 415              		.loc 1 944 0
 416 01e8 0D94     		str	r4, [sp, #52]
 945:Src/main.c    **** 
 417              		.loc 1 945 0
 418 01ea 0BA9     		add	r1, sp, #44
 419 01ec 1D48     		ldr	r0, .L18+8
 420 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 421              	.LVL23:
 948:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 422              		.loc 1 948 0
 423 01f2 CDF82CB0 		str	fp, [sp, #44]
 949:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 424              		.loc 1 949 0
 425 01f6 CDF83080 		str	r8, [sp, #48]
 950:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 426              		.loc 1 950 0
 427 01fa 0D94     		str	r4, [sp, #52]
 951:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 428              		.loc 1 951 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 30


 429 01fc 0E97     		str	r7, [sp, #56]
 952:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 430              		.loc 1 952 0
 431 01fe 0F96     		str	r6, [sp, #60]
 953:Src/main.c    **** 
 432              		.loc 1 953 0
 433 0200 0BA9     		add	r1, sp, #44
 434 0202 5046     		mov	r0, r10
 435 0204 FFF7FEFF 		bl	HAL_GPIO_Init
 436              	.LVL24:
 956:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 437              		.loc 1 956 0
 438 0208 C823     		movs	r3, #200
 439 020a 0B93     		str	r3, [sp, #44]
 957:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 440              		.loc 1 957 0
 441 020c 0C95     		str	r5, [sp, #48]
 958:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 442              		.loc 1 958 0
 443 020e 0D94     		str	r4, [sp, #52]
 959:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 444              		.loc 1 959 0
 445 0210 0E94     		str	r4, [sp, #56]
 960:Src/main.c    **** 
 446              		.loc 1 960 0
 447 0212 0BA9     		add	r1, sp, #44
 448 0214 1548     		ldr	r0, .L18+16
 449 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 450              	.LVL25:
 963:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 451              		.loc 1 963 0
 452 021a 0523     		movs	r3, #5
 453 021c 0B93     		str	r3, [sp, #44]
 964:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 454              		.loc 1 964 0
 455 021e CDF83080 		str	r8, [sp, #48]
 965:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 456              		.loc 1 965 0
 457 0222 0D94     		str	r4, [sp, #52]
 966:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 458              		.loc 1 966 0
 459 0224 0E97     		str	r7, [sp, #56]
 967:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 460              		.loc 1 967 0
 461 0226 0F96     		str	r6, [sp, #60]
 968:Src/main.c    **** 
 462              		.loc 1 968 0
 463 0228 0BA9     		add	r1, sp, #44
 464 022a 1448     		ldr	r0, .L18+32
 465 022c FFF7FEFF 		bl	HAL_GPIO_Init
 466              	.LVL26:
 971:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 467              		.loc 1 971 0
 468 0230 0423     		movs	r3, #4
 469 0232 0B93     		str	r3, [sp, #44]
 972:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 470              		.loc 1 972 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 31


 471 0234 0C94     		str	r4, [sp, #48]
 973:Src/main.c    ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 472              		.loc 1 973 0
 473 0236 0D94     		str	r4, [sp, #52]
 974:Src/main.c    **** 
 474              		.loc 1 974 0
 475 0238 0BA9     		add	r1, sp, #44
 476 023a 0C48     		ldr	r0, .L18+16
 477 023c FFF7FEFF 		bl	HAL_GPIO_Init
 478              	.LVL27:
 977:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 479              		.loc 1 977 0
 480 0240 2823     		movs	r3, #40
 481 0242 0B93     		str	r3, [sp, #44]
 978:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 482              		.loc 1 978 0
 483 0244 CDF83080 		str	r8, [sp, #48]
 979:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 484              		.loc 1 979 0
 485 0248 0D94     		str	r4, [sp, #52]
 980:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 486              		.loc 1 980 0
 487 024a 0E97     		str	r7, [sp, #56]
 981:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 488              		.loc 1 981 0
 489 024c 0F96     		str	r6, [sp, #60]
 982:Src/main.c    **** 
 490              		.loc 1 982 0
 491 024e 0BA9     		add	r1, sp, #44
 492 0250 0C48     		ldr	r0, .L18+40
 493 0252 FFF7FEFF 		bl	HAL_GPIO_Init
 494              	.LVL28:
 984:Src/main.c    **** 
 495              		.loc 1 984 0
 496 0256 11B0     		add	sp, sp, #68
 497              	.LCFI4:
 498              		.cfi_def_cfa_offset 36
 499              		@ sp needed
 500 0258 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 501              	.L19:
 502              		.align	2
 503              	.L18:
 504 025c 00380240 		.word	1073887232
 505 0260 000C0240 		.word	1073875968
 506 0264 00200240 		.word	1073881088
 507 0268 00280240 		.word	1073883136
 508 026c 00180240 		.word	1073879040
 509 0270 00100240 		.word	1073876992
 510 0274 00040240 		.word	1073873920
 511 0278 00240240 		.word	1073882112
 512 027c 00080240 		.word	1073874944
 513 0280 00001210 		.word	269615104
 514 0284 00000240 		.word	1073872896
 515 0288 001C0240 		.word	1073880064
 516              		.cfi_endproc
 517              	.LFE171:
 519              		.section	.text.lcd_start,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 32


 520              		.align	1
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv5-sp-d16
 526              	lcd_start:
 527              	.LFB159:
 200:Src/main.c    ****   /* LCD Initialization */
 528              		.loc 1 200 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532 0000 08B5     		push	{r3, lr}
 533              	.LCFI5:
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 3, -8
 536              		.cfi_offset 14, -4
 202:Src/main.c    **** 
 537              		.loc 1 202 0
 538 0002 1A48     		ldr	r0, .L22
 539 0004 FFF7FEFF 		bl	BSP_LCD_SetFont
 540              	.LVL29:
 204:Src/main.c    **** 
 541              		.loc 1 204 0
 542 0008 FFF7FEFF 		bl	BSP_LCD_Init
 543              	.LVL30:
 207:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 544              		.loc 1 207 0
 545 000c 4FF04041 		mov	r1, #-1073741824
 546 0010 0020     		movs	r0, #0
 547 0012 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 548              	.LVL31:
 209:Src/main.c    **** 
 549              		.loc 1 209 0
 550 0016 1649     		ldr	r1, .L22+4
 551 0018 0120     		movs	r0, #1
 552 001a FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 553              	.LVL32:
 212:Src/main.c    **** 
 554              		.loc 1 212 0
 555 001e FFF7FEFF 		bl	BSP_LCD_DisplayOn
 556              	.LVL33:
 215:Src/main.c    **** 
 557              		.loc 1 215 0
 558 0022 0020     		movs	r0, #0
 559 0024 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 560              	.LVL34:
 218:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 561              		.loc 1 218 0
 562 0028 4FF0FF30 		mov	r0, #-1
 563 002c FFF7FEFF 		bl	BSP_LCD_Clear
 564              	.LVL35:
 219:Src/main.c    **** 
 565              		.loc 1 219 0
 566 0030 4FF0FF30 		mov	r0, #-1
 567 0034 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 568              	.LVL36:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 33


 221:Src/main.c    **** 
 569              		.loc 1 221 0
 570 0038 4FF0FF31 		mov	r1, #-1
 571 003c 0120     		movs	r0, #1
 572 003e FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 573              	.LVL37:
 224:Src/main.c    **** 
 574              		.loc 1 224 0
 575 0042 0120     		movs	r0, #1
 576 0044 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 577              	.LVL38:
 227:Src/main.c    ****   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 578              		.loc 1 227 0
 579 0048 4FF0FF30 		mov	r0, #-1
 580 004c FFF7FEFF 		bl	BSP_LCD_Clear
 581              	.LVL39:
 228:Src/main.c    **** 
 582              		.loc 1 228 0
 583 0050 4FF0FF30 		mov	r0, #-1
 584 0054 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 585              	.LVL40:
 232:Src/main.c    ****   BSP_LCD_SetTransparency(1, 255);
 586              		.loc 1 232 0
 587 0058 FF21     		movs	r1, #255
 588 005a 0020     		movs	r0, #0
 589 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 590              	.LVL41:
 233:Src/main.c    **** }
 591              		.loc 1 233 0
 592 0060 FF21     		movs	r1, #255
 593 0062 0120     		movs	r0, #1
 594 0064 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 595              	.LVL42:
 596 0068 08BD     		pop	{r3, pc}
 597              	.L23:
 598 006a 00BF     		.align	2
 599              	.L22:
 600 006c 00000000 		.word	Font12
 601 0070 00F807C0 		.word	-1073219584
 602              		.cfi_endproc
 603              	.LFE159:
 605              		.section	.text.mqtt_incoming_publish_cb,"ax",%progbits
 606              		.align	1
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv5-sp-d16
 612              	mqtt_incoming_publish_cb:
 613              	.LFB175:
1083:Src/main.c    ****   printf("Incoming publish at topic %s with total length %u\n", topic, (unsigned int)tot_len);
 614              		.loc 1 1083 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL43:
 619 0000 10B5     		push	{r4, lr}
 620              	.LCFI6:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 34


 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 624 0002 0C46     		mov	r4, r1
1084:Src/main.c    **** 
 625              		.loc 1 1084 0
 626 0004 0F48     		ldr	r0, .L33
 627              	.LVL44:
 628 0006 FFF7FEFF 		bl	printf
 629              	.LVL45:
 630              	.LBB13:
1087:Src/main.c    ****     inpub_id = 0;
 631              		.loc 1 1087 0
 632 000a 0F49     		ldr	r1, .L33+4
 633 000c 2046     		mov	r0, r4
 634 000e FFF7FEFF 		bl	strcmp
 635              	.LVL46:
 636 0012 58B1     		cbz	r0, .L30
1089:Src/main.c    ****     /* All topics starting with 'A' might be handled at the same way */
 637              		.loc 1 1089 0
 638 0014 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 639 0016 412B     		cmp	r3, #65
 640 0018 0CD0     		beq	.L31
1092:Src/main.c    **** 	inpub_id = 2;
 641              		.loc 1 1092 0
 642 001a 0C49     		ldr	r1, .L33+8
 643 001c 2046     		mov	r0, r4
 644 001e FFF7FEFF 		bl	strcmp
 645              	.LVL47:
 646 0022 58B1     		cbz	r0, .L32
1097:Src/main.c    ****   }
 647              		.loc 1 1097 0
 648 0024 0322     		movs	r2, #3
 649 0026 0A4B     		ldr	r3, .L33+12
 650 0028 1A60     		str	r2, [r3]
 651 002a 10BD     		pop	{r4, pc}
 652              	.LVL48:
 653              	.L30:
1088:Src/main.c    ****   } else if(topic[0] == 'A') {
 654              		.loc 1 1088 0
 655 002c 0022     		movs	r2, #0
 656 002e 084B     		ldr	r3, .L33+12
 657 0030 1A60     		str	r2, [r3]
 658 0032 10BD     		pop	{r4, pc}
 659              	.LVL49:
 660              	.L31:
1091:Src/main.c    ****   } else if(strcmp(topic,"esp/temperature/client1") == 0){
 661              		.loc 1 1091 0
 662 0034 0122     		movs	r2, #1
 663 0036 064B     		ldr	r3, .L33+12
 664 0038 1A60     		str	r2, [r3]
 665 003a 10BD     		pop	{r4, pc}
 666              	.LVL50:
 667              	.L32:
1093:Src/main.c    ****   }
 668              		.loc 1 1093 0
 669 003c 0222     		movs	r2, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 35


 670 003e 044B     		ldr	r3, .L33+12
 671 0040 1A60     		str	r2, [r3]
 672 0042 10BD     		pop	{r4, pc}
 673              	.LVL51:
 674              	.L34:
 675              		.align	2
 676              	.L33:
 677 0044 00000000 		.word	.LC6
 678 0048 34000000 		.word	.LC7
 679 004c 44000000 		.word	.LC8
 680 0050 00000000 		.word	.LANCHOR0
 681              	.LBE13:
 682              		.cfi_endproc
 683              	.LFE175:
 685              		.section	.text.__io_putchar,"ax",%progbits
 686              		.align	1
 687              		.global	__io_putchar
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv5-sp-d16
 693              	__io_putchar:
 694              	.LFB157:
 174:Src/main.c    **** 	uint8_t data = ch;
 695              		.loc 1 174 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700              	.LVL52:
 701              	.L36:
 179:Src/main.c    **** 		huart1.Instance->TDR = (uint16_t)data;
 702              		.loc 1 179 0 discriminator 1
 703 0000 044B     		ldr	r3, .L37
 704 0002 1B68     		ldr	r3, [r3]
 705 0004 DA69     		ldr	r2, [r3, #28]
 706 0006 12F0800F 		tst	r2, #128
 707 000a F9D0     		beq	.L36
 180:Src/main.c    **** 	#endif
 708              		.loc 1 180 0
 709 000c C0B2     		uxtb	r0, r0
 710              	.LVL53:
 711 000e 9862     		str	r0, [r3, #40]
 183:Src/main.c    **** 
 712              		.loc 1 183 0
 713 0010 0020     		movs	r0, #0
 714 0012 7047     		bx	lr
 715              	.L38:
 716              		.align	2
 717              	.L37:
 718 0014 00000000 		.word	huart1
 719              		.cfi_endproc
 720              	.LFE157:
 722              		.section	.text.inkey,"ax",%progbits
 723              		.align	1
 724              		.global	inkey
 725              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 36


 726              		.thumb
 727              		.thumb_func
 728              		.fpu fpv5-sp-d16
 730              	inkey:
 731              	.LFB158:
 186:Src/main.c    **** 	uint32_t flags = huart1.Instance->ISR;
 732              		.loc 1 186 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 187:Src/main.c    **** 
 737              		.loc 1 187 0
 738 0000 064B     		ldr	r3, .L42
 739 0002 1B68     		ldr	r3, [r3]
 740 0004 DA69     		ldr	r2, [r3, #28]
 741              	.LVL54:
 189:Src/main.c    **** 	{
 742              		.loc 1 189 0
 743 0006 12F0280F 		tst	r2, #40
 744 000a 04D0     		beq	.L41
 191:Src/main.c    **** 		return (huart1.Instance->RDR);
 745              		.loc 1 191 0
 746 000c 0822     		movs	r2, #8
 747              	.LVL55:
 748 000e 1A62     		str	r2, [r3, #32]
 192:Src/main.c    **** 	}
 749              		.loc 1 192 0
 750 0010 586A     		ldr	r0, [r3, #36]
 751 0012 C0B2     		uxtb	r0, r0
 752 0014 7047     		bx	lr
 753              	.LVL56:
 754              	.L41:
 195:Src/main.c    **** }
 755              		.loc 1 195 0
 756 0016 0020     		movs	r0, #0
 196:Src/main.c    **** 
 757              		.loc 1 196 0
 758 0018 7047     		bx	lr
 759              	.L43:
 760 001a 00BF     		.align	2
 761              	.L42:
 762 001c 00000000 		.word	huart1
 763              		.cfi_endproc
 764              	.LFE158:
 766              		.section	.text.draw_background,"ax",%progbits
 767              		.align	1
 768              		.global	draw_background
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv5-sp-d16
 774              	draw_background:
 775              	.LFB160:
 239:Src/main.c    **** 	/* Select the LCD Background Layer  */
 776              		.loc 1 239 0
 777              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 37


 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 08B5     		push	{r3, lr}
 781              	.LCFI7:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 3, -8
 784              		.cfi_offset 14, -4
 241:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 785              		.loc 1 241 0
 786 0002 0020     		movs	r0, #0
 787 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 788              	.LVL57:
 242:Src/main.c    **** 	BSP_LCD_FillRect(0,0,LCD_X_SIZE,LCD_Y_SIZE);
 789              		.loc 1 242 0
 790 0008 4FF0FF20 		mov	r0, #-16711936
 791 000c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 792              	.LVL58:
 243:Src/main.c    **** 
 793              		.loc 1 243 0
 794 0010 4FF48873 		mov	r3, #272
 795 0014 4FF4F072 		mov	r2, #480
 796 0018 0021     		movs	r1, #0
 797 001a 0846     		mov	r0, r1
 798 001c FFF7FEFF 		bl	BSP_LCD_FillRect
 799              	.LVL59:
 246:Src/main.c    **** 	// char greeting[] = "Hello";
 800              		.loc 1 246 0
 801 0020 0120     		movs	r0, #1
 802 0022 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 803              	.LVL60:
 804 0026 08BD     		pop	{r3, pc}
 805              		.cfi_endproc
 806              	.LFE160:
 808              		.section	.text.draw_button,"ax",%progbits
 809              		.align	1
 810              		.global	draw_button
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv5-sp-d16
 816              	draw_button:
 817              	.LFB161:
 251:Src/main.c    ****   int xPos = button[0];
 818              		.loc 1 251 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL61:
 823 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 824              	.LCFI8:
 825              		.cfi_def_cfa_offset 32
 826              		.cfi_offset 3, -32
 827              		.cfi_offset 4, -28
 828              		.cfi_offset 5, -24
 829              		.cfi_offset 6, -20
 830              		.cfi_offset 7, -16
 831              		.cfi_offset 8, -12
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 38


 832              		.cfi_offset 9, -8
 833              		.cfi_offset 14, -4
 834 0004 8946     		mov	r9, r1
 835 0006 1646     		mov	r6, r2
 252:Src/main.c    ****   int yPos = button[1];
 836              		.loc 1 252 0
 837 0008 0468     		ldr	r4, [r0]
 838              	.LVL62:
 253:Src/main.c    ****   int width = button[2];
 839              		.loc 1 253 0
 840 000a 4568     		ldr	r5, [r0, #4]
 841              	.LVL63:
 254:Src/main.c    ****   int height = button[3];
 842              		.loc 1 254 0
 843 000c D0F80880 		ldr	r8, [r0, #8]
 844              	.LVL64:
 255:Src/main.c    **** 
 845              		.loc 1 255 0
 846 0010 C768     		ldr	r7, [r0, #12]
 847              	.LVL65:
 257:Src/main.c    **** 	BSP_LCD_SetTextColor(color);
 848              		.loc 1 257 0
 849 0012 0020     		movs	r0, #0
 850              	.LVL66:
 851 0014 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 852              	.LVL67:
 258:Src/main.c    **** 	BSP_LCD_DrawRect(xPos,yPos,width,height);
 853              		.loc 1 258 0
 854 0018 4846     		mov	r0, r9
 855 001a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 856              	.LVL68:
 259:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 857              		.loc 1 259 0
 858 001e A4B2     		uxth	r4, r4
 859              	.LVL69:
 860 0020 ADB2     		uxth	r5, r5
 861              	.LVL70:
 862 0022 BBB2     		uxth	r3, r7
 863 0024 1FFA88F2 		uxth	r2, r8
 864 0028 2946     		mov	r1, r5
 865 002a 2046     		mov	r0, r4
 866 002c FFF7FEFF 		bl	BSP_LCD_DrawRect
 867              	.LVL71:
 260:Src/main.c    **** 	BSP_LCD_DisplayStringAt(xPos+5, yPos+height/2, text, 0);
 868              		.loc 1 260 0
 869 0030 0948     		ldr	r0, .L50
 870 0032 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 871              	.LVL72:
 261:Src/main.c    **** 
 872              		.loc 1 261 0
 873 0036 3946     		mov	r1, r7
 874 0038 002F     		cmp	r7, #0
 875 003a 0ADB     		blt	.L49
 876              	.L47:
 877 003c 05EB6101 		add	r1, r5, r1, asr #1
 878 0040 601D     		adds	r0, r4, #5
 879 0042 0023     		movs	r3, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 39


 880 0044 3246     		mov	r2, r6
 881 0046 89B2     		uxth	r1, r1
 882 0048 80B2     		uxth	r0, r0
 883 004a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 884              	.LVL73:
 885 004e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 886              	.LVL74:
 887              	.L49:
 888 0052 791C     		adds	r1, r7, #1
 889              	.LVL75:
 890 0054 F2E7     		b	.L47
 891              	.L51:
 892 0056 00BF     		.align	2
 893              	.L50:
 894 0058 800000FF 		.word	-16777088
 895              		.cfi_endproc
 896              	.LFE161:
 898              		.section	.text.draw_chart,"ax",%progbits
 899              		.align	1
 900              		.global	draw_chart
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv5-sp-d16
 906              	draw_chart:
 907              	.LFB162:
 265:Src/main.c    **** 	if(current_pos == BUFFER_SIZE - 1 || current_pos == BUFFER_SIZE - 2){
 908              		.loc 1 265 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 24
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 266:Src/main.c    **** 		return;
 912              		.loc 1 266 0
 913 0000 A04B     		ldr	r3, .L80
 914 0002 1B68     		ldr	r3, [r3]
 915 0004 C63B     		subs	r3, r3, #198
 916 0006 012B     		cmp	r3, #1
 917 0008 40F23A81 		bls	.L74
 265:Src/main.c    **** 	if(current_pos == BUFFER_SIZE - 1 || current_pos == BUFFER_SIZE - 2){
 918              		.loc 1 265 0
 919 000c F0B5     		push	{r4, r5, r6, r7, lr}
 920              	.LCFI9:
 921              		.cfi_def_cfa_offset 20
 922              		.cfi_offset 4, -20
 923              		.cfi_offset 5, -16
 924              		.cfi_offset 6, -12
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 000e 2DED048B 		vpush.64	{d8, d9}
 928              	.LCFI10:
 929              		.cfi_def_cfa_offset 36
 930              		.cfi_offset 80, -36
 931              		.cfi_offset 81, -32
 932              		.cfi_offset 82, -28
 933              		.cfi_offset 83, -24
 934 0012 87B0     		sub	sp, sp, #28
 935              	.LCFI11:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 40


 936              		.cfi_def_cfa_offset 64
 937              	.LVL76:
 277:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 938              		.loc 1 277 0
 939 0014 0020     		movs	r0, #0
 940 0016 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 941              	.LVL77:
 278:Src/main.c    ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 942              		.loc 1 278 0
 943 001a 4FF0FF30 		mov	r0, #-1
 944 001e FFF7FEFF 		bl	BSP_LCD_Clear
 945              	.LVL78:
 279:Src/main.c    ****     BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos,chart_length);
 946              		.loc 1 279 0
 947 0022 4FF07F40 		mov	r0, #-16777216
 948 0026 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 949              	.LVL79:
 280:Src/main.c    ****     BSP_LCD_DrawVLine(chart_x_pos,chart_y_pos_coord,chart_height_coord);
 950              		.loc 1 280 0
 951 002a 4FF4E172 		mov	r2, #450
 952 002e FA21     		movs	r1, #250
 953 0030 1420     		movs	r0, #20
 954 0032 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 955              	.LVL80:
 281:Src/main.c    ****     
 956              		.loc 1 281 0
 957 0036 E622     		movs	r2, #230
 958 0038 1421     		movs	r1, #20
 959 003a 0846     		mov	r0, r1
 960 003c FFF7FEFF 		bl	BSP_LCD_DrawVLine
 961              	.LVL81:
 962              	.LBB14:
 287:Src/main.c    ****         if(buffer[i] != INT32_MIN)
 963              		.loc 1 287 0
 964 0040 0023     		movs	r3, #0
 965              	.LBE14:
 286:Src/main.c    ****     for(int i = 0; i < BUFFER_SIZE; i++){
 966              		.loc 1 286 0
 967 0042 1C46     		mov	r4, r3
 968              	.LBB15:
 287:Src/main.c    ****         if(buffer[i] != INT32_MIN)
 969              		.loc 1 287 0
 970 0044 00E0     		b	.L54
 971              	.LVL82:
 972              	.L55:
 287:Src/main.c    ****         if(buffer[i] != INT32_MIN)
 973              		.loc 1 287 0 is_stmt 0 discriminator 2
 974 0046 0133     		adds	r3, r3, #1
 975              	.LVL83:
 976              	.L54:
 287:Src/main.c    ****         if(buffer[i] != INT32_MIN)
 977              		.loc 1 287 0 discriminator 1
 978 0048 C72B     		cmp	r3, #199
 979 004a 0DDC     		bgt	.L77
 288:Src/main.c    ****             n++;
 980              		.loc 1 288 0 is_stmt 1
 981 004c 8E4A     		ldr	r2, .L80+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 41


 982 004e 02EB8302 		add	r2, r2, r3, lsl #2
 983 0052 92ED007A 		vldr.32	s14, [r2]
 984 0056 DFED8D7A 		vldr.32	s15, .L80+8
 985 005a B4EE677A 		vcmp.f32	s14, s15
 986 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 987 0062 F0D0     		beq	.L55
 289:Src/main.c    ****     }
 988              		.loc 1 289 0
 989 0064 0134     		adds	r4, r4, #1
 990              	.LVL84:
 991 0066 EEE7     		b	.L55
 992              	.L77:
 993 0068 0123     		movs	r3, #1
 994              	.LVL85:
 995 006a B3EE047A 		vmov.f32	s14, #2.0e+1
 996 006e F3EE0E8A 		vmov.f32	s17, #3.0e+1
 997 0072 00E0     		b	.L57
 998              	.LVL86:
 999              	.L59:
 1000              	.LBE15:
 1001              	.LBB16:
 296:Src/main.c    ****       if(buffer[i] < min)
 1002              		.loc 1 296 0 discriminator 2
 1003 0074 0133     		adds	r3, r3, #1
 1004              	.LVL87:
 1005              	.L57:
 296:Src/main.c    ****       if(buffer[i] < min)
 1006              		.loc 1 296 0 is_stmt 0 discriminator 1
 1007 0076 9C42     		cmp	r4, r3
 1008 0078 13DD     		ble	.L78
 297:Src/main.c    ****           min = buffer[i];
 1009              		.loc 1 297 0 is_stmt 1
 1010 007a 834A     		ldr	r2, .L80+4
 1011 007c 02EB8302 		add	r2, r2, r3, lsl #2
 1012 0080 D2ED007A 		vldr.32	s15, [r2]
 1013 0084 B4EEE77A 		vcmpe.f32	s14, s15
 1014 0088 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1015 008c 01DD     		ble	.L58
 298:Src/main.c    ****       if(buffer[i] > max)
 1016              		.loc 1 298 0
 1017 008e B0EE677A 		vmov.f32	s14, s15
 1018              	.LVL88:
 1019              	.L58:
 299:Src/main.c    ****           max = buffer[i];
 1020              		.loc 1 299 0
 1021 0092 F4EEE78A 		vcmpe.f32	s17, s15
 1022 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1023 009a EBD5     		bpl	.L59
 300:Src/main.c    ****     }
 1024              		.loc 1 300 0
 1025 009c F0EE678A 		vmov.f32	s17, s15
 1026              	.LVL89:
 1027 00a0 E8E7     		b	.L59
 1028              	.LVL90:
 1029              	.L78:
 1030              	.LBE16:
 302:Src/main.c    ****     int max_i = max;
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 42


 1031              		.loc 1 302 0
 1032 00a2 FDEEC77A 		vcvt.s32.f32	s15, s14
 1033 00a6 17EE905A 		vmov	r5, s15	@ int
 1034              	.LVL91:
 303:Src/main.c    ****     float coordinates_scale = chart_height/(max_i - min_i);
 1035              		.loc 1 303 0
 1036 00aa FDEEE87A 		vcvt.s32.f32	s15, s17
 1037 00ae 17EE903A 		vmov	r3, s15	@ int
 1038              	.LVL92:
 304:Src/main.c    ****     float amplitude = max - min; // ?
 1039              		.loc 1 304 0
 1040 00b2 5A1B     		subs	r2, r3, r5
 1041 00b4 C823     		movs	r3, #200
 1042              	.LVL93:
 1043 00b6 93FBF2F3 		sdiv	r3, r3, r2
 1044 00ba 07EE903A 		vmov	s15, r3	@ int
 1045              	.LVL94:
 1046 00be B8EEE79A 		vcvt.f32.s32	s18, s15
 1047              	.LVL95:
 305:Src/main.c    ****     float scale = chart_height/amplitude; // ?
 1048              		.loc 1 305 0
 1049 00c2 38EEC78A 		vsub.f32	s16, s17, s14
 1050              	.LVL96:
 310:Src/main.c    ****     for(int i=1;i<amplitude;i++){
 1051              		.loc 1 310 0
 1052 00c6 7248     		ldr	r0, .L80+12
 1053 00c8 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1054              	.LVL97:
 1055              	.LBB17:
 311:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 1056              		.loc 1 311 0
 1057 00cc 0126     		movs	r6, #1
 1058 00ce 11E0     		b	.L61
 1059              	.LVL98:
 1060              	.L62:
 312:Src/main.c    ****     }
 1061              		.loc 1 312 0 discriminator 3
 1062 00d0 69EE277A 		vmul.f32	s15, s18, s15
 1063 00d4 9FED6F7A 		vldr.32	s14, .L80+16
 1064 00d8 77EE677A 		vsub.f32	s15, s14, s15
 1065 00dc FCEEE77A 		vcvt.u32.f32	s15, s15
 1066 00e0 CDED007A 		vstr.32	s15, [sp]	@ int
 1067 00e4 4FF4E172 		mov	r2, #450
 1068 00e8 BDF80010 		ldrh	r1, [sp]
 1069 00ec 1420     		movs	r0, #20
 1070 00ee FFF7FEFF 		bl	BSP_LCD_DrawHLine
 1071              	.LVL99:
 311:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 1072              		.loc 1 311 0 discriminator 3
 1073 00f2 0136     		adds	r6, r6, #1
 1074              	.LVL100:
 1075              	.L61:
 311:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 1076              		.loc 1 311 0 is_stmt 0 discriminator 1
 1077 00f4 07EE906A 		vmov	s15, r6	@ int
 1078 00f8 F8EEE77A 		vcvt.f32.s32	s15, s15
 1079 00fc B4EEE78A 		vcmpe.f32	s16, s15
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 43


 1080 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1081 0104 E4DC     		bgt	.L62
 1082              	.LBE17:
 316:Src/main.c    **** 
 1083              		.loc 1 316 0 is_stmt 1
 1084 0106 6448     		ldr	r0, .L80+20
 1085 0108 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1086              	.LVL101:
 318:Src/main.c    ****   int stop_cond; 
 1087              		.loc 1 318 0
 1088 010c 4FF4E177 		mov	r7, #450
 1089 0110 97FBF4F7 		sdiv	r7, r7, r4
 1090              	.LVL102:
 321:Src/main.c    **** 		stop_cond = BUFFER_SIZE -1;
 1091              		.loc 1 321 0
 1092 0114 614B     		ldr	r3, .L80+24
 1093 0116 1968     		ldr	r1, [r3]
 1094 0118 09B1     		cbz	r1, .L72
 325:Src/main.c    **** 	}
 1095              		.loc 1 325 0
 1096 011a 4E1E     		subs	r6, r1, #1
 1097              	.LVL103:
 1098 011c 02E0     		b	.L64
 1099              	.LVL104:
 1100              	.L72:
 322:Src/main.c    **** 	} 
 1101              		.loc 1 322 0
 1102 011e C726     		movs	r6, #199
 1103              	.LVL105:
 1104              	.LBB18:
 327:Src/main.c    ****       if(buffer[(i+1)%BUFFER_SIZE] != INT32_MIN) {
 1105              		.loc 1 327 0
 1106 0120 00E0     		b	.L64
 1107              	.LVL106:
 1108              	.L65:
 1109              	.LBE18:
 322:Src/main.c    **** 	} 
 1110              		.loc 1 322 0 discriminator 1
 1111 0122 2146     		mov	r1, r4
 1112              	.L64:
 1113              	.LVL107:
 1114              	.LBB20:
 327:Src/main.c    ****       if(buffer[(i+1)%BUFFER_SIZE] != INT32_MIN) {
 1115              		.loc 1 327 0 discriminator 1
 1116 0124 8E42     		cmp	r6, r1
 1117 0126 4ED0     		beq	.L79
 328:Src/main.c    **** 		  //printf("i:  %d\n",i);
 1118              		.loc 1 328 0
 1119 0128 4B1C     		adds	r3, r1, #1
 1120 012a 5D4A     		ldr	r2, .L80+28
 1121 012c 82FB0302 		smull	r0, r2, r2, r3
 1122 0130 DC17     		asrs	r4, r3, #31
 1123 0132 C4EBA214 		rsb	r4, r4, r2, asr #6
 1124 0136 C822     		movs	r2, #200
 1125 0138 02FB1434 		mls	r4, r2, r4, r3
 1126 013c 524A     		ldr	r2, .L80+4
 1127 013e 02EB8402 		add	r2, r2, r4, lsl #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 44


 1128 0142 D2ED007A 		vldr.32	s15, [r2]
 1129 0146 9FED517A 		vldr.32	s14, .L80+8
 1130 014a F4EE477A 		vcmp.f32	s15, s14
 1131 014e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1132 0152 E6D0     		beq	.L65
 1133              	.LBB19:
 331:Src/main.c    ****           x2 = chart_x_pos + (i + 1) * sample_len;
 1134              		.loc 1 331 0
 1135 0154 07FB01F0 		mul	r0, r7, r1
 1136 0158 1430     		adds	r0, r0, #20
 1137              	.LVL108:
 332:Src/main.c    ****           y1 = chart_y_pos - (buffer[i%BUFFER_SIZE] - min_i) * coordinates_scale;
 1138              		.loc 1 332 0
 1139 015a 03FB07F3 		mul	r3, r3, r7
 1140 015e 03F11402 		add	r2, r3, #20
 1141              	.LVL109:
 333:Src/main.c    ****           y2 = chart_y_pos - (buffer[(i + 1)%BUFFER_SIZE] - min_i) * coordinates_scale;
 1142              		.loc 1 333 0
 1143 0162 4F4B     		ldr	r3, .L80+28
 1144 0164 83FB013E 		smull	r3, lr, r3, r1
 1145 0168 CB17     		asrs	r3, r1, #31
 1146 016a C3EBAE13 		rsb	r3, r3, lr, asr #6
 1147 016e 4FF0C80E 		mov	lr, #200
 1148 0172 0EFB1313 		mls	r3, lr, r3, r1
 1149 0176 4449     		ldr	r1, .L80+4
 1150              	.LVL110:
 1151 0178 01EB8303 		add	r3, r1, r3, lsl #2
 1152 017c 93ED007A 		vldr.32	s14, [r3]
 1153 0180 06EE905A 		vmov	s13, r5	@ int
 1154 0184 B8EEE66A 		vcvt.f32.s32	s12, s13
 1155 0188 37EE467A 		vsub.f32	s14, s14, s12
 1156 018c 29EE077A 		vmul.f32	s14, s18, s14
 1157 0190 DFED406A 		vldr.32	s13, .L80+16
 1158 0194 36EEC77A 		vsub.f32	s14, s13, s14
 1159 0198 BDEEC77A 		vcvt.s32.f32	s14, s14
 1160 019c 8DED007A 		vstr.32	s14, [sp]	@ int
 1161              	.LVL111:
 334:Src/main.c    ****           BSP_LCD_DrawLine(x1, y1, x2, y2);
 1162              		.loc 1 334 0
 1163 01a0 77EEC67A 		vsub.f32	s15, s15, s12
 1164 01a4 69EE277A 		vmul.f32	s15, s18, s15
 1165 01a8 76EEE77A 		vsub.f32	s15, s13, s15
 1166 01ac FDEEE77A 		vcvt.s32.f32	s15, s15
 1167 01b0 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1168              	.LVL112:
 335:Src/main.c    ****       }
 1169              		.loc 1 335 0
 1170 01b4 BDF80430 		ldrh	r3, [sp, #4]
 1171 01b8 92B2     		uxth	r2, r2
 1172              	.LVL113:
 1173 01ba BDF80010 		ldrh	r1, [sp]
 1174 01be 80B2     		uxth	r0, r0
 1175              	.LVL114:
 1176 01c0 FFF7FEFF 		bl	BSP_LCD_DrawLine
 1177              	.LVL115:
 1178 01c4 ADE7     		b	.L65
 1179              	.LVL116:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 45


 1180              	.L79:
 1181              	.LBE19:
 1182              	.LBE20:
 341:Src/main.c    **** 	Point points[3];
 1183              		.loc 1 341 0
 1184 01c6 4FF07F40 		mov	r0, #-16777216
 1185 01ca FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1186              	.LVL117:
 343:Src/main.c    **** 	points[1].X=chart_x_pos-5;
 1187              		.loc 1 343 0
 1188 01ce 1923     		movs	r3, #25
 1189 01d0 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 344:Src/main.c    **** 	points[2].X=chart_x_pos;
 1190              		.loc 1 344 0
 1191 01d4 0F23     		movs	r3, #15
 1192 01d6 ADF81030 		strh	r3, [sp, #16]	@ movhi
 345:Src/main.c    **** 	
 1193              		.loc 1 345 0
 1194 01da 1423     		movs	r3, #20
 1195 01dc ADF81430 		strh	r3, [sp, #20]	@ movhi
 347:Src/main.c    **** 	points[1].Y=chart_y_pos_coord+10;
 1196              		.loc 1 347 0
 1197 01e0 1E22     		movs	r2, #30
 1198 01e2 ADF80E20 		strh	r2, [sp, #14]	@ movhi
 348:Src/main.c    **** 	points[2].Y=chart_y_pos_coord;
 1199              		.loc 1 348 0
 1200 01e6 ADF81220 		strh	r2, [sp, #18]	@ movhi
 349:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 1201              		.loc 1 349 0
 1202 01ea ADF81630 		strh	r3, [sp, #22]	@ movhi
 350:Src/main.c    **** 
 1203              		.loc 1 350 0
 1204 01ee 0321     		movs	r1, #3
 1205 01f0 03A8     		add	r0, sp, #12
 1206 01f2 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1207              	.LVL118:
 352:Src/main.c    **** 	points[1].X=chart_x_pos+chart_length;
 1208              		.loc 1 352 0
 1209 01f6 4FF4E673 		mov	r3, #460
 1210 01fa ADF80C30 		strh	r3, [sp, #12]	@ movhi
 353:Src/main.c    **** 	points[2].X=chart_x_pos+chart_length-10;
 1211              		.loc 1 353 0
 1212 01fe 4FF4EB72 		mov	r2, #470
 1213 0202 ADF81020 		strh	r2, [sp, #16]	@ movhi
 354:Src/main.c    **** 
 1214              		.loc 1 354 0
 1215 0206 ADF81430 		strh	r3, [sp, #20]	@ movhi
 356:Src/main.c    **** 	points[1].Y=chart_y_pos;
 1216              		.loc 1 356 0
 1217 020a F523     		movs	r3, #245
 1218 020c ADF80E30 		strh	r3, [sp, #14]	@ movhi
 357:Src/main.c    **** 	points[2].Y=chart_y_pos+5;
 1219              		.loc 1 357 0
 1220 0210 FA23     		movs	r3, #250
 1221 0212 ADF81230 		strh	r3, [sp, #18]	@ movhi
 358:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 1222              		.loc 1 358 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 46


 1223 0216 FF23     		movs	r3, #255
 1224 0218 ADF81630 		strh	r3, [sp, #22]	@ movhi
 359:Src/main.c    **** 	//BSP_LCD_FillPolygon(chart_x_pos-5,chart_x_pos-5,chart_x_pos+5,chart_height-10,chart_height,chart
 1225              		.loc 1 359 0
 1226 021c 0321     		movs	r1, #3
 1227 021e 03A8     		add	r0, sp, #12
 1228 0220 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1229              	.LVL119:
 363:Src/main.c    **** 	
 1230              		.loc 1 363 0
 1231 0224 1F48     		ldr	r0, .L80+32
 1232 0226 FFF7FEFF 		bl	BSP_LCD_SetFont
 1233              	.LVL120:
 365:Src/main.c    **** 	for(int i = min; i <=max ; i+=5){
 1234              		.loc 1 365 0
 1235 022a 0024     		movs	r4, #0
 1236              	.LBB21:
 366:Src/main.c    **** 		int someInt = i;
 1237              		.loc 1 366 0
 1238 022c 1BE0     		b	.L67
 1239              	.LVL121:
 1240              	.L68:
 1241              	.LBB22:
 369:Src/main.c    **** 		BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-j*coordinates_scale, (uint8_t*)str, LEFT_MOD
 1242              		.loc 1 369 0 discriminator 3
 1243 022e 2A46     		mov	r2, r5
 1244 0230 1D49     		ldr	r1, .L80+36
 1245 0232 02A8     		add	r0, sp, #8
 1246 0234 FFF7FEFF 		bl	sprintf
 1247              	.LVL122:
 370:Src/main.c    **** 		j+=5;
 1248              		.loc 1 370 0 discriminator 3
 1249 0238 07EE904A 		vmov	s15, r4	@ int
 1250 023c F8EEE77A 		vcvt.f32.s32	s15, s15
 1251 0240 27EE897A 		vmul.f32	s14, s15, s18
 1252 0244 DFED197A 		vldr.32	s15, .L80+40
 1253 0248 77EEC77A 		vsub.f32	s15, s15, s14
 1254 024c FCEEE77A 		vcvt.u32.f32	s15, s15
 1255 0250 CDED007A 		vstr.32	s15, [sp]	@ int
 1256 0254 0323     		movs	r3, #3
 1257 0256 02AA     		add	r2, sp, #8
 1258 0258 BDF80010 		ldrh	r1, [sp]
 1259 025c 0520     		movs	r0, #5
 1260 025e FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 1261              	.LVL123:
 371:Src/main.c    **** 	}
 1262              		.loc 1 371 0 discriminator 3
 1263 0262 0534     		adds	r4, r4, #5
 1264              	.LVL124:
 1265              	.LBE22:
 366:Src/main.c    **** 		int someInt = i;
 1266              		.loc 1 366 0 discriminator 3
 1267 0264 0535     		adds	r5, r5, #5
 1268              	.LVL125:
 1269              	.L67:
 366:Src/main.c    **** 		int someInt = i;
 1270              		.loc 1 366 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 47


 1271 0266 07EE905A 		vmov	s15, r5	@ int
 1272 026a F8EEE77A 		vcvt.f32.s32	s15, s15
 1273 026e F4EEE78A 		vcmpe.f32	s17, s15
 1274 0272 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1275 0276 DADA     		bge	.L68
 1276              	.LBE21:
 379:Src/main.c    **** 
 1277              		.loc 1 379 0 is_stmt 1
 1278 0278 07B0     		add	sp, sp, #28
 1279              	.LCFI12:
 1280              		.cfi_def_cfa_offset 36
 1281              		@ sp needed
 1282 027a BDEC048B 		vldm	sp!, {d8-d9}
 1283              	.LCFI13:
 1284              		.cfi_restore 82
 1285              		.cfi_restore 83
 1286              		.cfi_restore 80
 1287              		.cfi_restore 81
 1288              		.cfi_def_cfa_offset 20
 1289              	.LVL126:
 1290 027e F0BD     		pop	{r4, r5, r6, r7, pc}
 1291              	.LVL127:
 1292              	.L74:
 1293              	.LCFI14:
 1294              		.cfi_def_cfa_offset 0
 1295              		.cfi_restore 4
 1296              		.cfi_restore 5
 1297              		.cfi_restore 6
 1298              		.cfi_restore 7
 1299              		.cfi_restore 14
 1300 0280 7047     		bx	lr
 1301              	.L81:
 1302 0282 00BF     		.align	2
 1303              	.L80:
 1304 0284 00000000 		.word	.LANCHOR1
 1305 0288 00000000 		.word	buffer
 1306 028c 000000CF 		.word	-822083584
 1307 0290 D3D3D3FF 		.word	-2894893
 1308 0294 00007A43 		.word	1132068864
 1309 0298 800000FF 		.word	-16777088
 1310 029c 00000000 		.word	.LANCHOR2
 1311 02a0 1F85EB51 		.word	1374389535
 1312 02a4 00000000 		.word	Font12
 1313 02a8 00000000 		.word	.LC9
 1314 02ac 00007543 		.word	1131741184
 1315              		.cfi_endproc
 1316              	.LFE162:
 1318              		.section	.text.draw_chart2,"ax",%progbits
 1319              		.align	1
 1320              		.global	draw_chart2
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1324              		.fpu fpv5-sp-d16
 1326              	draw_chart2:
 1327              	.LFB163:
 381:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 48


 1328              		.loc 1 381 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 24
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 383:Src/main.c    **** 		return;
 1332              		.loc 1 383 0
 1333 0000 A04B     		ldr	r3, .L110
 1334 0002 1B68     		ldr	r3, [r3]
 1335 0004 C63B     		subs	r3, r3, #198
 1336 0006 012B     		cmp	r3, #1
 1337 0008 40F23A81 		bls	.L104
 381:Src/main.c    **** 
 1338              		.loc 1 381 0
 1339 000c F0B5     		push	{r4, r5, r6, r7, lr}
 1340              	.LCFI15:
 1341              		.cfi_def_cfa_offset 20
 1342              		.cfi_offset 4, -20
 1343              		.cfi_offset 5, -16
 1344              		.cfi_offset 6, -12
 1345              		.cfi_offset 7, -8
 1346              		.cfi_offset 14, -4
 1347 000e 2DED048B 		vpush.64	{d8, d9}
 1348              	.LCFI16:
 1349              		.cfi_def_cfa_offset 36
 1350              		.cfi_offset 80, -36
 1351              		.cfi_offset 81, -32
 1352              		.cfi_offset 82, -28
 1353              		.cfi_offset 83, -24
 1354 0012 87B0     		sub	sp, sp, #28
 1355              	.LCFI17:
 1356              		.cfi_def_cfa_offset 64
 1357              	.LVL128:
 394:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 1358              		.loc 1 394 0
 1359 0014 0020     		movs	r0, #0
 1360 0016 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1361              	.LVL129:
 395:Src/main.c    ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 1362              		.loc 1 395 0
 1363 001a 4FF0FF30 		mov	r0, #-1
 1364 001e FFF7FEFF 		bl	BSP_LCD_Clear
 1365              	.LVL130:
 396:Src/main.c    ****     BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos,chart_length);
 1366              		.loc 1 396 0
 1367 0022 4FF07F40 		mov	r0, #-16777216
 1368 0026 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1369              	.LVL131:
 397:Src/main.c    ****     BSP_LCD_DrawVLine(chart_x_pos,chart_y_pos_coord,chart_height_coord);
 1370              		.loc 1 397 0
 1371 002a 4FF4E172 		mov	r2, #450
 1372 002e FA21     		movs	r1, #250
 1373 0030 1420     		movs	r0, #20
 1374 0032 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 1375              	.LVL132:
 398:Src/main.c    ****     
 1376              		.loc 1 398 0
 1377 0036 E622     		movs	r2, #230
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 49


 1378 0038 1421     		movs	r1, #20
 1379 003a 0846     		mov	r0, r1
 1380 003c FFF7FEFF 		bl	BSP_LCD_DrawVLine
 1381              	.LVL133:
 1382              	.LBB23:
 404:Src/main.c    ****         if(buffer2[i] != INT32_MIN)
 1383              		.loc 1 404 0
 1384 0040 0023     		movs	r3, #0
 1385              	.LBE23:
 403:Src/main.c    ****     for(int i = 0; i < BUFFER_SIZE; i++){
 1386              		.loc 1 403 0
 1387 0042 1C46     		mov	r4, r3
 1388              	.LBB24:
 404:Src/main.c    ****         if(buffer2[i] != INT32_MIN)
 1389              		.loc 1 404 0
 1390 0044 00E0     		b	.L84
 1391              	.LVL134:
 1392              	.L85:
 404:Src/main.c    ****         if(buffer2[i] != INT32_MIN)
 1393              		.loc 1 404 0 is_stmt 0 discriminator 2
 1394 0046 0133     		adds	r3, r3, #1
 1395              	.LVL135:
 1396              	.L84:
 404:Src/main.c    ****         if(buffer2[i] != INT32_MIN)
 1397              		.loc 1 404 0 discriminator 1
 1398 0048 C72B     		cmp	r3, #199
 1399 004a 0DDC     		bgt	.L107
 405:Src/main.c    ****             n++;
 1400              		.loc 1 405 0 is_stmt 1
 1401 004c 8E4A     		ldr	r2, .L110+4
 1402 004e 02EB8302 		add	r2, r2, r3, lsl #2
 1403 0052 92ED007A 		vldr.32	s14, [r2]
 1404 0056 DFED8D7A 		vldr.32	s15, .L110+8
 1405 005a B4EE677A 		vcmp.f32	s14, s15
 1406 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1407 0062 F0D0     		beq	.L85
 406:Src/main.c    ****     }
 1408              		.loc 1 406 0
 1409 0064 0134     		adds	r4, r4, #1
 1410              	.LVL136:
 1411 0066 EEE7     		b	.L85
 1412              	.L107:
 1413 0068 0123     		movs	r3, #1
 1414              	.LVL137:
 1415 006a B3EE047A 		vmov.f32	s14, #2.0e+1
 1416 006e F3EE0E8A 		vmov.f32	s17, #3.0e+1
 1417 0072 00E0     		b	.L87
 1418              	.LVL138:
 1419              	.L89:
 1420              	.LBE24:
 1421              	.LBB25:
 413:Src/main.c    ****       if(buffer2[i] < min)
 1422              		.loc 1 413 0 discriminator 2
 1423 0074 0133     		adds	r3, r3, #1
 1424              	.LVL139:
 1425              	.L87:
 413:Src/main.c    ****       if(buffer2[i] < min)
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 50


 1426              		.loc 1 413 0 is_stmt 0 discriminator 1
 1427 0076 9C42     		cmp	r4, r3
 1428 0078 13DD     		ble	.L108
 414:Src/main.c    ****           min = buffer2[i];
 1429              		.loc 1 414 0 is_stmt 1
 1430 007a 834A     		ldr	r2, .L110+4
 1431 007c 02EB8302 		add	r2, r2, r3, lsl #2
 1432 0080 D2ED007A 		vldr.32	s15, [r2]
 1433 0084 B4EEE77A 		vcmpe.f32	s14, s15
 1434 0088 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1435 008c 01DD     		ble	.L88
 415:Src/main.c    ****       if(buffer2[i] > max)
 1436              		.loc 1 415 0
 1437 008e B0EE677A 		vmov.f32	s14, s15
 1438              	.LVL140:
 1439              	.L88:
 416:Src/main.c    ****           max = buffer2[i];
 1440              		.loc 1 416 0
 1441 0092 F4EEE78A 		vcmpe.f32	s17, s15
 1442 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1443 009a EBD5     		bpl	.L89
 417:Src/main.c    ****     }
 1444              		.loc 1 417 0
 1445 009c F0EE678A 		vmov.f32	s17, s15
 1446              	.LVL141:
 1447 00a0 E8E7     		b	.L89
 1448              	.LVL142:
 1449              	.L108:
 1450              	.LBE25:
 419:Src/main.c    ****     int max_i = max;
 1451              		.loc 1 419 0
 1452 00a2 FDEEC77A 		vcvt.s32.f32	s15, s14
 1453 00a6 17EE905A 		vmov	r5, s15	@ int
 1454              	.LVL143:
 420:Src/main.c    ****     float coordinates_scale = chart_height/(max_i - min_i);
 1455              		.loc 1 420 0
 1456 00aa FDEEE87A 		vcvt.s32.f32	s15, s17
 1457 00ae 17EE903A 		vmov	r3, s15	@ int
 1458              	.LVL144:
 421:Src/main.c    ****     float amplitude = max - min; // ?
 1459              		.loc 1 421 0
 1460 00b2 5A1B     		subs	r2, r3, r5
 1461 00b4 C823     		movs	r3, #200
 1462              	.LVL145:
 1463 00b6 93FBF2F3 		sdiv	r3, r3, r2
 1464 00ba 07EE903A 		vmov	s15, r3	@ int
 1465              	.LVL146:
 1466 00be B8EEE79A 		vcvt.f32.s32	s18, s15
 1467              	.LVL147:
 422:Src/main.c    ****     float scale = chart_height/amplitude; // ?
 1468              		.loc 1 422 0
 1469 00c2 38EEC78A 		vsub.f32	s16, s17, s14
 1470              	.LVL148:
 427:Src/main.c    ****     for(int i=1;i<amplitude;i++){
 1471              		.loc 1 427 0
 1472 00c6 7248     		ldr	r0, .L110+12
 1473 00c8 FFF7FEFF 		bl	BSP_LCD_SetTextColor
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 51


 1474              	.LVL149:
 1475              	.LBB26:
 428:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 1476              		.loc 1 428 0
 1477 00cc 0126     		movs	r6, #1
 1478 00ce 11E0     		b	.L91
 1479              	.LVL150:
 1480              	.L92:
 429:Src/main.c    ****     }
 1481              		.loc 1 429 0 discriminator 3
 1482 00d0 69EE277A 		vmul.f32	s15, s18, s15
 1483 00d4 9FED6F7A 		vldr.32	s14, .L110+16
 1484 00d8 77EE677A 		vsub.f32	s15, s14, s15
 1485 00dc FCEEE77A 		vcvt.u32.f32	s15, s15
 1486 00e0 CDED007A 		vstr.32	s15, [sp]	@ int
 1487 00e4 4FF4E172 		mov	r2, #450
 1488 00e8 BDF80010 		ldrh	r1, [sp]
 1489 00ec 1420     		movs	r0, #20
 1490 00ee FFF7FEFF 		bl	BSP_LCD_DrawHLine
 1491              	.LVL151:
 428:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 1492              		.loc 1 428 0 discriminator 3
 1493 00f2 0136     		adds	r6, r6, #1
 1494              	.LVL152:
 1495              	.L91:
 428:Src/main.c    ****       BSP_LCD_DrawHLine(chart_x_pos,chart_y_pos-i*coordinates_scale,chart_length);
 1496              		.loc 1 428 0 is_stmt 0 discriminator 1
 1497 00f4 07EE906A 		vmov	s15, r6	@ int
 1498 00f8 F8EEE77A 		vcvt.f32.s32	s15, s15
 1499 00fc B4EEE78A 		vcmpe.f32	s16, s15
 1500 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1501 0104 E4DC     		bgt	.L92
 1502              	.LBE26:
 433:Src/main.c    **** 
 1503              		.loc 1 433 0 is_stmt 1
 1504 0106 6448     		ldr	r0, .L110+20
 1505 0108 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1506              	.LVL153:
 435:Src/main.c    ****   int stop_cond; 
 1507              		.loc 1 435 0
 1508 010c 4FF4E177 		mov	r7, #450
 1509 0110 97FBF4F7 		sdiv	r7, r7, r4
 1510              	.LVL154:
 438:Src/main.c    **** 		stop_cond = BUFFER_SIZE -1;
 1511              		.loc 1 438 0
 1512 0114 614B     		ldr	r3, .L110+24
 1513 0116 1968     		ldr	r1, [r3]
 1514 0118 09B1     		cbz	r1, .L102
 442:Src/main.c    **** 	}
 1515              		.loc 1 442 0
 1516 011a 4E1E     		subs	r6, r1, #1
 1517              	.LVL155:
 1518 011c 02E0     		b	.L94
 1519              	.LVL156:
 1520              	.L102:
 439:Src/main.c    **** 	} 
 1521              		.loc 1 439 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 52


 1522 011e C726     		movs	r6, #199
 1523              	.LVL157:
 1524              	.LBB27:
 444:Src/main.c    ****       if(buffer2[(i+1)%BUFFER_SIZE] != INT32_MIN) {
 1525              		.loc 1 444 0
 1526 0120 00E0     		b	.L94
 1527              	.LVL158:
 1528              	.L95:
 1529              	.LBE27:
 439:Src/main.c    **** 	} 
 1530              		.loc 1 439 0 discriminator 1
 1531 0122 2146     		mov	r1, r4
 1532              	.L94:
 1533              	.LVL159:
 1534              	.LBB29:
 444:Src/main.c    ****       if(buffer2[(i+1)%BUFFER_SIZE] != INT32_MIN) {
 1535              		.loc 1 444 0 discriminator 1
 1536 0124 8E42     		cmp	r6, r1
 1537 0126 4ED0     		beq	.L109
 445:Src/main.c    **** 		  //printf("i:  %d\n",i);
 1538              		.loc 1 445 0
 1539 0128 4B1C     		adds	r3, r1, #1
 1540 012a 5D4A     		ldr	r2, .L110+28
 1541 012c 82FB0302 		smull	r0, r2, r2, r3
 1542 0130 DC17     		asrs	r4, r3, #31
 1543 0132 C4EBA214 		rsb	r4, r4, r2, asr #6
 1544 0136 C822     		movs	r2, #200
 1545 0138 02FB1434 		mls	r4, r2, r4, r3
 1546 013c 524A     		ldr	r2, .L110+4
 1547 013e 02EB8402 		add	r2, r2, r4, lsl #2
 1548 0142 D2ED007A 		vldr.32	s15, [r2]
 1549 0146 9FED517A 		vldr.32	s14, .L110+8
 1550 014a F4EE477A 		vcmp.f32	s15, s14
 1551 014e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1552 0152 E6D0     		beq	.L95
 1553              	.LBB28:
 448:Src/main.c    ****           x2 = chart_x_pos + (i + 1) * sample_len;
 1554              		.loc 1 448 0
 1555 0154 07FB01F0 		mul	r0, r7, r1
 1556 0158 1430     		adds	r0, r0, #20
 1557              	.LVL160:
 449:Src/main.c    ****           y1 = chart_y_pos - (buffer2[i%BUFFER_SIZE] - min_i) * coordinates_scale;
 1558              		.loc 1 449 0
 1559 015a 03FB07F3 		mul	r3, r3, r7
 1560 015e 03F11402 		add	r2, r3, #20
 1561              	.LVL161:
 450:Src/main.c    ****           y2 = chart_y_pos - (buffer2[(i + 1)%BUFFER_SIZE] - min_i) * coordinates_scale;
 1562              		.loc 1 450 0
 1563 0162 4F4B     		ldr	r3, .L110+28
 1564 0164 83FB013E 		smull	r3, lr, r3, r1
 1565 0168 CB17     		asrs	r3, r1, #31
 1566 016a C3EBAE13 		rsb	r3, r3, lr, asr #6
 1567 016e 4FF0C80E 		mov	lr, #200
 1568 0172 0EFB1313 		mls	r3, lr, r3, r1
 1569 0176 4449     		ldr	r1, .L110+4
 1570              	.LVL162:
 1571 0178 01EB8303 		add	r3, r1, r3, lsl #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 53


 1572 017c 93ED007A 		vldr.32	s14, [r3]
 1573 0180 06EE905A 		vmov	s13, r5	@ int
 1574 0184 B8EEE66A 		vcvt.f32.s32	s12, s13
 1575 0188 37EE467A 		vsub.f32	s14, s14, s12
 1576 018c 29EE077A 		vmul.f32	s14, s18, s14
 1577 0190 DFED406A 		vldr.32	s13, .L110+16
 1578 0194 36EEC77A 		vsub.f32	s14, s13, s14
 1579 0198 BDEEC77A 		vcvt.s32.f32	s14, s14
 1580 019c 8DED007A 		vstr.32	s14, [sp]	@ int
 1581              	.LVL163:
 451:Src/main.c    ****           BSP_LCD_DrawLine(x1, y1, x2, y2);
 1582              		.loc 1 451 0
 1583 01a0 77EEC67A 		vsub.f32	s15, s15, s12
 1584 01a4 69EE277A 		vmul.f32	s15, s18, s15
 1585 01a8 76EEE77A 		vsub.f32	s15, s13, s15
 1586 01ac FDEEE77A 		vcvt.s32.f32	s15, s15
 1587 01b0 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1588              	.LVL164:
 452:Src/main.c    ****       }
 1589              		.loc 1 452 0
 1590 01b4 BDF80430 		ldrh	r3, [sp, #4]
 1591 01b8 92B2     		uxth	r2, r2
 1592              	.LVL165:
 1593 01ba BDF80010 		ldrh	r1, [sp]
 1594 01be 80B2     		uxth	r0, r0
 1595              	.LVL166:
 1596 01c0 FFF7FEFF 		bl	BSP_LCD_DrawLine
 1597              	.LVL167:
 1598 01c4 ADE7     		b	.L95
 1599              	.LVL168:
 1600              	.L109:
 1601              	.LBE28:
 1602              	.LBE29:
 455:Src/main.c    **** 	Point points[3];
 1603              		.loc 1 455 0
 1604 01c6 4FF07F40 		mov	r0, #-16777216
 1605 01ca FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1606              	.LVL169:
 457:Src/main.c    **** 	points[1].X=chart_x_pos-5;
 1607              		.loc 1 457 0
 1608 01ce 1923     		movs	r3, #25
 1609 01d0 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 458:Src/main.c    **** 	points[2].X=chart_x_pos;
 1610              		.loc 1 458 0
 1611 01d4 0F23     		movs	r3, #15
 1612 01d6 ADF81030 		strh	r3, [sp, #16]	@ movhi
 459:Src/main.c    **** 	
 1613              		.loc 1 459 0
 1614 01da 1423     		movs	r3, #20
 1615 01dc ADF81430 		strh	r3, [sp, #20]	@ movhi
 461:Src/main.c    **** 	points[1].Y=chart_y_pos_coord+10;
 1616              		.loc 1 461 0
 1617 01e0 1E22     		movs	r2, #30
 1618 01e2 ADF80E20 		strh	r2, [sp, #14]	@ movhi
 462:Src/main.c    **** 	points[2].Y=chart_y_pos_coord;
 1619              		.loc 1 462 0
 1620 01e6 ADF81220 		strh	r2, [sp, #18]	@ movhi
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 54


 463:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 1621              		.loc 1 463 0
 1622 01ea ADF81630 		strh	r3, [sp, #22]	@ movhi
 464:Src/main.c    **** 
 1623              		.loc 1 464 0
 1624 01ee 0321     		movs	r1, #3
 1625 01f0 03A8     		add	r0, sp, #12
 1626 01f2 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1627              	.LVL170:
 466:Src/main.c    **** 	points[1].X=chart_x_pos+chart_length;
 1628              		.loc 1 466 0
 1629 01f6 4FF4E673 		mov	r3, #460
 1630 01fa ADF80C30 		strh	r3, [sp, #12]	@ movhi
 467:Src/main.c    **** 	points[2].X=chart_x_pos+chart_length-10;
 1631              		.loc 1 467 0
 1632 01fe 4FF4EB72 		mov	r2, #470
 1633 0202 ADF81020 		strh	r2, [sp, #16]	@ movhi
 468:Src/main.c    **** 
 1634              		.loc 1 468 0
 1635 0206 ADF81430 		strh	r3, [sp, #20]	@ movhi
 470:Src/main.c    **** 	points[1].Y=chart_y_pos;
 1636              		.loc 1 470 0
 1637 020a F523     		movs	r3, #245
 1638 020c ADF80E30 		strh	r3, [sp, #14]	@ movhi
 471:Src/main.c    **** 	points[2].Y=chart_y_pos+5;
 1639              		.loc 1 471 0
 1640 0210 FA23     		movs	r3, #250
 1641 0212 ADF81230 		strh	r3, [sp, #18]	@ movhi
 472:Src/main.c    **** 	BSP_LCD_FillPolygon(points,3);
 1642              		.loc 1 472 0
 1643 0216 FF23     		movs	r3, #255
 1644 0218 ADF81630 		strh	r3, [sp, #22]	@ movhi
 473:Src/main.c    **** 	//BSP_LCD_FillPolygon(chart_x_pos-5,chart_x_pos-5,chart_x_pos+5,chart_height-10,chart_height,chart
 1645              		.loc 1 473 0
 1646 021c 0321     		movs	r1, #3
 1647 021e 03A8     		add	r0, sp, #12
 1648 0220 FFF7FEFF 		bl	BSP_LCD_FillPolygon
 1649              	.LVL171:
 477:Src/main.c    **** 	
 1650              		.loc 1 477 0
 1651 0224 1F48     		ldr	r0, .L110+32
 1652 0226 FFF7FEFF 		bl	BSP_LCD_SetFont
 1653              	.LVL172:
 479:Src/main.c    **** 	for(int i = min; i <=max ; i+=5){
 1654              		.loc 1 479 0
 1655 022a 0024     		movs	r4, #0
 1656              	.LBB30:
 480:Src/main.c    **** 		int someInt = i;
 1657              		.loc 1 480 0
 1658 022c 1BE0     		b	.L97
 1659              	.LVL173:
 1660              	.L98:
 1661              	.LBB31:
 483:Src/main.c    **** 		BSP_LCD_DisplayStringAt(chart_x_pos-15,chart_y_pos-5-j*coordinates_scale, (uint8_t*)str, LEFT_MOD
 1662              		.loc 1 483 0 discriminator 3
 1663 022e 2A46     		mov	r2, r5
 1664 0230 1D49     		ldr	r1, .L110+36
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 55


 1665 0232 02A8     		add	r0, sp, #8
 1666 0234 FFF7FEFF 		bl	sprintf
 1667              	.LVL174:
 484:Src/main.c    **** 		j+=5;
 1668              		.loc 1 484 0 discriminator 3
 1669 0238 07EE904A 		vmov	s15, r4	@ int
 1670 023c F8EEE77A 		vcvt.f32.s32	s15, s15
 1671 0240 27EE897A 		vmul.f32	s14, s15, s18
 1672 0244 DFED197A 		vldr.32	s15, .L110+40
 1673 0248 77EEC77A 		vsub.f32	s15, s15, s14
 1674 024c FCEEE77A 		vcvt.u32.f32	s15, s15
 1675 0250 CDED007A 		vstr.32	s15, [sp]	@ int
 1676 0254 0323     		movs	r3, #3
 1677 0256 02AA     		add	r2, sp, #8
 1678 0258 BDF80010 		ldrh	r1, [sp]
 1679 025c 0520     		movs	r0, #5
 1680 025e FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 1681              	.LVL175:
 485:Src/main.c    **** 	}
 1682              		.loc 1 485 0 discriminator 3
 1683 0262 0534     		adds	r4, r4, #5
 1684              	.LVL176:
 1685              	.LBE31:
 480:Src/main.c    **** 		int someInt = i;
 1686              		.loc 1 480 0 discriminator 3
 1687 0264 0535     		adds	r5, r5, #5
 1688              	.LVL177:
 1689              	.L97:
 480:Src/main.c    **** 		int someInt = i;
 1690              		.loc 1 480 0 is_stmt 0 discriminator 1
 1691 0266 07EE905A 		vmov	s15, r5	@ int
 1692 026a F8EEE77A 		vcvt.f32.s32	s15, s15
 1693 026e F4EEE78A 		vcmpe.f32	s17, s15
 1694 0272 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1695 0276 DADA     		bge	.L98
 1696              	.LBE30:
 493:Src/main.c    **** 
 1697              		.loc 1 493 0 is_stmt 1
 1698 0278 07B0     		add	sp, sp, #28
 1699              	.LCFI18:
 1700              		.cfi_def_cfa_offset 36
 1701              		@ sp needed
 1702 027a BDEC048B 		vldm	sp!, {d8-d9}
 1703              	.LCFI19:
 1704              		.cfi_restore 82
 1705              		.cfi_restore 83
 1706              		.cfi_restore 80
 1707              		.cfi_restore 81
 1708              		.cfi_def_cfa_offset 20
 1709              	.LVL178:
 1710 027e F0BD     		pop	{r4, r5, r6, r7, pc}
 1711              	.LVL179:
 1712              	.L104:
 1713              	.LCFI20:
 1714              		.cfi_def_cfa_offset 0
 1715              		.cfi_restore 4
 1716              		.cfi_restore 5
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 56


 1717              		.cfi_restore 6
 1718              		.cfi_restore 7
 1719              		.cfi_restore 14
 1720 0280 7047     		bx	lr
 1721              	.L111:
 1722 0282 00BF     		.align	2
 1723              	.L110:
 1724 0284 00000000 		.word	.LANCHOR3
 1725 0288 00000000 		.word	buffer2
 1726 028c 000000CF 		.word	-822083584
 1727 0290 D3D3D3FF 		.word	-2894893
 1728 0294 00007A43 		.word	1132068864
 1729 0298 800000FF 		.word	-16777088
 1730 029c 00000000 		.word	.LANCHOR4
 1731 02a0 1F85EB51 		.word	1374389535
 1732 02a4 00000000 		.word	Font12
 1733 02a8 00000000 		.word	.LC9
 1734 02ac 00007543 		.word	1131741184
 1735              		.cfi_endproc
 1736              	.LFE163:
 1738              		.section	.text.initialize_touchscreen,"ax",%progbits
 1739              		.align	1
 1740              		.global	initialize_touchscreen
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1744              		.fpu fpv5-sp-d16
 1746              	initialize_touchscreen:
 1747              	.LFB164:
 499:Src/main.c    **** 	uint8_t  status = 0;
 1748              		.loc 1 499 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752 0000 10B5     		push	{r4, lr}
 1753              	.LCFI21:
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 4, -8
 1756              		.cfi_offset 14, -4
 1757              	.LVL180:
 501:Src/main.c    **** 	if(status != TS_OK) return -1;
 1758              		.loc 1 501 0
 1759 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 1760              	.LVL181:
 1761 0006 84B2     		uxth	r4, r0
 1762 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 1763              	.LVL182:
 1764 000c 81B2     		uxth	r1, r0
 1765 000e 2046     		mov	r0, r4
 1766 0010 FFF7FEFF 		bl	BSP_TS_Init
 1767              	.LVL183:
 502:Src/main.c    **** 	return 0;
 1768              		.loc 1 502 0
 1769 0014 08B9     		cbnz	r0, .L116
 503:Src/main.c    **** }
 1770              		.loc 1 503 0
 1771 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 57


 1772              	.LVL184:
 504:Src/main.c    **** 
 1773              		.loc 1 504 0
 1774 0018 10BD     		pop	{r4, pc}
 1775              	.LVL185:
 1776              	.L116:
 502:Src/main.c    **** 	return 0;
 1777              		.loc 1 502 0
 1778 001a 4FF0FF30 		mov	r0, #-1
 1779              	.LVL186:
 1780 001e 10BD     		pop	{r4, pc}
 1781              		.cfi_endproc
 1782              	.LFE164:
 1784              		.global	__aeabi_d2f
 1785              		.global	__aeabi_f2d
 1786              		.section	.text.add_data_to_buffer,"ax",%progbits
 1787              		.align	1
 1788              		.global	add_data_to_buffer
 1789              		.syntax unified
 1790              		.thumb
 1791              		.thumb_func
 1792              		.fpu fpv5-sp-d16
 1794              	add_data_to_buffer:
 1795              	.LFB165:
 508:Src/main.c    **** 	if(client_number == 1){
 1796              		.loc 1 508 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              	.LVL187:
 1801 0000 38B5     		push	{r3, r4, r5, lr}
 1802              	.LCFI22:
 1803              		.cfi_def_cfa_offset 16
 1804              		.cfi_offset 3, -16
 1805              		.cfi_offset 4, -12
 1806              		.cfi_offset 5, -8
 1807              		.cfi_offset 14, -4
 509:Src/main.c    **** 
 1808              		.loc 1 509 0
 1809 0002 0129     		cmp	r1, #1
 1810 0004 02D0     		beq	.L125
 535:Src/main.c    **** 
 1811              		.loc 1 535 0
 1812 0006 0229     		cmp	r1, #2
 1813 0008 57D0     		beq	.L126
 1814              	.LVL188:
 1815              	.L117:
 1816 000a 38BD     		pop	{r3, r4, r5, pc}
 1817              	.LVL189:
 1818              	.L125:
 1819              	.LBB32:
 512:Src/main.c    **** 		buffer[current_pos] = new_item_f;
 1820              		.loc 1 512 0
 1821 000c FFF7FEFF 		bl	atof
 1822              	.LVL190:
 1823 0010 51EC100B 		vmov	r0, r1, d0
 1824 0014 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 58


 1825              	.LVL191:
 513:Src/main.c    **** 		
 1826              		.loc 1 513 0
 1827 0018 4E4C     		ldr	r4, .L129
 1828 001a 2268     		ldr	r2, [r4]
 1829 001c 4E4B     		ldr	r3, .L129+4
 1830 001e 03EB8203 		add	r3, r3, r2, lsl #2
 1831 0022 1860     		str	r0, [r3]	@ float
 515:Src/main.c    **** 		printf("Current pos %d\n",current_pos);
 1832              		.loc 1 515 0
 1833 0024 FFF7FEFF 		bl	__aeabi_f2d
 1834              	.LVL192:
 1835 0028 0246     		mov	r2, r0
 1836 002a 0B46     		mov	r3, r1
 1837 002c 4B48     		ldr	r0, .L129+8
 1838 002e FFF7FEFF 		bl	printf
 1839              	.LVL193:
 516:Src/main.c    **** 		printf("First index %d\n",first_index);
 1840              		.loc 1 516 0
 1841 0032 2168     		ldr	r1, [r4]
 1842 0034 4A48     		ldr	r0, .L129+12
 1843 0036 FFF7FEFF 		bl	printf
 1844              	.LVL194:
 517:Src/main.c    **** 		printf("is_full %d \n",is_full);
 1845              		.loc 1 517 0
 1846 003a 4A4B     		ldr	r3, .L129+16
 1847 003c 1968     		ldr	r1, [r3]
 1848 003e 4A48     		ldr	r0, .L129+20
 1849 0040 FFF7FEFF 		bl	printf
 1850              	.LVL195:
 518:Src/main.c    **** 
 1851              		.loc 1 518 0
 1852 0044 494C     		ldr	r4, .L129+24
 1853 0046 2168     		ldr	r1, [r4]
 1854 0048 4948     		ldr	r0, .L129+28
 1855 004a FFF7FEFF 		bl	printf
 1856              	.LVL196:
 520:Src/main.c    **** 			current_pos = (current_pos+1)%BUFFER_SIZE;
 1857              		.loc 1 520 0
 1858 004e 2368     		ldr	r3, [r4]
 1859 0050 63B9     		cbnz	r3, .L119
 521:Src/main.c    **** 		}
 1860              		.loc 1 521 0
 1861 0052 404C     		ldr	r4, .L129
 1862 0054 2168     		ldr	r1, [r4]
 1863 0056 0131     		adds	r1, r1, #1
 1864 0058 4648     		ldr	r0, .L129+32
 1865 005a 80FB0120 		smull	r2, r0, r0, r1
 1866 005e CA17     		asrs	r2, r1, #31
 1867 0060 C2EBA012 		rsb	r2, r2, r0, asr #6
 1868 0064 C820     		movs	r0, #200
 1869 0066 00FB1212 		mls	r2, r0, r2, r1
 1870 006a 2260     		str	r2, [r4]
 1871              	.L119:
 524:Src/main.c    **** 			first_index = (first_index+1)%BUFFER_SIZE;
 1872              		.loc 1 524 0
 1873 006c 012B     		cmp	r3, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 59


 1874 006e 0BD0     		beq	.L127
 1875              	.L120:
 529:Src/main.c    **** 		{
 1876              		.loc 1 529 0
 1877 0070 384A     		ldr	r2, .L129
 1878 0072 1268     		ldr	r2, [r2]
 1879 0074 C72A     		cmp	r2, #199
 1880 0076 C8D1     		bne	.L117
 529:Src/main.c    **** 		{
 1881              		.loc 1 529 0 is_stmt 0 discriminator 1
 1882 0078 002B     		cmp	r3, #0
 1883 007a C6D1     		bne	.L117
 531:Src/main.c    **** 			first_index = 1;
 1884              		.loc 1 531 0 is_stmt 1
 1885 007c 0123     		movs	r3, #1
 1886 007e 3B4A     		ldr	r2, .L129+24
 1887 0080 1360     		str	r3, [r2]
 532:Src/main.c    **** 		}
 1888              		.loc 1 532 0
 1889 0082 384A     		ldr	r2, .L129+16
 1890 0084 1360     		str	r3, [r2]
 1891 0086 38BD     		pop	{r3, r4, r5, pc}
 1892              	.L127:
 525:Src/main.c    **** 			current_pos = (current_pos+1)%BUFFER_SIZE;
 1893              		.loc 1 525 0
 1894 0088 364C     		ldr	r4, .L129+16
 1895 008a 2068     		ldr	r0, [r4]
 1896 008c 0130     		adds	r0, r0, #1
 1897 008e 394A     		ldr	r2, .L129+32
 1898 0090 82FB0015 		smull	r1, r5, r2, r0
 1899 0094 C117     		asrs	r1, r0, #31
 1900 0096 C1EBA511 		rsb	r1, r1, r5, asr #6
 1901 009a C825     		movs	r5, #200
 1902 009c 05FB1101 		mls	r1, r5, r1, r0
 1903 00a0 2160     		str	r1, [r4]
 526:Src/main.c    **** 		}
 1904              		.loc 1 526 0
 1905 00a2 2C4C     		ldr	r4, .L129
 1906 00a4 2168     		ldr	r1, [r4]
 1907 00a6 0131     		adds	r1, r1, #1
 1908 00a8 82FB0120 		smull	r2, r0, r2, r1
 1909 00ac CA17     		asrs	r2, r1, #31
 1910 00ae C2EBA012 		rsb	r2, r2, r0, asr #6
 1911 00b2 05FB1212 		mls	r2, r5, r2, r1
 1912 00b6 2260     		str	r2, [r4]
 1913 00b8 DAE7     		b	.L120
 1914              	.LVL197:
 1915              	.L126:
 1916              	.LBE32:
 1917              	.LBB33:
 538:Src/main.c    **** 		buffer2[current_pos2] = new_item_f;
 1918              		.loc 1 538 0
 1919 00ba FFF7FEFF 		bl	atof
 1920              	.LVL198:
 1921 00be 51EC100B 		vmov	r0, r1, d0
 1922 00c2 FFF7FEFF 		bl	__aeabi_d2f
 1923              	.LVL199:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 60


 539:Src/main.c    **** 		
 1924              		.loc 1 539 0
 1925 00c6 2C4B     		ldr	r3, .L129+36
 1926 00c8 1A68     		ldr	r2, [r3]
 1927 00ca 2C4B     		ldr	r3, .L129+40
 1928 00cc 03EB8203 		add	r3, r3, r2, lsl #2
 1929 00d0 1860     		str	r0, [r3]	@ float
 541:Src/main.c    **** 
 1930              		.loc 1 541 0
 1931 00d2 FFF7FEFF 		bl	__aeabi_f2d
 1932              	.LVL200:
 1933 00d6 0246     		mov	r2, r0
 1934 00d8 0B46     		mov	r3, r1
 1935 00da 2948     		ldr	r0, .L129+44
 1936 00dc FFF7FEFF 		bl	printf
 1937              	.LVL201:
 543:Src/main.c    **** 			current_pos2 = (current_pos2+1)%BUFFER_SIZE;
 1938              		.loc 1 543 0
 1939 00e0 284B     		ldr	r3, .L129+48
 1940 00e2 1B68     		ldr	r3, [r3]
 1941 00e4 63B9     		cbnz	r3, .L122
 544:Src/main.c    **** 		}
 1942              		.loc 1 544 0
 1943 00e6 244C     		ldr	r4, .L129+36
 1944 00e8 2168     		ldr	r1, [r4]
 1945 00ea 0131     		adds	r1, r1, #1
 1946 00ec 2148     		ldr	r0, .L129+32
 1947 00ee 80FB0120 		smull	r2, r0, r0, r1
 1948 00f2 CA17     		asrs	r2, r1, #31
 1949 00f4 C2EBA012 		rsb	r2, r2, r0, asr #6
 1950 00f8 C820     		movs	r0, #200
 1951 00fa 00FB1212 		mls	r2, r0, r2, r1
 1952 00fe 2260     		str	r2, [r4]
 1953              	.L122:
 547:Src/main.c    **** 			first_index2 = (first_index2+1)%BUFFER_SIZE;
 1954              		.loc 1 547 0
 1955 0100 012B     		cmp	r3, #1
 1956 0102 0DD0     		beq	.L128
 1957              	.L123:
 552:Src/main.c    **** 		{
 1958              		.loc 1 552 0
 1959 0104 1C4A     		ldr	r2, .L129+36
 1960 0106 1268     		ldr	r2, [r2]
 1961 0108 C72A     		cmp	r2, #199
 1962 010a 7FF47EAF 		bne	.L117
 552:Src/main.c    **** 		{
 1963              		.loc 1 552 0 is_stmt 0 discriminator 1
 1964 010e 002B     		cmp	r3, #0
 1965 0110 7FF47BAF 		bne	.L117
 554:Src/main.c    **** 			first_index2 = 1;
 1966              		.loc 1 554 0 is_stmt 1
 1967 0114 0123     		movs	r3, #1
 1968 0116 1B4A     		ldr	r2, .L129+48
 1969 0118 1360     		str	r3, [r2]
 555:Src/main.c    **** 		}
 1970              		.loc 1 555 0
 1971 011a 1B4A     		ldr	r2, .L129+52
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 61


 1972 011c 1360     		str	r3, [r2]
 1973              	.LBE33:
 558:Src/main.c    **** 
 1974              		.loc 1 558 0
 1975 011e 74E7     		b	.L117
 1976              	.L128:
 1977              	.LBB34:
 548:Src/main.c    **** 			current_pos2 = (current_pos2+1)%BUFFER_SIZE;
 1978              		.loc 1 548 0
 1979 0120 194C     		ldr	r4, .L129+52
 1980 0122 2068     		ldr	r0, [r4]
 1981 0124 0130     		adds	r0, r0, #1
 1982 0126 134A     		ldr	r2, .L129+32
 1983 0128 82FB0015 		smull	r1, r5, r2, r0
 1984 012c C117     		asrs	r1, r0, #31
 1985 012e C1EBA511 		rsb	r1, r1, r5, asr #6
 1986 0132 C825     		movs	r5, #200
 1987 0134 05FB1101 		mls	r1, r5, r1, r0
 1988 0138 2160     		str	r1, [r4]
 549:Src/main.c    **** 		}
 1989              		.loc 1 549 0
 1990 013a 0F4C     		ldr	r4, .L129+36
 1991 013c 2168     		ldr	r1, [r4]
 1992 013e 0131     		adds	r1, r1, #1
 1993 0140 82FB0120 		smull	r2, r0, r2, r1
 1994 0144 CA17     		asrs	r2, r1, #31
 1995 0146 C2EBA012 		rsb	r2, r2, r0, asr #6
 1996 014a 05FB1212 		mls	r2, r5, r2, r1
 1997 014e 2260     		str	r2, [r4]
 1998 0150 D8E7     		b	.L123
 1999              	.L130:
 2000 0152 00BF     		.align	2
 2001              	.L129:
 2002 0154 00000000 		.word	.LANCHOR1
 2003 0158 00000000 		.word	buffer
 2004 015c 00000000 		.word	.LC10
 2005 0160 14000000 		.word	.LC11
 2006 0164 00000000 		.word	.LANCHOR2
 2007 0168 24000000 		.word	.LC12
 2008 016c 00000000 		.word	.LANCHOR5
 2009 0170 34000000 		.word	.LC13
 2010 0174 1F85EB51 		.word	1374389535
 2011 0178 00000000 		.word	.LANCHOR3
 2012 017c 00000000 		.word	buffer2
 2013 0180 44000000 		.word	.LC14
 2014 0184 00000000 		.word	.LANCHOR6
 2015 0188 00000000 		.word	.LANCHOR4
 2016              	.LBE34:
 2017              		.cfi_endproc
 2018              	.LFE165:
 2020              		.section	.text.print_data,"ax",%progbits
 2021              		.align	1
 2022              		.global	print_data
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
 2026              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 62


 2028              	print_data:
 2029              	.LFB166:
 560:Src/main.c    ****     sFONT* old_font = BSP_LCD_GetFont();
 2030              		.loc 1 560 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 104
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              	.LVL202:
 2035 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2036              	.LCFI23:
 2037              		.cfi_def_cfa_offset 20
 2038              		.cfi_offset 4, -20
 2039              		.cfi_offset 5, -16
 2040              		.cfi_offset 6, -12
 2041              		.cfi_offset 7, -8
 2042              		.cfi_offset 14, -4
 2043 0002 9BB0     		sub	sp, sp, #108
 2044              	.LCFI24:
 2045              		.cfi_def_cfa_offset 128
 2046 0004 0546     		mov	r5, r0
 2047 0006 0F46     		mov	r7, r1
 2048 0008 1446     		mov	r4, r2
 561:Src/main.c    **** 	BSP_LCD_SetFont(&LCD_DEFAULT_FONT);
 2049              		.loc 1 561 0
 2050 000a FFF7FEFF 		bl	BSP_LCD_GetFont
 2051              	.LVL203:
 2052 000e 0646     		mov	r6, r0
 2053              	.LVL204:
 562:Src/main.c    **** 	BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 2054              		.loc 1 562 0
 2055 0010 2F48     		ldr	r0, .L136
 2056              	.LVL205:
 2057 0012 FFF7FEFF 		bl	BSP_LCD_SetFont
 2058              	.LVL206:
 563:Src/main.c    **** 	BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 2059              		.loc 1 563 0
 2060 0016 4FF0FF30 		mov	r0, #-1
 2061 001a FFF7FEFF 		bl	BSP_LCD_SetBackColor
 2062              	.LVL207:
 564:Src/main.c    **** 	if(client_id == 1){
 2063              		.loc 1 564 0
 2064 001e 2D48     		ldr	r0, .L136+4
 2065 0020 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2066              	.LVL208:
 565:Src/main.c    **** 		printf("%s\n",data);
 2067              		.loc 1 565 0
 2068 0024 012F     		cmp	r7, #1
 2069 0026 2BD0     		beq	.L135
 2070              	.LBB35:
 585:Src/main.c    **** 	char target[100];
 2071              		.loc 1 585 0
 2072 0028 2846     		mov	r0, r5
 2073 002a FFF7FEFF 		bl	puts
 2074              	.LVL209:
 587:Src/main.c    **** 		//BSP_LCD_FillRect(0.3*LCD_X_SIZE,0.1*LCD_Y_SIZE,10,50);
 2075              		.loc 1 587 0
 2076 002e 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 63


 2077 0032 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2078              	.LVL210:
 589:Src/main.c    **** 		BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
 2079              		.loc 1 589 0
 2080 0036 1523     		movs	r3, #21
 2081 0038 4FF4F072 		mov	r2, #480
 2082 003c 6E21     		movs	r1, #110
 2083 003e 0A20     		movs	r0, #10
 2084 0040 FFF7FEFF 		bl	BSP_LCD_FillRect
 2085              	.LVL211:
 590:Src/main.c    **** 	strncpy(target, data, len);
 2086              		.loc 1 590 0
 2087 0044 2348     		ldr	r0, .L136+4
 2088 0046 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2089              	.LVL212:
 591:Src/main.c    **** 	target[len] = '\0';
 2090              		.loc 1 591 0
 2091 004a 2246     		mov	r2, r4
 2092 004c 2946     		mov	r1, r5
 2093 004e 01A8     		add	r0, sp, #4
 2094 0050 FFF7FEFF 		bl	strncpy
 2095              	.LVL213:
 592:Src/main.c    **** 	BSP_LCD_DisplayStringAt(0, 70, (uint8_t*)"Temperature2 is:", CENTER_MODE);
 2096              		.loc 1 592 0
 2097 0054 1AAB     		add	r3, sp, #104
 2098 0056 1C44     		add	r4, r4, r3
 2099              	.LVL214:
 2100 0058 0025     		movs	r5, #0
 2101              	.LVL215:
 2102 005a 04F8645C 		strb	r5, [r4, #-100]
 593:Src/main.c    **** 	BSP_LCD_DisplayStringAt(0, 110, (uint8_t*)target, CENTER_MODE);
 2103              		.loc 1 593 0
 2104 005e 0123     		movs	r3, #1
 2105 0060 1D4A     		ldr	r2, .L136+8
 2106 0062 4621     		movs	r1, #70
 2107 0064 2846     		mov	r0, r5
 2108 0066 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 2109              	.LVL216:
 594:Src/main.c    **** 	}
 2110              		.loc 1 594 0
 2111 006a 0123     		movs	r3, #1
 2112 006c 01AA     		add	r2, sp, #4
 2113 006e 6E21     		movs	r1, #110
 2114 0070 2846     		mov	r0, r5
 2115 0072 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 2116              	.LVL217:
 2117              	.L133:
 2118              	.LBE35:
 597:Src/main.c    **** }
 2119              		.loc 1 597 0
 2120 0076 3046     		mov	r0, r6
 2121 0078 FFF7FEFF 		bl	BSP_LCD_SetFont
 2122              	.LVL218:
 598:Src/main.c    **** 
 2123              		.loc 1 598 0
 2124 007c 1BB0     		add	sp, sp, #108
 2125              	.LCFI25:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 64


 2126              		.cfi_remember_state
 2127              		.cfi_def_cfa_offset 20
 2128              		@ sp needed
 2129 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 2130              	.LVL219:
 2131              	.L135:
 2132              	.LCFI26:
 2133              		.cfi_restore_state
 2134              	.LBB36:
 566:Src/main.c    **** 		int i;
 2135              		.loc 1 566 0
 2136 0080 2846     		mov	r0, r5
 2137 0082 FFF7FEFF 		bl	puts
 2138              	.LVL220:
 570:Src/main.c    **** 		BSP_LCD_FillRect(10,50,LCD_X_SIZE,LCD_Y_SIZE*0.08);
 2139              		.loc 1 570 0
 2140 0086 4FF0FF30 		mov	r0, #-1
 2141 008a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2142              	.LVL221:
 571:Src/main.c    **** //BSP_LCD_FillRect(0.3*LCD_X_SIZE,0.1*LCD_Y_SIZE,10,50);
 2143              		.loc 1 571 0
 2144 008e 1523     		movs	r3, #21
 2145 0090 4FF4F072 		mov	r2, #480
 2146 0094 3221     		movs	r1, #50
 2147 0096 0A20     		movs	r0, #10
 2148 0098 FFF7FEFF 		bl	BSP_LCD_FillRect
 2149              	.LVL222:
 574:Src/main.c    **** 		//BSP_LCD_ClearStringLine(10);
 2150              		.loc 1 574 0
 2151 009c 0D48     		ldr	r0, .L136+4
 2152 009e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2153              	.LVL223:
 579:Src/main.c    **** 		target[len] = '\0';
 2154              		.loc 1 579 0
 2155 00a2 2246     		mov	r2, r4
 2156 00a4 2946     		mov	r1, r5
 2157 00a6 01A8     		add	r0, sp, #4
 2158 00a8 FFF7FEFF 		bl	strncpy
 2159              	.LVL224:
 580:Src/main.c    **** 		BSP_LCD_DisplayStringAt(0, 10, (uint8_t*)"Temperature1 is:", CENTER_MODE);
 2160              		.loc 1 580 0
 2161 00ac 1AAB     		add	r3, sp, #104
 2162 00ae 1C44     		add	r4, r4, r3
 2163              	.LVL225:
 2164 00b0 0025     		movs	r5, #0
 2165              	.LVL226:
 2166 00b2 04F8645C 		strb	r5, [r4, #-100]
 581:Src/main.c    **** 		BSP_LCD_DisplayStringAt(0, 50, (uint8_t*)target, CENTER_MODE);
 2167              		.loc 1 581 0
 2168 00b6 0123     		movs	r3, #1
 2169 00b8 084A     		ldr	r2, .L136+12
 2170 00ba 0A21     		movs	r1, #10
 2171 00bc 2846     		mov	r0, r5
 2172 00be FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 2173              	.LVL227:
 582:Src/main.c    **** 	}
 2174              		.loc 1 582 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 65


 2175 00c2 0123     		movs	r3, #1
 2176 00c4 01AA     		add	r2, sp, #4
 2177 00c6 3221     		movs	r1, #50
 2178 00c8 2846     		mov	r0, r5
 2179 00ca FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 2180              	.LVL228:
 2181              	.LBE36:
 2182 00ce D2E7     		b	.L133
 2183              	.L137:
 2184              		.align	2
 2185              	.L136:
 2186 00d0 00000000 		.word	Font24
 2187 00d4 800000FF 		.word	-16777088
 2188 00d8 14000000 		.word	.LC16
 2189 00dc 00000000 		.word	.LC15
 2190              		.cfi_endproc
 2191              	.LFE166:
 2193              		.section	.text.example_do_connect,"ax",%progbits
 2194              		.align	1
 2195              		.global	example_do_connect
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2199              		.fpu fpv5-sp-d16
 2201              	example_do_connect:
 2202              	.LFB172:
1004:Src/main.c    ****   struct mqtt_connect_client_info_t ci;
 2203              		.loc 1 1004 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 32
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207              	.LVL229:
 2208 0000 10B5     		push	{r4, lr}
 2209              	.LCFI27:
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 4, -8
 2212              		.cfi_offset 14, -4
 2213 0002 8AB0     		sub	sp, sp, #40
 2214              	.LCFI28:
 2215              		.cfi_def_cfa_offset 48
 2216 0004 0446     		mov	r4, r0
1009:Src/main.c    **** 
 2217              		.loc 1 1009 0
 2218 0006 0023     		movs	r3, #0
 2219 0008 0493     		str	r3, [sp, #16]
 2220 000a 0593     		str	r3, [sp, #20]
 2221 000c 0693     		str	r3, [sp, #24]
 2222 000e 0793     		str	r3, [sp, #28]
 2223 0010 0893     		str	r3, [sp, #32]
 2224 0012 0993     		str	r3, [sp, #36]
1012:Src/main.c    **** 
 2225              		.loc 1 1012 0
 2226 0014 114B     		ldr	r3, .L145
 2227 0016 0393     		str	r3, [sp, #12]
1019:Src/main.c    **** 	printf("Created ip");
 2228              		.loc 1 1019 0
 2229 0018 02A9     		add	r1, sp, #8
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 66


 2230 001a 1148     		ldr	r0, .L145+4
 2231              	.LVL230:
 2232 001c FFF7FEFF 		bl	ip4addr_aton
 2233              	.LVL231:
 2234 0020 0128     		cmp	r0, #1
 2235 0022 12D0     		beq	.L143
 2236              	.L139:
1022:Src/main.c    **** 
 2237              		.loc 1 1022 0
 2238 0024 03AB     		add	r3, sp, #12
 2239 0026 0193     		str	r3, [sp, #4]
 2240 0028 0023     		movs	r3, #0
 2241 002a 0093     		str	r3, [sp]
 2242 002c 0D4B     		ldr	r3, .L145+8
 2243 002e 40F25B72 		movw	r2, #1883
 2244 0032 02A9     		add	r1, sp, #8
 2245 0034 2046     		mov	r0, r4
 2246 0036 FFF7FEFF 		bl	mqtt_client_connect
 2247              	.LVL232:
1025:Src/main.c    ****     printf("mqtt_connect return tutaj %d\n", err);
 2248              		.loc 1 1025 0
 2249 003a 0146     		mov	r1, r0
 2250 003c 48B9     		cbnz	r0, .L144
1031:Src/main.c    **** 	return 0;
 2251              		.loc 1 1031 0
 2252 003e 0A48     		ldr	r0, .L145+12
 2253              	.LVL233:
 2254 0040 FFF7FEFF 		bl	puts
 2255              	.LVL234:
1032:Src/main.c    ****   }
 2256              		.loc 1 1032 0
 2257 0044 0020     		movs	r0, #0
 2258              	.L138:
1034:Src/main.c    **** 
 2259              		.loc 1 1034 0
 2260 0046 0AB0     		add	sp, sp, #40
 2261              	.LCFI29:
 2262              		.cfi_remember_state
 2263              		.cfi_def_cfa_offset 8
 2264              		@ sp needed
 2265 0048 10BD     		pop	{r4, pc}
 2266              	.LVL235:
 2267              	.L143:
 2268              	.LCFI30:
 2269              		.cfi_restore_state
1020:Src/main.c    ****   }
 2270              		.loc 1 1020 0
 2271 004a 0848     		ldr	r0, .L145+16
 2272 004c FFF7FEFF 		bl	printf
 2273              	.LVL236:
 2274 0050 E8E7     		b	.L139
 2275              	.LVL237:
 2276              	.L144:
1026:Src/main.c    **** 	return 1;
 2277              		.loc 1 1026 0
 2278 0052 0748     		ldr	r0, .L145+20
 2279              	.LVL238:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 67


 2280 0054 FFF7FEFF 		bl	printf
 2281              	.LVL239:
1027:Src/main.c    **** 
 2282              		.loc 1 1027 0
 2283 0058 0120     		movs	r0, #1
 2284 005a F4E7     		b	.L138
 2285              	.L146:
 2286              		.align	2
 2287              	.L145:
 2288 005c 00000000 		.word	.LC17
 2289 0060 0C000000 		.word	.LC18
 2290 0064 00000000 		.word	mqtt_connection_cb
 2291 0068 48000000 		.word	.LC21
 2292 006c 1C000000 		.word	.LC19
 2293 0070 28000000 		.word	.LC20
 2294              		.cfi_endproc
 2295              	.LFE172:
 2297              		.section	.text.mqtt_connection_cb,"ax",%progbits
 2298              		.align	1
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2302              		.fpu fpv5-sp-d16
 2304              	mqtt_connection_cb:
 2305              	.LFB173:
1037:Src/main.c    **** 
 2306              		.loc 1 1037 0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 0
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 2310              	.LVL240:
 2311 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2312              	.LCFI31:
 2313              		.cfi_def_cfa_offset 24
 2314              		.cfi_offset 4, -24
 2315              		.cfi_offset 5, -20
 2316              		.cfi_offset 6, -16
 2317              		.cfi_offset 7, -12
 2318              		.cfi_offset 8, -8
 2319              		.cfi_offset 14, -4
 2320 0004 82B0     		sub	sp, sp, #8
 2321              	.LCFI32:
 2322              		.cfi_def_cfa_offset 32
 2323 0006 0446     		mov	r4, r0
1041:Src/main.c    ****     printf("mqtt_connection_cb: Successfully connected\n");
 2324              		.loc 1 1041 0
 2325 0008 32BB     		cbnz	r2, .L148
 2326 000a 0E46     		mov	r6, r1
1042:Src/main.c    **** 
 2327              		.loc 1 1042 0
 2328 000c 1748     		ldr	r0, .L151
 2329              	.LVL241:
 2330 000e FFF7FEFF 		bl	puts
 2331              	.LVL242:
1045:Src/main.c    **** 
 2332              		.loc 1 1045 0
 2333 0012 3346     		mov	r3, r6
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 68


 2334 0014 164A     		ldr	r2, .L151+4
 2335 0016 1749     		ldr	r1, .L151+8
 2336 0018 2046     		mov	r0, r4
 2337 001a FFF7FEFF 		bl	mqtt_set_inpub_callback
 2338              	.LVL243:
1048:Src/main.c    **** 	err2 = mqtt_subscribe(client, "esp/temperature/client1", 1, mqtt_sub_request_cb, arg);
 2339              		.loc 1 1048 0
 2340 001e 164F     		ldr	r7, .L151+12
 2341 0020 0125     		movs	r5, #1
 2342 0022 0195     		str	r5, [sp, #4]
 2343 0024 0096     		str	r6, [sp]
 2344 0026 3B46     		mov	r3, r7
 2345 0028 2A46     		mov	r2, r5
 2346 002a 1449     		ldr	r1, .L151+16
 2347 002c 2046     		mov	r0, r4
 2348 002e FFF7FEFF 		bl	mqtt_sub_unsub
 2349              	.LVL244:
 2350 0032 8046     		mov	r8, r0
 2351              	.LVL245:
1049:Src/main.c    **** 
 2352              		.loc 1 1049 0
 2353 0034 0195     		str	r5, [sp, #4]
 2354 0036 0096     		str	r6, [sp]
 2355 0038 3B46     		mov	r3, r7
 2356 003a 2A46     		mov	r2, r5
 2357 003c 1049     		ldr	r1, .L151+20
 2358 003e 2046     		mov	r0, r4
 2359 0040 FFF7FEFF 		bl	mqtt_sub_unsub
 2360              	.LVL246:
1051:Src/main.c    ****       printf("mqtt_subscribe return: %d\n", err);
 2361              		.loc 1 1051 0
 2362 0044 0028     		cmp	r0, #0
 2363 0046 08BF     		it	eq
 2364 0048 B8F1000F 		cmpeq	r8, #0
 2365 004c 0BD0     		beq	.L147
1052:Src/main.c    ****     }
 2366              		.loc 1 1052 0
 2367 004e 4146     		mov	r1, r8
 2368 0050 0C48     		ldr	r0, .L151+24
 2369              	.LVL247:
 2370 0052 FFF7FEFF 		bl	printf
 2371              	.LVL248:
 2372 0056 06E0     		b	.L147
 2373              	.LVL249:
 2374              	.L148:
 2375 0058 1146     		mov	r1, r2
 2376              	.LVL250:
1055:Src/main.c    ****     /* Its more nice to be connected, so try to reconnect */
 2377              		.loc 1 1055 0
 2378 005a 0B48     		ldr	r0, .L151+28
 2379              	.LVL251:
 2380 005c FFF7FEFF 		bl	printf
 2381              	.LVL252:
1057:Src/main.c    ****   }
 2382              		.loc 1 1057 0
 2383 0060 2046     		mov	r0, r4
 2384 0062 FFF7FEFF 		bl	example_do_connect
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 69


 2385              	.LVL253:
 2386              	.L147:
1060:Src/main.c    **** 
 2387              		.loc 1 1060 0
 2388 0066 02B0     		add	sp, sp, #8
 2389              	.LCFI33:
 2390              		.cfi_def_cfa_offset 24
 2391              		@ sp needed
 2392 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2393              	.LVL254:
 2394              	.L152:
 2395              		.align	2
 2396              	.L151:
 2397 006c 00000000 		.word	.LC22
 2398 0070 00000000 		.word	mqtt_incoming_data_cb
 2399 0074 00000000 		.word	mqtt_incoming_publish_cb
 2400 0078 00000000 		.word	mqtt_sub_request_cb
 2401 007c 2C000000 		.word	.LC23
 2402 0080 44000000 		.word	.LC8
 2403 0084 44000000 		.word	.LC24
 2404 0088 60000000 		.word	.LC25
 2405              		.cfi_endproc
 2406              	.LFE173:
 2408              		.section	.text.example_publish,"ax",%progbits
 2409              		.align	1
 2410              		.global	example_publish
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2414              		.fpu fpv5-sp-d16
 2416              	example_publish:
 2417              	.LFB178:
1153:Src/main.c    ****   }
1154:Src/main.c    **** }
1155:Src/main.c    **** 
1156:Src/main.c    **** void example_publish(mqtt_client_t *client, void *arg)
1157:Src/main.c    **** {
 2418              		.loc 1 1157 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 2422              	.LVL255:
 2423 0000 00B5     		push	{lr}
 2424              	.LCFI34:
 2425              		.cfi_def_cfa_offset 4
 2426              		.cfi_offset 14, -4
 2427 0002 85B0     		sub	sp, sp, #20
 2428              	.LCFI35:
 2429              		.cfi_def_cfa_offset 24
 2430              	.LVL256:
1158:Src/main.c    ****   const char *pub_payload= "give_temperature";
1159:Src/main.c    ****   err_t err;
1160:Src/main.c    ****   u8_t qos = 2; /* 0 1 or 2, see MQTT specification */
1161:Src/main.c    ****   u8_t retain = 0; /* No don't retain such crappy payload... */
1162:Src/main.c    ****   err = mqtt_publish(client, "esp/temperature", pub_payload, strlen(pub_payload), qos, retain, mqtt
 2431              		.loc 1 1162 0
 2432 0004 0391     		str	r1, [sp, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 70


 2433 0006 0A4B     		ldr	r3, .L157
 2434 0008 0293     		str	r3, [sp, #8]
 2435 000a 0023     		movs	r3, #0
 2436 000c 0193     		str	r3, [sp, #4]
 2437 000e 0223     		movs	r3, #2
 2438 0010 0093     		str	r3, [sp]
 2439 0012 1023     		movs	r3, #16
 2440 0014 074A     		ldr	r2, .L157+4
 2441 0016 0849     		ldr	r1, .L157+8
 2442              	.LVL257:
 2443 0018 FFF7FEFF 		bl	mqtt_publish
 2444              	.LVL258:
1163:Src/main.c    ****   if(err != ERR_OK) {
 2445              		.loc 1 1163 0
 2446 001c 10B9     		cbnz	r0, .L156
 2447              	.LVL259:
 2448              	.L153:
1164:Src/main.c    ****     printf("Publish err: %d\n", err);
1165:Src/main.c    ****   }
1166:Src/main.c    **** }
 2449              		.loc 1 1166 0
 2450 001e 05B0     		add	sp, sp, #20
 2451              	.LCFI36:
 2452              		.cfi_remember_state
 2453              		.cfi_def_cfa_offset 4
 2454              		@ sp needed
 2455 0020 5DF804FB 		ldr	pc, [sp], #4
 2456              	.LVL260:
 2457              	.L156:
 2458              	.LCFI37:
 2459              		.cfi_restore_state
 2460 0024 0146     		mov	r1, r0
1164:Src/main.c    ****     printf("Publish err: %d\n", err);
 2461              		.loc 1 1164 0
 2462 0026 0548     		ldr	r0, .L157+12
 2463              	.LVL261:
 2464 0028 FFF7FEFF 		bl	printf
 2465              	.LVL262:
 2466              		.loc 1 1166 0
 2467 002c F7E7     		b	.L153
 2468              	.L158:
 2469 002e 00BF     		.align	2
 2470              	.L157:
 2471 0030 00000000 		.word	mqtt_pub_request_cb
 2472 0034 00000000 		.word	.LC26
 2473 0038 14000000 		.word	.LC27
 2474 003c 24000000 		.word	.LC28
 2475              		.cfi_endproc
 2476              	.LFE178:
 2478              		.section	.text.draw_menu,"ax",%progbits
 2479              		.align	1
 2480              		.global	draw_menu
 2481              		.syntax unified
 2482              		.thumb
 2483              		.thumb_func
 2484              		.fpu fpv5-sp-d16
 2486              	draw_menu:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 71


 2487              	.LFB179:
1167:Src/main.c    **** 
1168:Src/main.c    **** // zmienna jest u gory bo przyjmowanie danych musi wiedziec czy moze wyswietlic je
1169:Src/main.c    **** // int which_window = 0;
1170:Src/main.c    **** 
1171:Src/main.c    **** int button_return[4] = {125,220,140,50};
1172:Src/main.c    **** int button_choose_thermometer1[4] = {50,120,140,50};
1173:Src/main.c    **** int button_choose_thermometer2[4] = {250,120,140,50};
1174:Src/main.c    **** int button_show_temperature[4] = {50,120,140,50};
1175:Src/main.c    **** int button_show_charts[4] = {250,120,140,50};
1176:Src/main.c    **** 
1177:Src/main.c    **** void draw_menu(){
 2488              		.loc 1 1177 0
 2489              		.cfi_startproc
 2490              		@ args = 0, pretend = 0, frame = 40
 2491              		@ frame_needed = 0, uses_anonymous_args = 0
 2492 0000 30B5     		push	{r4, r5, lr}
 2493              	.LCFI38:
 2494              		.cfi_def_cfa_offset 12
 2495              		.cfi_offset 4, -12
 2496              		.cfi_offset 5, -8
 2497              		.cfi_offset 14, -4
 2498 0002 8BB0     		sub	sp, sp, #44
 2499              	.LCFI39:
 2500              		.cfi_def_cfa_offset 56
1178:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 2501              		.loc 1 1178 0
 2502 0004 4FF0FF30 		mov	r0, #-1
 2503 0008 FFF7FEFF 		bl	BSP_LCD_Clear
 2504              	.LVL263:
1179:Src/main.c    ****   BSP_LCD_SelectLayer(0);
 2505              		.loc 1 1179 0
 2506 000c 0020     		movs	r0, #0
 2507 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 2508              	.LVL264:
1180:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 2509              		.loc 1 1180 0
 2510 0012 4FF0FF20 		mov	r0, #-16711936
 2511 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2512              	.LVL265:
1181:Src/main.c    ****   // BSP_LCD_FillRect(0,0,LCD_X_SIZE,LCD_Y_SIZE);
1182:Src/main.c    **** 
1183:Src/main.c    ****   //select Foreground Layer
1184:Src/main.c    ****   BSP_LCD_SelectLayer(1);
 2513              		.loc 1 1184 0
 2514 001a 0120     		movs	r0, #1
 2515 001c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 2516              	.LVL266:
1185:Src/main.c    ****   char actual[] = "Actual temperature";
 2517              		.loc 1 1185 0
 2518 0020 05AC     		add	r4, sp, #20
 2519 0022 0F4D     		ldr	r5, .L161
 2520 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2521 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2522 0028 2B68     		ldr	r3, [r5]
 2523 002a 24F8023B 		strh	r3, [r4], #2	@ movhi
 2524 002e 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 72


 2525 0030 2370     		strb	r3, [r4]
1186:Src/main.c    ****   char charts[] = "Temperature charts";
 2526              		.loc 1 1186 0
 2527 0032 6C46     		mov	r4, sp
 2528 0034 0B4D     		ldr	r5, .L161+4
 2529 0036 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2530 0038 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2531 003a 2B68     		ldr	r3, [r5]
 2532 003c 24F8023B 		strh	r3, [r4], #2	@ movhi
 2533 0040 1B0C     		lsrs	r3, r3, #16
 2534 0042 2370     		strb	r3, [r4]
1187:Src/main.c    ****   draw_button(button_show_temperature,LCD_COLOR_MAGENTA,&actual);
 2535              		.loc 1 1187 0
 2536 0044 05AA     		add	r2, sp, #20
 2537 0046 6FF47F41 		mvn	r1, #65280
 2538 004a 0748     		ldr	r0, .L161+8
 2539 004c FFF7FEFF 		bl	draw_button
 2540              	.LVL267:
1188:Src/main.c    ****   draw_button(button_show_charts,LCD_COLOR_MAGENTA,&charts);
 2541              		.loc 1 1188 0
 2542 0050 6A46     		mov	r2, sp
 2543 0052 6FF47F41 		mvn	r1, #65280
 2544 0056 0548     		ldr	r0, .L161+12
 2545 0058 FFF7FEFF 		bl	draw_button
 2546              	.LVL268:
1189:Src/main.c    **** 
1190:Src/main.c    **** }
 2547              		.loc 1 1190 0
 2548 005c 0BB0     		add	sp, sp, #44
 2549              	.LCFI40:
 2550              		.cfi_def_cfa_offset 12
 2551              		@ sp needed
 2552 005e 30BD     		pop	{r4, r5, pc}
 2553              	.L162:
 2554              		.align	2
 2555              	.L161:
 2556 0060 00000000 		.word	.LC29
 2557 0064 14000000 		.word	.LC30
 2558 0068 00000000 		.word	.LANCHOR7
 2559 006c 00000000 		.word	.LANCHOR8
 2560              		.cfi_endproc
 2561              	.LFE179:
 2563              		.section	.text.draw_choose_thermometer,"ax",%progbits
 2564              		.align	1
 2565              		.global	draw_choose_thermometer
 2566              		.syntax unified
 2567              		.thumb
 2568              		.thumb_func
 2569              		.fpu fpv5-sp-d16
 2571              	draw_choose_thermometer:
 2572              	.LFB180:
1191:Src/main.c    **** 
1192:Src/main.c    **** void draw_choose_thermometer(){
 2573              		.loc 1 1192 0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 40
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 73


 2577 0000 10B5     		push	{r4, lr}
 2578              	.LCFI41:
 2579              		.cfi_def_cfa_offset 8
 2580              		.cfi_offset 4, -8
 2581              		.cfi_offset 14, -4
 2582 0002 8AB0     		sub	sp, sp, #40
 2583              	.LCFI42:
 2584              		.cfi_def_cfa_offset 48
1193:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 2585              		.loc 1 1193 0
 2586 0004 4FF0FF30 		mov	r0, #-1
 2587 0008 FFF7FEFF 		bl	BSP_LCD_Clear
 2588              	.LVL269:
1194:Src/main.c    ****   BSP_LCD_SelectLayer(0);
 2589              		.loc 1 1194 0
 2590 000c 0020     		movs	r0, #0
 2591 000e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 2592              	.LVL270:
1195:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_GREEN);
 2593              		.loc 1 1195 0
 2594 0012 4FF0FF20 		mov	r0, #-16711936
 2595 0016 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 2596              	.LVL271:
1196:Src/main.c    ****   // BSP_LCD_FillRect(0,0,LCD_X_SIZE,LCD_Y_SIZE);
1197:Src/main.c    **** 
1198:Src/main.c    ****   //select Foreground Layer
1199:Src/main.c    ****   BSP_LCD_SelectLayer(1);
 2597              		.loc 1 1199 0
 2598 001a 0120     		movs	r0, #1
 2599 001c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 2600              	.LVL272:
1200:Src/main.c    ****   char thermometer1[] = "Thermometer 1";
 2601              		.loc 1 1200 0
 2602 0020 134B     		ldr	r3, .L165
 2603 0022 06AC     		add	r4, sp, #24
 2604 0024 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2605 0026 07C4     		stmia	r4!, {r0, r1, r2}
 2606 0028 2380     		strh	r3, [r4]	@ movhi
1201:Src/main.c    ****   char thermometer2[] = "Thermometer 2";
 2607              		.loc 1 1201 0
 2608 002a 124B     		ldr	r3, .L165+4
 2609 002c 02AC     		add	r4, sp, #8
 2610 002e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2611 0030 07C4     		stmia	r4!, {r0, r1, r2}
 2612 0032 2380     		strh	r3, [r4]	@ movhi
1202:Src/main.c    ****   char return_text[] = "Return";
 2613              		.loc 1 1202 0
 2614 0034 104B     		ldr	r3, .L165+8
 2615 0036 93E80300 		ldm	r3, {r0, r1}
 2616 003a 0090     		str	r0, [sp]
 2617 003c ADF80410 		strh	r1, [sp, #4]	@ movhi
 2618 0040 090C     		lsrs	r1, r1, #16
 2619 0042 8DF80610 		strb	r1, [sp, #6]
1203:Src/main.c    ****   draw_button(button_choose_thermometer1,LCD_COLOR_MAGENTA,&thermometer1);
 2620              		.loc 1 1203 0
 2621 0046 06AA     		add	r2, sp, #24
 2622 0048 6FF47F41 		mvn	r1, #65280
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 74


 2623 004c 0B48     		ldr	r0, .L165+12
 2624 004e FFF7FEFF 		bl	draw_button
 2625              	.LVL273:
1204:Src/main.c    ****   draw_button(button_choose_thermometer2,LCD_COLOR_MAGENTA,&thermometer2);
 2626              		.loc 1 1204 0
 2627 0052 02AA     		add	r2, sp, #8
 2628 0054 6FF47F41 		mvn	r1, #65280
 2629 0058 0948     		ldr	r0, .L165+16
 2630 005a FFF7FEFF 		bl	draw_button
 2631              	.LVL274:
1205:Src/main.c    ****   draw_button(button_return,LCD_COLOR_MAGENTA,&return_text);
 2632              		.loc 1 1205 0
 2633 005e 6A46     		mov	r2, sp
 2634 0060 6FF47F41 		mvn	r1, #65280
 2635 0064 0748     		ldr	r0, .L165+20
 2636 0066 FFF7FEFF 		bl	draw_button
 2637              	.LVL275:
1206:Src/main.c    **** }
 2638              		.loc 1 1206 0
 2639 006a 0AB0     		add	sp, sp, #40
 2640              	.LCFI43:
 2641              		.cfi_def_cfa_offset 8
 2642              		@ sp needed
 2643 006c 10BD     		pop	{r4, pc}
 2644              	.L166:
 2645 006e 00BF     		.align	2
 2646              	.L165:
 2647 0070 00000000 		.word	.LC31
 2648 0074 10000000 		.word	.LC32
 2649 0078 20000000 		.word	.LC33
 2650 007c 00000000 		.word	.LANCHOR9
 2651 0080 00000000 		.word	.LANCHOR10
 2652 0084 00000000 		.word	.LANCHOR11
 2653              		.cfi_endproc
 2654              	.LFE180:
 2656              		.section	.text.draw_actual_temperature,"ax",%progbits
 2657              		.align	1
 2658              		.global	draw_actual_temperature
 2659              		.syntax unified
 2660              		.thumb
 2661              		.thumb_func
 2662              		.fpu fpv5-sp-d16
 2664              	draw_actual_temperature:
 2665              	.LFB181:
1207:Src/main.c    **** 
1208:Src/main.c    **** void draw_actual_temperature(){
 2666              		.loc 1 1208 0
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 24
 2669              		@ frame_needed = 0, uses_anonymous_args = 0
 2670 0000 00B5     		push	{lr}
 2671              	.LCFI44:
 2672              		.cfi_def_cfa_offset 4
 2673              		.cfi_offset 14, -4
 2674 0002 87B0     		sub	sp, sp, #28
 2675              	.LCFI45:
 2676              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 75


1209:Src/main.c    **** 
1210:Src/main.c    **** 	//pozwol mqtt wyswietlac dane
1211:Src/main.c    **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 2677              		.loc 1 1211 0
 2678 0004 4FF0FF30 		mov	r0, #-1
 2679 0008 FFF7FEFF 		bl	BSP_LCD_Clear
 2680              	.LVL276:
1212:Src/main.c    **** 	char no_value[] = "No value";
 2681              		.loc 1 1212 0
 2682 000c 104A     		ldr	r2, .L169
 2683 000e 03AB     		add	r3, sp, #12
 2684 0010 07CA     		ldm	r2, {r0, r1, r2}
 2685 0012 03C3     		stmia	r3!, {r0, r1}
 2686 0014 1A70     		strb	r2, [r3]
1213:Src/main.c    **** 	print_data(no_value, 1, 8);
 2687              		.loc 1 1213 0
 2688 0016 0822     		movs	r2, #8
 2689 0018 0121     		movs	r1, #1
 2690 001a 03A8     		add	r0, sp, #12
 2691 001c FFF7FEFF 		bl	print_data
 2692              	.LVL277:
1214:Src/main.c    **** 	print_data(no_value, 2, 8);
 2693              		.loc 1 1214 0
 2694 0020 0822     		movs	r2, #8
 2695 0022 0221     		movs	r1, #2
 2696 0024 03A8     		add	r0, sp, #12
 2697 0026 FFF7FEFF 		bl	print_data
 2698              	.LVL278:
1215:Src/main.c    **** 	char return_text[] = "Return";
 2699              		.loc 1 1215 0
 2700 002a 0A4B     		ldr	r3, .L169+4
 2701 002c 93E80300 		ldm	r3, {r0, r1}
 2702 0030 0190     		str	r0, [sp, #4]
 2703 0032 ADF80810 		strh	r1, [sp, #8]	@ movhi
 2704 0036 090C     		lsrs	r1, r1, #16
 2705 0038 8DF80A10 		strb	r1, [sp, #10]
1216:Src/main.c    **** 	draw_button(button_return,LCD_COLOR_MAGENTA,&return_text);
 2706              		.loc 1 1216 0
 2707 003c 01AA     		add	r2, sp, #4
 2708 003e 6FF47F41 		mvn	r1, #65280
 2709 0042 0548     		ldr	r0, .L169+8
 2710 0044 FFF7FEFF 		bl	draw_button
 2711              	.LVL279:
1217:Src/main.c    **** }
 2712              		.loc 1 1217 0
 2713 0048 07B0     		add	sp, sp, #28
 2714              	.LCFI46:
 2715              		.cfi_def_cfa_offset 4
 2716              		@ sp needed
 2717 004a 5DF804FB 		ldr	pc, [sp], #4
 2718              	.L170:
 2719 004e 00BF     		.align	2
 2720              	.L169:
 2721 0050 00000000 		.word	.LC34
 2722 0054 20000000 		.word	.LC33
 2723 0058 00000000 		.word	.LANCHOR11
 2724              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 76


 2725              	.LFE181:
 2727              		.section	.text.draw_chosen_chart,"ax",%progbits
 2728              		.align	1
 2729              		.global	draw_chosen_chart
 2730              		.syntax unified
 2731              		.thumb
 2732              		.thumb_func
 2733              		.fpu fpv5-sp-d16
 2735              	draw_chosen_chart:
 2736              	.LFB182:
1218:Src/main.c    **** 
1219:Src/main.c    **** void draw_chosen_chart(int id_thermometer){
 2737              		.loc 1 1219 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 8
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741              	.LVL280:
 2742 0000 10B5     		push	{r4, lr}
 2743              	.LCFI47:
 2744              		.cfi_def_cfa_offset 8
 2745              		.cfi_offset 4, -8
 2746              		.cfi_offset 14, -4
 2747 0002 82B0     		sub	sp, sp, #8
 2748              	.LCFI48:
 2749              		.cfi_def_cfa_offset 16
 2750 0004 0446     		mov	r4, r0
1220:Src/main.c    **** 
1221:Src/main.c    ****   //narysuj odpowiedni wykres
1222:Src/main.c    ****   if(id_thermometer == 1){
 2751              		.loc 1 1222 0
 2752 0006 0128     		cmp	r0, #1
 2753 0008 03D0     		beq	.L175
 2754              	.LVL281:
 2755              	.L172:
1223:Src/main.c    **** 		draw_chart();
1224:Src/main.c    **** 		char return_text[] = "Return";
1225:Src/main.c    **** 		draw_button(button_return,LCD_COLOR_MAGENTA,&return_text);
1226:Src/main.c    **** 	}
1227:Src/main.c    **** 	
1228:Src/main.c    **** 	  if(id_thermometer == 2){
 2756              		.loc 1 1228 0
 2757 000a 022C     		cmp	r4, #2
 2758 000c 13D0     		beq	.L176
 2759              	.L171:
1229:Src/main.c    **** 		draw_chart2();
1230:Src/main.c    **** 		char return_text[] = "Return";
1231:Src/main.c    **** 		draw_button(button_return,LCD_COLOR_MAGENTA,&return_text);
1232:Src/main.c    **** 	}
1233:Src/main.c    **** }
 2760              		.loc 1 1233 0
 2761 000e 02B0     		add	sp, sp, #8
 2762              	.LCFI49:
 2763              		.cfi_remember_state
 2764              		.cfi_def_cfa_offset 8
 2765              		@ sp needed
 2766 0010 10BD     		pop	{r4, pc}
 2767              	.LVL282:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 77


 2768              	.L175:
 2769              	.LCFI50:
 2770              		.cfi_restore_state
 2771              	.LBB37:
1223:Src/main.c    **** 		draw_chart();
 2772              		.loc 1 1223 0
 2773 0012 FFF7FEFF 		bl	draw_chart
 2774              	.LVL283:
1224:Src/main.c    **** 		draw_button(button_return,LCD_COLOR_MAGENTA,&return_text);
 2775              		.loc 1 1224 0
 2776 0016 114B     		ldr	r3, .L177
 2777 0018 93E80300 		ldm	r3, {r0, r1}
 2778 001c 0090     		str	r0, [sp]
 2779 001e ADF80410 		strh	r1, [sp, #4]	@ movhi
 2780 0022 090C     		lsrs	r1, r1, #16
 2781 0024 8DF80610 		strb	r1, [sp, #6]
1225:Src/main.c    **** 	}
 2782              		.loc 1 1225 0
 2783 0028 6A46     		mov	r2, sp
 2784 002a 6FF47F41 		mvn	r1, #65280
 2785 002e 0C48     		ldr	r0, .L177+4
 2786 0030 FFF7FEFF 		bl	draw_button
 2787              	.LVL284:
 2788 0034 E9E7     		b	.L172
 2789              	.L176:
 2790              	.LBE37:
 2791              	.LBB38:
1229:Src/main.c    **** 		draw_chart2();
 2792              		.loc 1 1229 0
 2793 0036 FFF7FEFF 		bl	draw_chart2
 2794              	.LVL285:
1230:Src/main.c    **** 		draw_button(button_return,LCD_COLOR_MAGENTA,&return_text);
 2795              		.loc 1 1230 0
 2796 003a 084B     		ldr	r3, .L177
 2797 003c 93E80300 		ldm	r3, {r0, r1}
 2798 0040 0090     		str	r0, [sp]
 2799 0042 ADF80410 		strh	r1, [sp, #4]	@ movhi
 2800 0046 090C     		lsrs	r1, r1, #16
 2801 0048 8DF80610 		strb	r1, [sp, #6]
1231:Src/main.c    **** 	}
 2802              		.loc 1 1231 0
 2803 004c 6A46     		mov	r2, sp
 2804 004e 6FF47F41 		mvn	r1, #65280
 2805 0052 0348     		ldr	r0, .L177+4
 2806 0054 FFF7FEFF 		bl	draw_button
 2807              	.LVL286:
 2808              	.LBE38:
 2809              		.loc 1 1233 0
 2810 0058 D9E7     		b	.L171
 2811              	.L178:
 2812 005a 00BF     		.align	2
 2813              	.L177:
 2814 005c 20000000 		.word	.LC33
 2815 0060 00000000 		.word	.LANCHOR11
 2816              		.cfi_endproc
 2817              	.LFE182:
 2819              		.section	.text.mqtt_incoming_data_cb,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 78


 2820              		.align	1
 2821              		.syntax unified
 2822              		.thumb
 2823              		.thumb_func
 2824              		.fpu fpv5-sp-d16
 2826              	mqtt_incoming_data_cb:
 2827              	.LFB176:
1102:Src/main.c    ****   printf("Incoming publish payload with length %d, flags %u\n", len, (unsigned int)flags);
 2828              		.loc 1 1102 0
 2829              		.cfi_startproc
 2830              		@ args = 0, pretend = 0, frame = 0
 2831              		@ frame_needed = 0, uses_anonymous_args = 0
 2832              	.LVL287:
 2833 0000 70B5     		push	{r4, r5, r6, lr}
 2834              	.LCFI51:
 2835              		.cfi_def_cfa_offset 16
 2836              		.cfi_offset 4, -16
 2837              		.cfi_offset 5, -12
 2838              		.cfi_offset 6, -8
 2839              		.cfi_offset 14, -4
 2840 0002 0E46     		mov	r6, r1
 2841 0004 1546     		mov	r5, r2
 2842 0006 1C46     		mov	r4, r3
1103:Src/main.c    **** 
 2843              		.loc 1 1103 0
 2844 0008 1A46     		mov	r2, r3
 2845              	.LVL288:
 2846 000a 2946     		mov	r1, r5
 2847              	.LVL289:
 2848 000c 2548     		ldr	r0, .L192
 2849              	.LVL290:
 2850 000e FFF7FEFF 		bl	printf
 2851              	.LVL291:
1105:Src/main.c    ****     /* Last fragment of payload received (or whole part if payload fits receive buffer
 2852              		.loc 1 1105 0
 2853 0012 14F0010F 		tst	r4, #1
 2854 0016 06D0     		beq	.L179
1110:Src/main.c    ****       /* Don't trust the publisher, check zero termination */
 2855              		.loc 1 1110 0
 2856 0018 234B     		ldr	r3, .L192+4
 2857 001a 1B68     		ldr	r3, [r3]
 2858 001c 4BB9     		cbnz	r3, .L181
1112:Src/main.c    ****         printf("mqtt_incoming_data_cb: %s\n", (const char *)data);
 2859              		.loc 1 1112 0
 2860 001e 3544     		add	r5, r5, r6
 2861 0020 15F8013C 		ldrb	r3, [r5, #-1]	@ zero_extendqisi2
 2862 0024 03B1     		cbz	r3, .L187
 2863              	.L179:
 2864 0026 70BD     		pop	{r4, r5, r6, pc}
 2865              	.LVL292:
 2866              	.L187:
1113:Src/main.c    ****       }
 2867              		.loc 1 1113 0
 2868 0028 3146     		mov	r1, r6
 2869 002a 2048     		ldr	r0, .L192+8
 2870 002c FFF7FEFF 		bl	printf
 2871              	.LVL293:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 79


 2872 0030 70BD     		pop	{r4, r5, r6, pc}
 2873              	.LVL294:
 2874              	.L181:
1115:Src/main.c    ****       /* Call an 'A' function... */
 2875              		.loc 1 1115 0
 2876 0032 012B     		cmp	r3, #1
 2877 0034 15D0     		beq	.L188
1120:Src/main.c    **** 		add_data_to_buffer((const char *)data,1);
 2878              		.loc 1 1120 0
 2879 0036 022B     		cmp	r3, #2
 2880 0038 17D0     		beq	.L189
1132:Src/main.c    **** 	  add_data_to_buffer((const char *)data,2);
 2881              		.loc 1 1132 0
 2882 003a 3146     		mov	r1, r6
 2883 003c 1B48     		ldr	r0, .L192+8
 2884 003e FFF7FEFF 		bl	printf
 2885              	.LVL295:
1133:Src/main.c    **** 	  if(which_window == 2){
 2886              		.loc 1 1133 0
 2887 0042 0221     		movs	r1, #2
 2888 0044 3046     		mov	r0, r6
 2889 0046 FFF7FEFF 		bl	add_data_to_buffer
 2890              	.LVL296:
1134:Src/main.c    **** 		print_data((const char *)data,2,len);
 2891              		.loc 1 1134 0
 2892 004a 194B     		ldr	r3, .L192+12
 2893 004c 1B68     		ldr	r3, [r3]
 2894 004e 022B     		cmp	r3, #2
 2895 0050 21D0     		beq	.L190
 2896              	.L185:
1137:Src/main.c    **** 		draw_chosen_chart(2);
 2897              		.loc 1 1137 0
 2898 0052 174B     		ldr	r3, .L192+12
 2899 0054 1B68     		ldr	r3, [r3]
 2900 0056 042B     		cmp	r3, #4
 2901 0058 E5D1     		bne	.L179
 2902              	.LBB39:
1138:Src/main.c    **** 	  }
 2903              		.loc 1 1138 0
 2904 005a 0220     		movs	r0, #2
 2905 005c FFF7FEFF 		bl	draw_chosen_chart
 2906              	.LVL297:
 2907              	.LBE39:
1145:Src/main.c    **** 
 2908              		.loc 1 1145 0
 2909 0060 E1E7     		b	.L179
 2910              	.L188:
1118:Src/main.c    **** 
 2911              		.loc 1 1118 0
 2912 0062 1448     		ldr	r0, .L192+16
 2913 0064 FFF7FEFF 		bl	xprintf
 2914              	.LVL298:
 2915 0068 70BD     		pop	{r4, r5, r6, pc}
 2916              	.LVL299:
 2917              	.L189:
1121:Src/main.c    **** 		if(which_window == 2){
 2918              		.loc 1 1121 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 80


 2919 006a 0121     		movs	r1, #1
 2920 006c 3046     		mov	r0, r6
 2921 006e FFF7FEFF 		bl	add_data_to_buffer
 2922              	.LVL300:
1122:Src/main.c    **** 			
 2923              		.loc 1 1122 0
 2924 0072 0F4B     		ldr	r3, .L192+12
 2925 0074 1B68     		ldr	r3, [r3]
 2926 0076 022B     		cmp	r3, #2
 2927 0078 07D0     		beq	.L191
 2928              	.L184:
1126:Src/main.c    **** 			draw_chosen_chart(1);
 2929              		.loc 1 1126 0
 2930 007a 0D4B     		ldr	r3, .L192+12
 2931 007c 1B68     		ldr	r3, [r3]
 2932 007e 032B     		cmp	r3, #3
 2933 0080 D1D1     		bne	.L179
 2934              	.LBB40:
1127:Src/main.c    **** 		}
 2935              		.loc 1 1127 0
 2936 0082 0120     		movs	r0, #1
 2937 0084 FFF7FEFF 		bl	draw_chosen_chart
 2938              	.LVL301:
 2939 0088 70BD     		pop	{r4, r5, r6, pc}
 2940              	.LVL302:
 2941              	.L191:
 2942              	.LBE40:
1124:Src/main.c    **** 		}
 2943              		.loc 1 1124 0
 2944 008a 2A46     		mov	r2, r5
 2945 008c 0121     		movs	r1, #1
 2946 008e 3046     		mov	r0, r6
 2947 0090 FFF7FEFF 		bl	print_data
 2948              	.LVL303:
 2949 0094 F1E7     		b	.L184
 2950              	.L190:
1135:Src/main.c    **** 	  }
 2951              		.loc 1 1135 0
 2952 0096 2A46     		mov	r2, r5
 2953 0098 0221     		movs	r1, #2
 2954 009a 3046     		mov	r0, r6
 2955 009c FFF7FEFF 		bl	print_data
 2956              	.LVL304:
 2957 00a0 D7E7     		b	.L185
 2958              	.L193:
 2959 00a2 00BF     		.align	2
 2960              	.L192:
 2961 00a4 00000000 		.word	.LC35
 2962 00a8 00000000 		.word	.LANCHOR0
 2963 00ac 34000000 		.word	.LC36
 2964 00b0 00000000 		.word	.LANCHOR12
 2965 00b4 50000000 		.word	.LC37
 2966              		.cfi_endproc
 2967              	.LFE176:
 2969              		.section	.text.touched_button,"ax",%progbits
 2970              		.align	1
 2971              		.global	touched_button
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 81


 2972              		.syntax unified
 2973              		.thumb
 2974              		.thumb_func
 2975              		.fpu fpv5-sp-d16
 2977              	touched_button:
 2978              	.LFB183:
1234:Src/main.c    **** 
1235:Src/main.c    **** int touched_button(int button[4],int x, int y){
 2979              		.loc 1 1235 0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 0
 2982              		@ frame_needed = 0, uses_anonymous_args = 0
 2983              		@ link register save eliminated.
 2984              	.LVL305:
1236:Src/main.c    ****   if(button[0] <= x && (button[0] + button[2]) >= x && button[1] <= y && (button[3] + button[1]) >=
 2985              		.loc 1 1236 0
 2986 0000 0368     		ldr	r3, [r0]
 2987 0002 8B42     		cmp	r3, r1
 2988 0004 0DDC     		bgt	.L196
1235:Src/main.c    ****   if(button[0] <= x && (button[0] + button[2]) >= x && button[1] <= y && (button[3] + button[1]) >=
 2989              		.loc 1 1235 0 discriminator 1
 2990 0006 10B4     		push	{r4}
 2991              	.LCFI52:
 2992              		.cfi_def_cfa_offset 4
 2993              		.cfi_offset 4, -4
 2994              		.loc 1 1236 0 discriminator 1
 2995 0008 8468     		ldr	r4, [r0, #8]
 2996 000a 2344     		add	r3, r3, r4
 2997 000c 9942     		cmp	r1, r3
 2998 000e 0ADC     		bgt	.L197
 2999              		.loc 1 1236 0 is_stmt 0 discriminator 2
 3000 0010 4368     		ldr	r3, [r0, #4]
 3001 0012 9342     		cmp	r3, r2
 3002 0014 0BDC     		bgt	.L198
 3003              		.loc 1 1236 0 discriminator 3
 3004 0016 C168     		ldr	r1, [r0, #12]
 3005              	.LVL306:
 3006 0018 0B44     		add	r3, r3, r1
 3007 001a 9A42     		cmp	r2, r3
 3008 001c 09DD     		ble	.L199
1237:Src/main.c    ****     return 1;
1238:Src/main.c    ****   }
1239:Src/main.c    ****   return 0;
 3009              		.loc 1 1239 0 is_stmt 1
 3010 001e 0020     		movs	r0, #0
 3011              	.LVL307:
 3012 0020 02E0     		b	.L194
 3013              	.LVL308:
 3014              	.L196:
 3015              	.LCFI53:
 3016              		.cfi_def_cfa_offset 0
 3017              		.cfi_restore 4
 3018 0022 0020     		movs	r0, #0
 3019              	.LVL309:
 3020 0024 7047     		bx	lr
 3021              	.LVL310:
 3022              	.L197:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 82


 3023              	.LCFI54:
 3024              		.cfi_def_cfa_offset 4
 3025              		.cfi_offset 4, -4
 3026 0026 0020     		movs	r0, #0
 3027              	.LVL311:
 3028              	.L194:
1240:Src/main.c    **** }
 3029              		.loc 1 1240 0
 3030 0028 5DF8044B 		ldr	r4, [sp], #4
 3031              	.LCFI55:
 3032              		.cfi_remember_state
 3033              		.cfi_restore 4
 3034              		.cfi_def_cfa_offset 0
 3035 002c 7047     		bx	lr
 3036              	.LVL312:
 3037              	.L198:
 3038              	.LCFI56:
 3039              		.cfi_restore_state
1239:Src/main.c    **** }
 3040              		.loc 1 1239 0
 3041 002e 0020     		movs	r0, #0
 3042              	.LVL313:
 3043 0030 FAE7     		b	.L194
 3044              	.LVL314:
 3045              	.L199:
1237:Src/main.c    ****     return 1;
 3046              		.loc 1 1237 0
 3047 0032 0120     		movs	r0, #1
 3048              	.LVL315:
 3049 0034 F8E7     		b	.L194
 3050              		.cfi_endproc
 3051              	.LFE183:
 3053              		.section	.text.StartDefaultTask,"ax",%progbits
 3054              		.align	1
 3055              		.global	StartDefaultTask
 3056              		.syntax unified
 3057              		.thumb
 3058              		.thumb_func
 3059              		.fpu fpv5-sp-d16
 3061              	StartDefaultTask:
 3062              	.LFB184:
1241:Src/main.c    **** 
1242:Src/main.c    **** 
1243:Src/main.c    **** void StartDefaultTask(void const * argument)
1244:Src/main.c    **** {
 3063              		.loc 1 1244 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 496
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              	.LVL316:
 3068 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3069              	.LCFI57:
 3070              		.cfi_def_cfa_offset 20
 3071              		.cfi_offset 4, -20
 3072              		.cfi_offset 5, -16
 3073              		.cfi_offset 6, -12
 3074              		.cfi_offset 7, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 83


 3075              		.cfi_offset 14, -4
 3076 0002 FDB0     		sub	sp, sp, #500
 3077              	.LCFI58:
 3078              		.cfi_def_cfa_offset 520
1245:Src/main.c    ****   
1246:Src/main.c    ****   //odkomentowac to ponizej!!
1247:Src/main.c    ****   MX_LWIP_Init();
 3079              		.loc 1 1247 0
 3080 0004 FFF7FEFF 		bl	MX_LWIP_Init
 3081              	.LVL317:
1248:Src/main.c    **** 
1249:Src/main.c    ****   /*MQTT */
1250:Src/main.c    **** 
1251:Src/main.c    ****   int tmp = 1; //1
 3082              		.loc 1 1251 0
 3083 0008 0124     		movs	r4, #1
1252:Src/main.c    ****   mqtt_client_t static_client;
1253:Src/main.c    ****   while(tmp == 1){
 3084              		.loc 1 1253 0
 3085 000a 0EE0     		b	.L205
 3086              	.LVL318:
 3087              	.L206:
1254:Src/main.c    **** 	xprintf("Trying to connect\n");
 3088              		.loc 1 1254 0
 3089 000c 5648     		ldr	r0, .L231
 3090 000e FFF7FEFF 		bl	xprintf
 3091              	.LVL319:
1255:Src/main.c    **** 	vTaskDelay(1000);
 3092              		.loc 1 1255 0
 3093 0012 4FF47A70 		mov	r0, #1000
 3094 0016 FFF7FEFF 		bl	vTaskDelay
 3095              	.LVL320:
1256:Src/main.c    **** 	tmp = example_do_connect(&static_client);
 3096              		.loc 1 1256 0
 3097 001a 6846     		mov	r0, sp
 3098 001c FFF7FEFF 		bl	example_do_connect
 3099              	.LVL321:
 3100 0020 0446     		mov	r4, r0
 3101              	.LVL322:
1257:Src/main.c    **** 	vTaskDelay(1000);
 3102              		.loc 1 1257 0
 3103 0022 4FF47A70 		mov	r0, #1000
 3104              	.LVL323:
 3105 0026 FFF7FEFF 		bl	vTaskDelay
 3106              	.LVL324:
 3107              	.L205:
1253:Src/main.c    **** 	xprintf("Trying to connect\n");
 3108              		.loc 1 1253 0
 3109 002a 012C     		cmp	r4, #1
 3110 002c EED0     		beq	.L206
1258:Src/main.c    ****   //xprintf("tutaj koniecx");
1259:Src/main.c    ****   }
1260:Src/main.c    **** 
1261:Src/main.c    ****   which_window = 0;
 3111              		.loc 1 1261 0
 3112 002e 0025     		movs	r5, #0
 3113 0030 4E4B     		ldr	r3, .L231+4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 84


 3114 0032 1D60     		str	r5, [r3]
1262:Src/main.c    ****   draw_menu();
 3115              		.loc 1 1262 0
 3116 0034 FFF7FEFF 		bl	draw_menu
 3117              	.LVL325:
 3118 0038 5DE0     		b	.L215
 3119              	.LVL326:
 3120              	.L229:
 3121              	.LBB41:
 3122              	.LBB42:
1263:Src/main.c    **** 	int still_touched = 0;
1264:Src/main.c    ****   for(;;)
1265:Src/main.c    ****   {
1266:Src/main.c    **** 	
1267:Src/main.c    **** 	BSP_TS_GetState(&TS_State);
1268:Src/main.c    **** 	if(TS_State.touchDetected && still_touched == 0)
1269:Src/main.c    **** 	{
1270:Src/main.c    **** 	still_touched = 1;
1271:Src/main.c    ****     xprintf("Touched touchscreen\n");
1272:Src/main.c    ****     //pobrac jakos wspolrzedne dotknietego pola
1273:Src/main.c    ****     int x = TS_State.touchX[0];
1274:Src/main.c    ****     int y = TS_State.touchY[0];
1275:Src/main.c    **** 	printf("x %d\n", x);
1276:Src/main.c    **** 	printf("y %d\n", y);
1277:Src/main.c    ****     if(which_window == 0){
1278:Src/main.c    ****       if(touched_button(button_show_charts,x,y) == 1){
1279:Src/main.c    ****         draw_choose_thermometer();
 3123              		.loc 1 1279 0
 3124 003a FFF7FEFF 		bl	draw_choose_thermometer
 3125              	.LVL327:
1280:Src/main.c    ****         which_window = 1;
 3126              		.loc 1 1280 0
 3127 003e 0122     		movs	r2, #1
 3128 0040 4A4B     		ldr	r3, .L231+4
 3129 0042 1A60     		str	r2, [r3]
 3130 0044 50E0     		b	.L210
 3131              	.L230:
1281:Src/main.c    ****       }
1282:Src/main.c    ****       else if(touched_button(button_show_temperature,x,y) == 1){
1283:Src/main.c    ****         draw_actual_temperature();
 3132              		.loc 1 1283 0
 3133 0046 FFF7FEFF 		bl	draw_actual_temperature
 3134              	.LVL328:
1284:Src/main.c    ****         //przy otrzymaniu danych mqtt pokaze temperature
1285:Src/main.c    ****         which_window = 2;
 3135              		.loc 1 1285 0
 3136 004a 0222     		movs	r2, #2
 3137 004c 474B     		ldr	r3, .L231+4
 3138 004e 1A60     		str	r2, [r3]
 3139 0050 4AE0     		b	.L210
 3140              	.L208:
1286:Src/main.c    ****       }
1287:Src/main.c    ****     }
1288:Src/main.c    ****     else if(which_window == 1){
 3141              		.loc 1 1288 0
 3142 0052 012D     		cmp	r5, #1
 3143 0054 06D0     		beq	.L222
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 85


1289:Src/main.c    ****       if(touched_button(button_choose_thermometer1,x,y) == 1){
1290:Src/main.c    ****         draw_chosen_chart(1);
1291:Src/main.c    ****         which_window = 3;
1292:Src/main.c    ****       }
1293:Src/main.c    ****       else if(touched_button(button_choose_thermometer2,x,y) == 1){
1294:Src/main.c    ****         draw_chosen_chart(2);
1295:Src/main.c    ****         which_window = 4;
1296:Src/main.c    ****       }
1297:Src/main.c    **** 	  else if(touched_button(button_choose_thermometer2,x,y) == 1){
1298:Src/main.c    **** 		draw_menu();
1299:Src/main.c    **** 		which_window = 0;
1300:Src/main.c    **** 	  }
1301:Src/main.c    ****     }
1302:Src/main.c    ****     else if(which_window == 2){
 3144              		.loc 1 1302 0
 3145 0056 022D     		cmp	r5, #2
 3146 0058 24D0     		beq	.L223
1303:Src/main.c    ****       if(touched_button(button_return,x,y) == 1){
1304:Src/main.c    ****         draw_menu();
1305:Src/main.c    ****         which_window = 0;
1306:Src/main.c    ****       }
1307:Src/main.c    ****     }
1308:Src/main.c    ****     else if(which_window == 3 || which_window == 4){
 3147              		.loc 1 1308 0
 3148 005a 033D     		subs	r5, r5, #3
 3149 005c 012D     		cmp	r5, #1
 3150 005e 31D9     		bls	.L224
1270:Src/main.c    ****     xprintf("Touched touchscreen\n");
 3151              		.loc 1 1270 0
 3152 0060 0125     		movs	r5, #1
 3153 0062 41E0     		b	.L210
 3154              	.L222:
1289:Src/main.c    ****       if(touched_button(button_choose_thermometer1,x,y) == 1){
 3155              		.loc 1 1289 0
 3156 0064 3246     		mov	r2, r6
 3157 0066 2146     		mov	r1, r4
 3158 0068 4148     		ldr	r0, .L231+8
 3159 006a FFF7FEFF 		bl	touched_button
 3160              	.LVL329:
 3161 006e 0746     		mov	r7, r0
 3162 0070 0128     		cmp	r0, #1
 3163 0072 0FD0     		beq	.L225
1293:Src/main.c    ****         draw_chosen_chart(2);
 3164              		.loc 1 1293 0
 3165 0074 3246     		mov	r2, r6
 3166 0076 2146     		mov	r1, r4
 3167 0078 3E48     		ldr	r0, .L231+12
 3168 007a FFF7FEFF 		bl	touched_button
 3169              	.LVL330:
 3170 007e 0446     		mov	r4, r0
 3171              	.LVL331:
 3172 0080 0128     		cmp	r0, #1
 3173 0082 31D1     		bne	.L210
1294:Src/main.c    ****         which_window = 4;
 3174              		.loc 1 1294 0
 3175 0084 0220     		movs	r0, #2
 3176 0086 FFF7FEFF 		bl	draw_chosen_chart
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 86


 3177              	.LVL332:
1295:Src/main.c    ****       }
 3178              		.loc 1 1295 0
 3179 008a 0422     		movs	r2, #4
 3180 008c 374B     		ldr	r3, .L231+4
 3181 008e 1A60     		str	r2, [r3]
1270:Src/main.c    ****     xprintf("Touched touchscreen\n");
 3182              		.loc 1 1270 0
 3183 0090 2546     		mov	r5, r4
 3184 0092 29E0     		b	.L210
 3185              	.LVL333:
 3186              	.L225:
1290:Src/main.c    ****         which_window = 3;
 3187              		.loc 1 1290 0
 3188 0094 0120     		movs	r0, #1
 3189 0096 FFF7FEFF 		bl	draw_chosen_chart
 3190              	.LVL334:
1291:Src/main.c    ****       }
 3191              		.loc 1 1291 0
 3192 009a 0322     		movs	r2, #3
 3193 009c 334B     		ldr	r3, .L231+4
 3194 009e 1A60     		str	r2, [r3]
1270:Src/main.c    ****     xprintf("Touched touchscreen\n");
 3195              		.loc 1 1270 0
 3196 00a0 3D46     		mov	r5, r7
 3197 00a2 21E0     		b	.L210
 3198              	.L223:
1303:Src/main.c    ****         draw_menu();
 3199              		.loc 1 1303 0
 3200 00a4 3246     		mov	r2, r6
 3201 00a6 2146     		mov	r1, r4
 3202 00a8 3348     		ldr	r0, .L231+16
 3203 00aa FFF7FEFF 		bl	touched_button
 3204              	.LVL335:
 3205 00ae 0546     		mov	r5, r0
 3206 00b0 0128     		cmp	r0, #1
 3207 00b2 01D0     		beq	.L226
1270:Src/main.c    ****     xprintf("Touched touchscreen\n");
 3208              		.loc 1 1270 0
 3209 00b4 0125     		movs	r5, #1
 3210 00b6 17E0     		b	.L210
 3211              	.L226:
1304:Src/main.c    ****         which_window = 0;
 3212              		.loc 1 1304 0
 3213 00b8 FFF7FEFF 		bl	draw_menu
 3214              	.LVL336:
1305:Src/main.c    ****       }
 3215              		.loc 1 1305 0
 3216 00bc 0022     		movs	r2, #0
 3217 00be 2B4B     		ldr	r3, .L231+4
 3218 00c0 1A60     		str	r2, [r3]
 3219 00c2 11E0     		b	.L210
 3220              	.L224:
1309:Src/main.c    ****       if(touched_button(button_return,x,y) == 1){
 3221              		.loc 1 1309 0
 3222 00c4 3246     		mov	r2, r6
 3223 00c6 2146     		mov	r1, r4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 87


 3224 00c8 2B48     		ldr	r0, .L231+16
 3225 00ca FFF7FEFF 		bl	touched_button
 3226              	.LVL337:
 3227 00ce 0546     		mov	r5, r0
 3228 00d0 0128     		cmp	r0, #1
 3229 00d2 01D0     		beq	.L227
1270:Src/main.c    ****     xprintf("Touched touchscreen\n");
 3230              		.loc 1 1270 0
 3231 00d4 0125     		movs	r5, #1
 3232 00d6 07E0     		b	.L210
 3233              	.L227:
1310:Src/main.c    ****         draw_menu();
 3234              		.loc 1 1310 0
 3235 00d8 FFF7FEFF 		bl	draw_menu
 3236              	.LVL338:
1311:Src/main.c    ****         which_window = 0;
 3237              		.loc 1 1311 0
 3238 00dc 0022     		movs	r2, #0
 3239 00de 234B     		ldr	r3, .L231+4
 3240 00e0 1A60     		str	r2, [r3]
 3241 00e2 01E0     		b	.L210
 3242              	.LVL339:
 3243              	.L207:
 3244              	.LBE42:
1312:Src/main.c    ****       }
1313:Src/main.c    ****     }
1314:Src/main.c    **** 	
1315:Src/main.c    **** 	}
1316:Src/main.c    **** 	else if(TS_State.touchDetected){
 3245              		.loc 1 1316 0
 3246 00e4 002B     		cmp	r3, #0
 3247 00e6 35D0     		beq	.L220
 3248              	.LVL340:
 3249              	.L210:
1317:Src/main.c    **** 		
1318:Src/main.c    **** 	}
1319:Src/main.c    **** 	else{
1320:Src/main.c    **** 		still_touched = 0;
1321:Src/main.c    **** 	}
1322:Src/main.c    **** 	char key = inkey();
 3250              		.loc 1 1322 0
 3251 00e8 FFF7FEFF 		bl	inkey
 3252              	.LVL341:
1323:Src/main.c    **** 	if(key == 'p'){
 3253              		.loc 1 1323 0
 3254 00ec 7028     		cmp	r0, #112
 3255 00ee 33D0     		beq	.L228
 3256              	.LVL342:
 3257              	.L214:
1324:Src/main.c    **** 		xprintf("Send message \n");
1325:Src/main.c    **** 		example_publish(&static_client,2);
1326:Src/main.c    **** 	}
1327:Src/main.c    **** 
1328:Src/main.c    **** 
1329:Src/main.c    **** 	vTaskDelay(2);
 3258              		.loc 1 1329 0
 3259 00f0 0220     		movs	r0, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 88


 3260 00f2 FFF7FEFF 		bl	vTaskDelay
 3261              	.LVL343:
 3262              	.L215:
1267:Src/main.c    **** 	if(TS_State.touchDetected && still_touched == 0)
 3263              		.loc 1 1267 0
 3264 00f6 214C     		ldr	r4, .L231+20
 3265 00f8 2046     		mov	r0, r4
 3266 00fa FFF7FEFF 		bl	BSP_TS_GetState
 3267              	.LVL344:
1268:Src/main.c    **** 	{
 3268              		.loc 1 1268 0
 3269 00fe 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3270 0100 002B     		cmp	r3, #0
 3271 0102 EFD0     		beq	.L207
1268:Src/main.c    **** 	{
 3272              		.loc 1 1268 0 is_stmt 0 discriminator 1
 3273 0104 002D     		cmp	r5, #0
 3274 0106 EDD1     		bne	.L207
 3275              	.LVL345:
 3276              	.LBB43:
1271:Src/main.c    ****     //pobrac jakos wspolrzedne dotknietego pola
 3277              		.loc 1 1271 0 is_stmt 1
 3278 0108 1D48     		ldr	r0, .L231+24
 3279 010a FFF7FEFF 		bl	xprintf
 3280              	.LVL346:
1273:Src/main.c    ****     int y = TS_State.touchY[0];
 3281              		.loc 1 1273 0
 3282 010e 2346     		mov	r3, r4
 3283 0110 6488     		ldrh	r4, [r4, #2]
 3284              	.LVL347:
1274:Src/main.c    **** 	printf("x %d\n", x);
 3285              		.loc 1 1274 0
 3286 0112 9E89     		ldrh	r6, [r3, #12]
 3287              	.LVL348:
1275:Src/main.c    **** 	printf("y %d\n", y);
 3288              		.loc 1 1275 0
 3289 0114 2146     		mov	r1, r4
 3290 0116 1B48     		ldr	r0, .L231+28
 3291 0118 FFF7FEFF 		bl	printf
 3292              	.LVL349:
1276:Src/main.c    ****     if(which_window == 0){
 3293              		.loc 1 1276 0
 3294 011c 3146     		mov	r1, r6
 3295 011e 1A48     		ldr	r0, .L231+32
 3296 0120 FFF7FEFF 		bl	printf
 3297              	.LVL350:
1277:Src/main.c    ****       if(touched_button(button_show_charts,x,y) == 1){
 3298              		.loc 1 1277 0
 3299 0124 114B     		ldr	r3, .L231+4
 3300 0126 1D68     		ldr	r5, [r3]
 3301 0128 002D     		cmp	r5, #0
 3302 012a 92D1     		bne	.L208
1278:Src/main.c    ****         draw_choose_thermometer();
 3303              		.loc 1 1278 0
 3304 012c 3246     		mov	r2, r6
 3305 012e 2146     		mov	r1, r4
 3306 0130 1648     		ldr	r0, .L231+36
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 89


 3307 0132 FFF7FEFF 		bl	touched_button
 3308              	.LVL351:
 3309 0136 0546     		mov	r5, r0
 3310 0138 0128     		cmp	r0, #1
 3311 013a 3FF47EAF 		beq	.L229
1282:Src/main.c    ****         draw_actual_temperature();
 3312              		.loc 1 1282 0
 3313 013e 3246     		mov	r2, r6
 3314 0140 2146     		mov	r1, r4
 3315 0142 1348     		ldr	r0, .L231+40
 3316 0144 FFF7FEFF 		bl	touched_button
 3317              	.LVL352:
 3318 0148 0546     		mov	r5, r0
 3319 014a 0128     		cmp	r0, #1
 3320 014c 3FF47BAF 		beq	.L230
1270:Src/main.c    ****     xprintf("Touched touchscreen\n");
 3321              		.loc 1 1270 0
 3322 0150 0125     		movs	r5, #1
 3323 0152 C9E7     		b	.L210
 3324              	.LVL353:
 3325              	.L220:
 3326              	.LBE43:
1320:Src/main.c    **** 	}
 3327              		.loc 1 1320 0
 3328 0154 0025     		movs	r5, #0
 3329              	.LVL354:
 3330 0156 C7E7     		b	.L210
 3331              	.LVL355:
 3332              	.L228:
1324:Src/main.c    **** 		example_publish(&static_client,2);
 3333              		.loc 1 1324 0
 3334 0158 0E48     		ldr	r0, .L231+44
 3335              	.LVL356:
 3336 015a FFF7FEFF 		bl	xprintf
 3337              	.LVL357:
1325:Src/main.c    **** 	}
 3338              		.loc 1 1325 0
 3339 015e 0221     		movs	r1, #2
 3340 0160 6846     		mov	r0, sp
 3341 0162 FFF7FEFF 		bl	example_publish
 3342              	.LVL358:
 3343 0166 C3E7     		b	.L214
 3344              	.L232:
 3345              		.align	2
 3346              	.L231:
 3347 0168 00000000 		.word	.LC38
 3348 016c 00000000 		.word	.LANCHOR12
 3349 0170 00000000 		.word	.LANCHOR9
 3350 0174 00000000 		.word	.LANCHOR10
 3351 0178 00000000 		.word	.LANCHOR11
 3352 017c 00000000 		.word	.LANCHOR13
 3353 0180 14000000 		.word	.LC39
 3354 0184 2C000000 		.word	.LC40
 3355 0188 34000000 		.word	.LC41
 3356 018c 00000000 		.word	.LANCHOR8
 3357 0190 00000000 		.word	.LANCHOR7
 3358 0194 3C000000 		.word	.LC42
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 90


 3359              	.LBE41:
 3360              		.cfi_endproc
 3361              	.LFE184:
 3363              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 3364              		.align	1
 3365              		.global	HAL_TIM_PeriodElapsedCallback
 3366              		.syntax unified
 3367              		.thumb
 3368              		.thumb_func
 3369              		.fpu fpv5-sp-d16
 3371              	HAL_TIM_PeriodElapsedCallback:
 3372              	.LFB185:
1330:Src/main.c    **** 
1331:Src/main.c    ****   }
1332:Src/main.c    ****   /* USER CODE END 5 */
1333:Src/main.c    **** }
1334:Src/main.c    **** 
1335:Src/main.c    **** /**
1336:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
1337:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
1338:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1339:Src/main.c    ****   * a global variable "uwTick" used as application time base.
1340:Src/main.c    ****   * @param  htim : TIM handle
1341:Src/main.c    ****   * @retval None
1342:Src/main.c    ****   */
1343:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1344:Src/main.c    **** {
 3373              		.loc 1 1344 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 0
 3376              		@ frame_needed = 0, uses_anonymous_args = 0
 3377              	.LVL359:
 3378 0000 08B5     		push	{r3, lr}
 3379              	.LCFI59:
 3380              		.cfi_def_cfa_offset 8
 3381              		.cfi_offset 3, -8
 3382              		.cfi_offset 14, -4
1345:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
1346:Src/main.c    **** 
1347:Src/main.c    ****   /* USER CODE END Callback 0 */
1348:Src/main.c    ****   if (htim->Instance == TIM6) {
 3383              		.loc 1 1348 0
 3384 0002 0268     		ldr	r2, [r0]
 3385 0004 034B     		ldr	r3, .L237
 3386 0006 9A42     		cmp	r2, r3
 3387 0008 00D0     		beq	.L236
 3388              	.LVL360:
 3389              	.L233:
 3390 000a 08BD     		pop	{r3, pc}
 3391              	.LVL361:
 3392              	.L236:
1349:Src/main.c    ****     HAL_IncTick();
 3393              		.loc 1 1349 0
 3394 000c FFF7FEFF 		bl	HAL_IncTick
 3395              	.LVL362:
1350:Src/main.c    ****   }
1351:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 91


1352:Src/main.c    **** 
1353:Src/main.c    ****   /* USER CODE END Callback 1 */
1354:Src/main.c    **** }
 3396              		.loc 1 1354 0
 3397 0010 FBE7     		b	.L233
 3398              	.L238:
 3399 0012 00BF     		.align	2
 3400              	.L237:
 3401 0014 00100040 		.word	1073745920
 3402              		.cfi_endproc
 3403              	.LFE185:
 3405              		.section	.text._Error_Handler,"ax",%progbits
 3406              		.align	1
 3407              		.global	_Error_Handler
 3408              		.syntax unified
 3409              		.thumb
 3410              		.thumb_func
 3411              		.fpu fpv5-sp-d16
 3413              	_Error_Handler:
 3414              	.LFB186:
1355:Src/main.c    **** 
1356:Src/main.c    **** /**
1357:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1358:Src/main.c    ****   * @param  file: The file name as string.
1359:Src/main.c    ****   * @param  line: The line in file as a number.
1360:Src/main.c    ****   * @retval None
1361:Src/main.c    ****   */
1362:Src/main.c    **** void _Error_Handler(char *file, int line)
1363:Src/main.c    **** {
 3415              		.loc 1 1363 0
 3416              		.cfi_startproc
 3417              		@ Volatile: function does not return.
 3418              		@ args = 0, pretend = 0, frame = 0
 3419              		@ frame_needed = 0, uses_anonymous_args = 0
 3420              		@ link register save eliminated.
 3421              	.LVL363:
 3422              	.L240:
 3423 0000 FEE7     		b	.L240
 3424              		.cfi_endproc
 3425              	.LFE186:
 3427              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 3428              		.align	1
 3429              		.syntax unified
 3430              		.thumb
 3431              		.thumb_func
 3432              		.fpu fpv5-sp-d16
 3434              	MX_USART1_UART_Init:
 3435              	.LFB169:
 775:Src/main.c    **** 
 3436              		.loc 1 775 0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 775:Src/main.c    **** 
 3440              		.loc 1 775 0
 3441 0000 08B5     		push	{r3, lr}
 3442              	.LCFI60:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 92


 3443              		.cfi_def_cfa_offset 8
 3444              		.cfi_offset 3, -8
 3445              		.cfi_offset 14, -4
 777:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 3446              		.loc 1 777 0
 3447 0002 0C48     		ldr	r0, .L245
 3448 0004 0C4B     		ldr	r3, .L245+4
 3449 0006 0360     		str	r3, [r0]
 778:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 3450              		.loc 1 778 0
 3451 0008 4FF4E133 		mov	r3, #115200
 3452 000c 4360     		str	r3, [r0, #4]
 779:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 3453              		.loc 1 779 0
 3454 000e 0023     		movs	r3, #0
 3455 0010 8360     		str	r3, [r0, #8]
 780:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 3456              		.loc 1 780 0
 3457 0012 C360     		str	r3, [r0, #12]
 781:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 3458              		.loc 1 781 0
 3459 0014 0361     		str	r3, [r0, #16]
 782:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3460              		.loc 1 782 0
 3461 0016 0C22     		movs	r2, #12
 3462 0018 4261     		str	r2, [r0, #20]
 783:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 3463              		.loc 1 783 0
 3464 001a 8361     		str	r3, [r0, #24]
 784:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3465              		.loc 1 784 0
 3466 001c C361     		str	r3, [r0, #28]
 785:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3467              		.loc 1 785 0
 3468 001e 0362     		str	r3, [r0, #32]
 786:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 3469              		.loc 1 786 0
 3470 0020 4362     		str	r3, [r0, #36]
 787:Src/main.c    ****   {
 3471              		.loc 1 787 0
 3472 0022 FFF7FEFF 		bl	HAL_UART_Init
 3473              	.LVL364:
 3474 0026 00B9     		cbnz	r0, .L244
 3475 0028 08BD     		pop	{r3, pc}
 3476              	.L244:
 789:Src/main.c    ****   }
 3477              		.loc 1 789 0
 3478 002a 40F21531 		movw	r1, #789
 3479 002e 0348     		ldr	r0, .L245+8
 3480 0030 FFF7FEFF 		bl	_Error_Handler
 3481              	.LVL365:
 3482              	.L246:
 3483              		.align	2
 3484              	.L245:
 3485 0034 00000000 		.word	huart1
 3486 0038 00100140 		.word	1073811456
 3487 003c 00000000 		.word	.LC43
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 93


 3488              		.cfi_endproc
 3489              	.LFE169:
 3491              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 3492              		.align	1
 3493              		.syntax unified
 3494              		.thumb
 3495              		.thumb_func
 3496              		.fpu fpv5-sp-d16
 3498              	MX_USART6_UART_Init:
 3499              	.LFB170:
 796:Src/main.c    **** 
 3500              		.loc 1 796 0
 3501              		.cfi_startproc
 3502              		@ args = 0, pretend = 0, frame = 0
 3503              		@ frame_needed = 0, uses_anonymous_args = 0
 3504 0000 08B5     		push	{r3, lr}
 3505              	.LCFI61:
 3506              		.cfi_def_cfa_offset 8
 3507              		.cfi_offset 3, -8
 3508              		.cfi_offset 14, -4
 798:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 3509              		.loc 1 798 0
 3510 0002 0C48     		ldr	r0, .L251
 3511 0004 0C4B     		ldr	r3, .L251+4
 3512 0006 0360     		str	r3, [r0]
 799:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 3513              		.loc 1 799 0
 3514 0008 4FF4E133 		mov	r3, #115200
 3515 000c 4360     		str	r3, [r0, #4]
 800:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 3516              		.loc 1 800 0
 3517 000e 0023     		movs	r3, #0
 3518 0010 8360     		str	r3, [r0, #8]
 801:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 3519              		.loc 1 801 0
 3520 0012 C360     		str	r3, [r0, #12]
 802:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 3521              		.loc 1 802 0
 3522 0014 0361     		str	r3, [r0, #16]
 803:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3523              		.loc 1 803 0
 3524 0016 0C22     		movs	r2, #12
 3525 0018 4261     		str	r2, [r0, #20]
 804:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 3526              		.loc 1 804 0
 3527 001a 8361     		str	r3, [r0, #24]
 805:Src/main.c    ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3528              		.loc 1 805 0
 3529 001c C361     		str	r3, [r0, #28]
 806:Src/main.c    ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3530              		.loc 1 806 0
 3531 001e 0362     		str	r3, [r0, #32]
 807:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 3532              		.loc 1 807 0
 3533 0020 4362     		str	r3, [r0, #36]
 808:Src/main.c    ****   {
 3534              		.loc 1 808 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 94


 3535 0022 FFF7FEFF 		bl	HAL_UART_Init
 3536              	.LVL366:
 3537 0026 00B9     		cbnz	r0, .L250
 3538 0028 08BD     		pop	{r3, pc}
 3539              	.L250:
 810:Src/main.c    ****   }
 3540              		.loc 1 810 0
 3541 002a 40F22A31 		movw	r1, #810
 3542 002e 0348     		ldr	r0, .L251+8
 3543 0030 FFF7FEFF 		bl	_Error_Handler
 3544              	.LVL367:
 3545              	.L252:
 3546              		.align	2
 3547              	.L251:
 3548 0034 00000000 		.word	huart6
 3549 0038 00140140 		.word	1073812480
 3550 003c 00000000 		.word	.LC43
 3551              		.cfi_endproc
 3552              	.LFE170:
 3554              		.section	.text.SystemClock_Config,"ax",%progbits
 3555              		.align	1
 3556              		.global	SystemClock_Config
 3557              		.syntax unified
 3558              		.thumb
 3559              		.thumb_func
 3560              		.fpu fpv5-sp-d16
 3562              	SystemClock_Config:
 3563              	.LFB168:
 680:Src/main.c    **** 
 3564              		.loc 1 680 0
 3565              		.cfi_startproc
 3566              		@ args = 0, pretend = 0, frame = 208
 3567              		@ frame_needed = 0, uses_anonymous_args = 0
 3568 0000 00B5     		push	{lr}
 3569              	.LCFI62:
 3570              		.cfi_def_cfa_offset 4
 3571              		.cfi_offset 14, -4
 3572 0002 B5B0     		sub	sp, sp, #212
 3573              	.LCFI63:
 3574              		.cfi_def_cfa_offset 216
 3575              	.LBB44:
 688:Src/main.c    **** 
 3576              		.loc 1 688 0
 3577 0004 474B     		ldr	r3, .L263
 3578 0006 1A6C     		ldr	r2, [r3, #64]
 3579 0008 42F08052 		orr	r2, r2, #268435456
 3580 000c 1A64     		str	r2, [r3, #64]
 3581 000e 1B6C     		ldr	r3, [r3, #64]
 3582 0010 03F08053 		and	r3, r3, #268435456
 3583 0014 0093     		str	r3, [sp]
 3584 0016 009B     		ldr	r3, [sp]
 3585              	.LBE44:
 3586              	.LBB45:
 690:Src/main.c    **** 
 3587              		.loc 1 690 0
 3588 0018 434B     		ldr	r3, .L263+4
 3589 001a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 95


 3590 001c 42F44042 		orr	r2, r2, #49152
 3591 0020 1A60     		str	r2, [r3]
 3592 0022 1B68     		ldr	r3, [r3]
 3593 0024 03F44043 		and	r3, r3, #49152
 3594 0028 0193     		str	r3, [sp, #4]
 3595 002a 019B     		ldr	r3, [sp, #4]
 3596              	.LBE45:
 694:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3597              		.loc 1 694 0
 3598 002c 0923     		movs	r3, #9
 3599 002e 2893     		str	r3, [sp, #160]
 695:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3600              		.loc 1 695 0
 3601 0030 4FF48033 		mov	r3, #65536
 3602 0034 2993     		str	r3, [sp, #164]
 696:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3603              		.loc 1 696 0
 3604 0036 0123     		movs	r3, #1
 3605 0038 2D93     		str	r3, [sp, #180]
 697:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3606              		.loc 1 697 0
 3607 003a 0223     		movs	r3, #2
 3608 003c 2E93     		str	r3, [sp, #184]
 698:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 3609              		.loc 1 698 0
 3610 003e 4FF48002 		mov	r2, #4194304
 3611 0042 2F92     		str	r2, [sp, #188]
 699:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 3612              		.loc 1 699 0
 3613 0044 1922     		movs	r2, #25
 3614 0046 3092     		str	r2, [sp, #192]
 700:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3615              		.loc 1 700 0
 3616 0048 4FF4C872 		mov	r2, #400
 3617 004c 3192     		str	r2, [sp, #196]
 701:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 3618              		.loc 1 701 0
 3619 004e 3293     		str	r3, [sp, #200]
 702:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3620              		.loc 1 702 0
 3621 0050 0823     		movs	r3, #8
 3622 0052 3393     		str	r3, [sp, #204]
 703:Src/main.c    ****   {
 3623              		.loc 1 703 0
 3624 0054 28A8     		add	r0, sp, #160
 3625 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3626              	.LVL368:
 3627 005a 0028     		cmp	r0, #0
 3628 005c 4ED1     		bne	.L259
 710:Src/main.c    ****   {
 3629              		.loc 1 710 0
 3630 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3631              	.LVL369:
 3632 0062 0028     		cmp	r0, #0
 3633 0064 4FD1     		bne	.L260
 717:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3634              		.loc 1 717 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 96


 3635 0066 0F23     		movs	r3, #15
 3636 0068 2393     		str	r3, [sp, #140]
 719:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3637              		.loc 1 719 0
 3638 006a 0223     		movs	r3, #2
 3639 006c 2493     		str	r3, [sp, #144]
 720:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3640              		.loc 1 720 0
 3641 006e 0023     		movs	r3, #0
 3642 0070 2593     		str	r3, [sp, #148]
 721:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3643              		.loc 1 721 0
 3644 0072 4FF4A053 		mov	r3, #5120
 3645 0076 2693     		str	r3, [sp, #152]
 722:Src/main.c    **** 
 3646              		.loc 1 722 0
 3647 0078 4FF48053 		mov	r3, #4096
 3648 007c 2793     		str	r3, [sp, #156]
 724:Src/main.c    ****   {
 3649              		.loc 1 724 0
 3650 007e 0621     		movs	r1, #6
 3651 0080 23A8     		add	r0, sp, #140
 3652 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3653              	.LVL370:
 3654 0086 0028     		cmp	r0, #0
 3655 0088 42D1     		bne	.L261
 729:Src/main.c    ****                               |RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 3656              		.loc 1 729 0
 3657 008a 284B     		ldr	r3, .L263+8
 3658 008c 0293     		str	r3, [sp, #8]
 734:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3659              		.loc 1 734 0
 3660 008e 6423     		movs	r3, #100
 3661 0090 0393     		str	r3, [sp, #12]
 735:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3662              		.loc 1 735 0
 3663 0092 0223     		movs	r3, #2
 3664 0094 0693     		str	r3, [sp, #24]
 736:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3665              		.loc 1 736 0
 3666 0096 0493     		str	r3, [sp, #16]
 737:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3667              		.loc 1 737 0
 3668 0098 0593     		str	r3, [sp, #20]
 738:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3669              		.loc 1 738 0
 3670 009a C023     		movs	r3, #192
 3671 009c 0793     		str	r3, [sp, #28]
 739:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3672              		.loc 1 739 0
 3673 009e 0423     		movs	r3, #4
 3674 00a0 0993     		str	r3, [sp, #36]
 740:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 3675              		.loc 1 740 0
 3676 00a2 0893     		str	r3, [sp, #32]
 741:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 3677              		.loc 1 741 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 97


 3678 00a4 0123     		movs	r3, #1
 3679 00a6 0A93     		str	r3, [sp, #40]
 742:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3680              		.loc 1 742 0
 3681 00a8 0B93     		str	r3, [sp, #44]
 743:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3682              		.loc 1 743 0
 3683 00aa 0C93     		str	r3, [sp, #48]
 744:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3684              		.loc 1 744 0
 3685 00ac 4FF40033 		mov	r3, #131072
 3686 00b0 0D93     		str	r3, [sp, #52]
 745:Src/main.c    ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3687              		.loc 1 745 0
 3688 00b2 4FF40073 		mov	r3, #512
 3689 00b6 0E93     		str	r3, [sp, #56]
 746:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3690              		.loc 1 746 0
 3691 00b8 0023     		movs	r3, #0
 3692 00ba 1293     		str	r3, [sp, #72]
 747:Src/main.c    ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3693              		.loc 1 747 0
 3694 00bc 1393     		str	r3, [sp, #76]
 748:Src/main.c    ****   PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3695              		.loc 1 748 0
 3696 00be 1893     		str	r3, [sp, #96]
 749:Src/main.c    ****   PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3697              		.loc 1 749 0
 3698 00c0 1B93     		str	r3, [sp, #108]
 750:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3699              		.loc 1 750 0
 3700 00c2 1D93     		str	r3, [sp, #116]
 751:Src/main.c    ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3701              		.loc 1 751 0
 3702 00c4 4FF00062 		mov	r2, #134217728
 3703 00c8 2192     		str	r2, [sp, #132]
 752:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3704              		.loc 1 752 0
 3705 00ca 2293     		str	r3, [sp, #136]
 753:Src/main.c    ****   {
 3706              		.loc 1 753 0
 3707 00cc 02A8     		add	r0, sp, #8
 3708 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3709              	.LVL371:
 3710 00d2 10BB     		cbnz	r0, .L262
 760:Src/main.c    **** 
 3711              		.loc 1 760 0
 3712 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3713              	.LVL372:
 3714 00d8 154B     		ldr	r3, .L263+12
 3715 00da A3FB0030 		umull	r3, r0, r3, r0
 3716 00de 8009     		lsrs	r0, r0, #6
 3717 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
 3718              	.LVL373:
 764:Src/main.c    **** 
 3719              		.loc 1 764 0
 3720 00e4 0420     		movs	r0, #4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 98


 3721 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3722              	.LVL374:
 767:Src/main.c    **** }
 3723              		.loc 1 767 0
 3724 00ea 0022     		movs	r2, #0
 3725 00ec 0F21     		movs	r1, #15
 3726 00ee 4FF0FF30 		mov	r0, #-1
 3727 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3728              	.LVL375:
 768:Src/main.c    **** 
 3729              		.loc 1 768 0
 3730 00f6 35B0     		add	sp, sp, #212
 3731              	.LCFI64:
 3732              		.cfi_remember_state
 3733              		.cfi_def_cfa_offset 4
 3734              		@ sp needed
 3735 00f8 5DF804FB 		ldr	pc, [sp], #4
 3736              	.L259:
 3737              	.LCFI65:
 3738              		.cfi_restore_state
 705:Src/main.c    ****   }
 3739              		.loc 1 705 0
 3740 00fc 40F2C121 		movw	r1, #705
 3741 0100 0C48     		ldr	r0, .L263+16
 3742 0102 FFF7FEFF 		bl	_Error_Handler
 3743              	.LVL376:
 3744              	.L260:
 712:Src/main.c    ****   }
 3745              		.loc 1 712 0
 3746 0106 4FF43271 		mov	r1, #712
 3747 010a 0A48     		ldr	r0, .L263+16
 3748 010c FFF7FEFF 		bl	_Error_Handler
 3749              	.LVL377:
 3750              	.L261:
 726:Src/main.c    ****   }
 3751              		.loc 1 726 0
 3752 0110 40F2D621 		movw	r1, #726
 3753 0114 0748     		ldr	r0, .L263+16
 3754 0116 FFF7FEFF 		bl	_Error_Handler
 3755              	.LVL378:
 3756              	.L262:
 755:Src/main.c    ****   }
 3757              		.loc 1 755 0
 3758 011a 40F2F321 		movw	r1, #755
 3759 011e 0548     		ldr	r0, .L263+16
 3760 0120 FFF7FEFF 		bl	_Error_Handler
 3761              	.LVL379:
 3762              	.L264:
 3763              		.align	2
 3764              	.L263:
 3765 0124 00380240 		.word	1073887232
 3766 0128 00700040 		.word	1073770496
 3767 012c 6848B101 		.word	28395624
 3768 0130 D34D6210 		.word	274877907
 3769 0134 00000000 		.word	.LC43
 3770              		.cfi_endproc
 3771              	.LFE168:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 99


 3773              		.section	.text.main,"ax",%progbits
 3774              		.align	1
 3775              		.global	main
 3776              		.syntax unified
 3777              		.thumb
 3778              		.thumb_func
 3779              		.fpu fpv5-sp-d16
 3781              	main:
 3782              	.LFB167:
 609:Src/main.c    **** 
 3783              		.loc 1 609 0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 384
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
 3787 0000 30B5     		push	{r4, r5, lr}
 3788              	.LCFI66:
 3789              		.cfi_def_cfa_offset 12
 3790              		.cfi_offset 4, -12
 3791              		.cfi_offset 5, -8
 3792              		.cfi_offset 14, -4
 3793 0002 E1B0     		sub	sp, sp, #388
 3794              	.LCFI67:
 3795              		.cfi_def_cfa_offset 400
 612:Src/main.c    **** 
 3796              		.loc 1 612 0
 3797 0004 4FF4B472 		mov	r2, #360
 3798 0008 1E49     		ldr	r1, .L270
 3799 000a 06A8     		add	r0, sp, #24
 3800 000c FFF7FEFF 		bl	memcpy
 3801              	.LVL380:
 3802              	.LBB46:
 615:Src/main.c    ****     buffer[i] = INT32_MIN;
 3803              		.loc 1 615 0
 3804 0010 0023     		movs	r3, #0
 3805 0012 09E0     		b	.L266
 3806              	.LVL381:
 3807              	.L267:
 616:Src/main.c    **** 	buffer2[i] = INT32_MIN;
 3808              		.loc 1 616 0 discriminator 3
 3809 0014 9800     		lsls	r0, r3, #2
 3810 0016 1C4A     		ldr	r2, .L270+4
 3811 0018 0244     		add	r2, r2, r0
 3812 001a 4FF04F41 		mov	r1, #-822083584
 3813 001e 1160     		str	r1, [r2]	@ float
 617:Src/main.c    **** }
 3814              		.loc 1 617 0 discriminator 3
 3815 0020 1A4A     		ldr	r2, .L270+8
 3816 0022 0244     		add	r2, r2, r0
 3817 0024 1160     		str	r1, [r2]	@ float
 615:Src/main.c    ****     buffer[i] = INT32_MIN;
 3818              		.loc 1 615 0 discriminator 3
 3819 0026 0133     		adds	r3, r3, #1
 3820              	.LVL382:
 3821              	.L266:
 615:Src/main.c    ****     buffer[i] = INT32_MIN;
 3822              		.loc 1 615 0 is_stmt 0 discriminator 1
 3823 0028 C72B     		cmp	r3, #199
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 100


 3824 002a F3DD     		ble	.L267
 3825              	.LBE46:
 626:Src/main.c    **** 
 3826              		.loc 1 626 0 is_stmt 1
 3827 002c FFF7FEFF 		bl	HAL_Init
 3828              	.LVL383:
 633:Src/main.c    **** 
 3829              		.loc 1 633 0
 3830 0030 FFF7FEFF 		bl	SystemClock_Config
 3831              	.LVL384:
 640:Src/main.c    ****   MX_USART1_UART_Init();
 3832              		.loc 1 640 0
 3833 0034 FFF7FEFF 		bl	MX_GPIO_Init
 3834              	.LVL385:
 641:Src/main.c    ****   MX_USART6_UART_Init();
 3835              		.loc 1 641 0
 3836 0038 FFF7FEFF 		bl	MX_USART1_UART_Init
 3837              	.LVL386:
 642:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3838              		.loc 1 642 0
 3839 003c FFF7FEFF 		bl	MX_USART6_UART_Init
 3840              	.LVL387:
 644:Src/main.c    **** 
 3841              		.loc 1 644 0
 3842 0040 1348     		ldr	r0, .L270+12
 3843 0042 FFF7FEFF 		bl	debug_init
 3844              	.LVL388:
 646:Src/main.c    **** 
 3845              		.loc 1 646 0
 3846 0046 1348     		ldr	r0, .L270+16
 3847 0048 FFF7FEFF 		bl	xprintf
 3848              	.LVL389:
 648:Src/main.c    **** 
 3849              		.loc 1 648 0
 3850 004c 1248     		ldr	r0, .L270+20
 3851 004e FFF7FEFF 		bl	puts
 3852              	.LVL390:
 650:Src/main.c    **** draw_background();
 3853              		.loc 1 650 0
 3854 0052 FFF7FEFF 		bl	lcd_start
 3855              	.LVL391:
 651:Src/main.c    **** initialize_touchscreen();
 3856              		.loc 1 651 0
 3857 0056 FFF7FEFF 		bl	draw_background
 3858              	.LVL392:
 652:Src/main.c    **** draw_chart(data);
 3859              		.loc 1 652 0
 3860 005a FFF7FEFF 		bl	initialize_touchscreen
 3861              	.LVL393:
 653:Src/main.c    **** 
 3862              		.loc 1 653 0
 3863 005e 06A8     		add	r0, sp, #24
 3864 0060 FFF7FEFF 		bl	draw_chart
 3865              	.LVL394:
 657:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 3866              		.loc 1 657 0
 3867 0064 01AC     		add	r4, sp, #4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 101


 3868 0066 0D4D     		ldr	r5, .L270+24
 3869 0068 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3870 006a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3871 006c 2B68     		ldr	r3, [r5]
 3872 006e 2360     		str	r3, [r4]
 658:Src/main.c    **** 
 3873              		.loc 1 658 0
 3874 0070 0021     		movs	r1, #0
 3875 0072 01A8     		add	r0, sp, #4
 3876 0074 FFF7FEFF 		bl	osThreadCreate
 3877              	.LVL395:
 3878 0078 094B     		ldr	r3, .L270+28
 3879 007a 1860     		str	r0, [r3]
 662:Src/main.c    **** 
 3880              		.loc 1 662 0
 3881 007c FFF7FEFF 		bl	osKernelStart
 3882              	.LVL396:
 3883              	.L268:
 3884 0080 FEE7     		b	.L268
 3885              	.L271:
 3886 0082 00BF     		.align	2
 3887              	.L270:
 3888 0084 00000000 		.word	.LANCHOR14
 3889 0088 00000000 		.word	buffer
 3890 008c 00000000 		.word	buffer2
 3891 0090 00000000 		.word	huart1
 3892 0094 00000000 		.word	.LC44
 3893 0098 2C000000 		.word	.LC45
 3894 009c 68010000 		.word	.LANCHOR14+360
 3895 00a0 00000000 		.word	defaultTaskHandle
 3896              		.cfi_endproc
 3897              	.LFE167:
 3899              		.global	button_show_charts
 3900              		.global	button_show_temperature
 3901              		.global	button_choose_thermometer2
 3902              		.global	button_choose_thermometer1
 3903              		.global	button_return
 3904              		.global	which_window
 3905              		.comm	netconn_thread_handle,4,4
 3906              		.global	is_full2
 3907              		.global	current_pos2
 3908              		.global	first_index2
 3909              		.comm	buffer2,800,4
 3910              		.global	is_full
 3911              		.global	current_pos
 3912              		.global	first_index
 3913              		.comm	buffer,800,4
 3914              		.comm	defaultTaskHandle,4,4
 3915              		.comm	hsdram1,52,4
 3916              		.comm	huart6,112,4
 3917              		.comm	huart1,112,4
 3918              		.comm	htim12,64,4
 3919              		.comm	htim8,64,4
 3920              		.comm	htim7,64,4
 3921              		.comm	htim5,64,4
 3922              		.comm	htim3,64,4
 3923              		.comm	htim2,64,4
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 102


 3924              		.comm	htim1,64,4
 3925              		.comm	hspi2,100,4
 3926              		.comm	hspdif,76,4
 3927              		.comm	hsd1,132,4
 3928              		.comm	hsai_BlockB2,132,4
 3929              		.comm	hsai_BlockA2,132,4
 3930              		.comm	hrtc,32,4
 3931              		.comm	hqspi,76,4
 3932              		.comm	hltdc,168,4
 3933              		.comm	hi2c3,76,4
 3934              		.comm	hi2c1,76,4
 3935              		.comm	hdma2d,64,4
 3936              		.comm	hdcmi,80,4
 3937              		.comm	hcrc,36,4
 3938              		.comm	hadc3,72,4
 3939              		.section	.rodata
 3940              		.align	2
 3941              		.set	.LANCHOR14,. + 0
 3942              	.LC0:
 3943 0000 52B8A241 		.word	1101183058
 3944 0004 B81EAB41 		.word	1101733560
 3945 0008 6666A041 		.word	1101031014
 3946 000c 5C8FC841 		.word	1103662940
 3947 0010 8FC2AF41 		.word	1102037647
 3948 0014 F628C241 		.word	1103243510
 3949 0018 52B8D241 		.word	1104328786
 3950 001c B81ED341 		.word	1104355000
 3951 0020 5C8FD241 		.word	1104318300
 3952 0024 7B14B041 		.word	1102058619
 3953 0028 52B8A241 		.word	1101183058
 3954 002c B81EDB41 		.word	1104879288
 3955 0030 6666B041 		.word	1102079590
 3956 0034 5C8FC841 		.word	1103662940
 3957 0038 8FC2A741 		.word	1101513359
 3958 003c F628C241 		.word	1103243510
 3959 0040 52B8D241 		.word	1104328786
 3960 0044 B81EA341 		.word	1101209272
 3961 0048 5C8FD241 		.word	1104318300
 3962 004c 7B14B041 		.word	1102058619
 3963 0050 52B8A241 		.word	1101183058
 3964 0054 B81EAB41 		.word	1101733560
 3965 0058 6666B041 		.word	1102079590
 3966 005c 5C8FA841 		.word	1101565788
 3967 0060 8FC2D741 		.word	1104659087
 3968 0064 0AD7A141 		.word	1101125386
 3969 0068 52B8D241 		.word	1104328786
 3970 006c B81ED341 		.word	1104355000
 3971 0070 5C8FD241 		.word	1104318300
 3972 0074 7B14B041 		.word	1102058619
 3973 0078 52B8A241 		.word	1101183058
 3974 007c B81EAB41 		.word	1101733560
 3975 0080 6666B041 		.word	1102079590
 3976 0084 5C8FC841 		.word	1103662940
 3977 0088 8FC2D741 		.word	1104659087
 3978 008c F628C241 		.word	1103243510
 3979 0090 52B8D241 		.word	1104328786
 3980 0094 B81ED341 		.word	1104355000
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 103


 3981 0098 5C8FD241 		.word	1104318300
 3982 009c 7B14B041 		.word	1102058619
 3983 00a0 52B8A241 		.word	1101183058
 3984 00a4 B81EAB41 		.word	1101733560
 3985 00a8 6666B041 		.word	1102079590
 3986 00ac 5C8FC841 		.word	1103662940
 3987 00b0 8FC2D741 		.word	1104659087
 3988 00b4 F628C241 		.word	1103243510
 3989 00b8 52B8D241 		.word	1104328786
 3990 00bc B81ED341 		.word	1104355000
 3991 00c0 5C8FD241 		.word	1104318300
 3992 00c4 7B14B041 		.word	1102058619
 3993 00c8 52B8A241 		.word	1101183058
 3994 00cc B81EAB41 		.word	1101733560
 3995 00d0 6666B041 		.word	1102079590
 3996 00d4 5C8FC841 		.word	1103662940
 3997 00d8 8FC2D741 		.word	1104659087
 3998 00dc F628C241 		.word	1103243510
 3999 00e0 52B8D241 		.word	1104328786
 4000 00e4 B81ED341 		.word	1104355000
 4001 00e8 5C8FD241 		.word	1104318300
 4002 00ec 7B14B041 		.word	1102058619
 4003 00f0 52B8A241 		.word	1101183058
 4004 00f4 B81EAB41 		.word	1101733560
 4005 00f8 6666B041 		.word	1102079590
 4006 00fc 5C8FC841 		.word	1103662940
 4007 0100 8FC2D741 		.word	1104659087
 4008 0104 F628C241 		.word	1103243510
 4009 0108 52B8D241 		.word	1104328786
 4010 010c B81ED341 		.word	1104355000
 4011 0110 5C8FD241 		.word	1104318300
 4012 0114 7B14B041 		.word	1102058619
 4013 0118 52B8A241 		.word	1101183058
 4014 011c B81EAB41 		.word	1101733560
 4015 0120 6666B041 		.word	1102079590
 4016 0124 5C8FC841 		.word	1103662940
 4017 0128 8FC2D741 		.word	1104659087
 4018 012c F628C241 		.word	1103243510
 4019 0130 52B8D241 		.word	1104328786
 4020 0134 B81ED341 		.word	1104355000
 4021 0138 5C8FD241 		.word	1104318300
 4022 013c 7B14B041 		.word	1102058619
 4023 0140 52B8A241 		.word	1101183058
 4024 0144 B81EAB41 		.word	1101733560
 4025 0148 6666B041 		.word	1102079590
 4026 014c 5C8FC841 		.word	1103662940
 4027 0150 8FC2D741 		.word	1104659087
 4028 0154 F628C241 		.word	1103243510
 4029 0158 52B8D241 		.word	1104328786
 4030 015c B81ED341 		.word	1104355000
 4031 0160 5C8FD241 		.word	1104318300
 4032 0164 7B14B041 		.word	1102058619
 4033              	.LC46:
 4034 0168 00000000 		.word	.LC1
 4035 016c 00000000 		.word	StartDefaultTask
 4036 0170 0000     		.short	0
 4037 0172 0000     		.space	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 104


 4038 0174 00000000 		.word	0
 4039 0178 00100000 		.word	4096
 4040              		.section	.bss.TS_State,"aw",%nobits
 4041              		.align	2
 4042              		.set	.LANCHOR13,. + 0
 4045              	TS_State:
 4046 0000 00000000 		.space	44
 4046      00000000 
 4046      00000000 
 4046      00000000 
 4046      00000000 
 4047              		.section	.bss.current_pos,"aw",%nobits
 4048              		.align	2
 4049              		.set	.LANCHOR1,. + 0
 4052              	current_pos:
 4053 0000 00000000 		.space	4
 4054              		.section	.bss.current_pos2,"aw",%nobits
 4055              		.align	2
 4056              		.set	.LANCHOR3,. + 0
 4059              	current_pos2:
 4060 0000 00000000 		.space	4
 4061              		.section	.bss.first_index,"aw",%nobits
 4062              		.align	2
 4063              		.set	.LANCHOR2,. + 0
 4066              	first_index:
 4067 0000 00000000 		.space	4
 4068              		.section	.bss.first_index2,"aw",%nobits
 4069              		.align	2
 4070              		.set	.LANCHOR4,. + 0
 4073              	first_index2:
 4074 0000 00000000 		.space	4
 4075              		.section	.bss.inpub_id,"aw",%nobits
 4076              		.align	2
 4077              		.set	.LANCHOR0,. + 0
 4080              	inpub_id:
 4081 0000 00000000 		.space	4
 4082              		.section	.bss.is_full,"aw",%nobits
 4083              		.align	2
 4084              		.set	.LANCHOR5,. + 0
 4087              	is_full:
 4088 0000 00000000 		.space	4
 4089              		.section	.bss.is_full2,"aw",%nobits
 4090              		.align	2
 4091              		.set	.LANCHOR6,. + 0
 4094              	is_full2:
 4095 0000 00000000 		.space	4
 4096              		.section	.bss.which_window,"aw",%nobits
 4097              		.align	2
 4098              		.set	.LANCHOR12,. + 0
 4101              	which_window:
 4102 0000 00000000 		.space	4
 4103              		.section	.data.button_choose_thermometer1,"aw",%progbits
 4104              		.align	2
 4105              		.set	.LANCHOR9,. + 0
 4108              	button_choose_thermometer1:
 4109 0000 32000000 		.word	50
 4110 0004 78000000 		.word	120
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 105


 4111 0008 8C000000 		.word	140
 4112 000c 32000000 		.word	50
 4113              		.section	.data.button_choose_thermometer2,"aw",%progbits
 4114              		.align	2
 4115              		.set	.LANCHOR10,. + 0
 4118              	button_choose_thermometer2:
 4119 0000 FA000000 		.word	250
 4120 0004 78000000 		.word	120
 4121 0008 8C000000 		.word	140
 4122 000c 32000000 		.word	50
 4123              		.section	.data.button_return,"aw",%progbits
 4124              		.align	2
 4125              		.set	.LANCHOR11,. + 0
 4128              	button_return:
 4129 0000 7D000000 		.word	125
 4130 0004 DC000000 		.word	220
 4131 0008 8C000000 		.word	140
 4132 000c 32000000 		.word	50
 4133              		.section	.data.button_show_charts,"aw",%progbits
 4134              		.align	2
 4135              		.set	.LANCHOR8,. + 0
 4138              	button_show_charts:
 4139 0000 FA000000 		.word	250
 4140 0004 78000000 		.word	120
 4141 0008 8C000000 		.word	140
 4142 000c 32000000 		.word	50
 4143              		.section	.data.button_show_temperature,"aw",%progbits
 4144              		.align	2
 4145              		.set	.LANCHOR7,. + 0
 4148              	button_show_temperature:
 4149 0000 32000000 		.word	50
 4150 0004 78000000 		.word	120
 4151 0008 8C000000 		.word	140
 4152 000c 32000000 		.word	50
 4153              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 4154              		.align	2
 4155              	.LC43:
 4156 0000 5372632F 		.ascii	"Src/main.c\000"
 4156      6D61696E 
 4156      2E6300
 4157              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 4158              		.align	2
 4159              	.LC38:
 4160 0000 54727969 		.ascii	"Trying to connect\012\000"
 4160      6E672074 
 4160      6F20636F 
 4160      6E6E6563 
 4160      740A00
 4161 0013 00       		.space	1
 4162              	.LC39:
 4163 0014 546F7563 		.ascii	"Touched touchscreen\012\000"
 4163      68656420 
 4163      746F7563 
 4163      68736372 
 4163      65656E0A 
 4164 0029 000000   		.space	3
 4165              	.LC40:
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 106


 4166 002c 78202564 		.ascii	"x %d\012\000"
 4166      0A00
 4167 0032 0000     		.space	2
 4168              	.LC41:
 4169 0034 79202564 		.ascii	"y %d\012\000"
 4169      0A00
 4170 003a 0000     		.space	2
 4171              	.LC42:
 4172 003c 53656E64 		.ascii	"Send message \012\000"
 4172      206D6573 
 4172      73616765 
 4172      200A00
 4173              		.section	.rodata.add_data_to_buffer.str1.4,"aMS",%progbits,1
 4174              		.align	2
 4175              	.LC10:
 4176 0000 25322E36 		.ascii	"%2.6f to dodaje\012\000"
 4176      6620746F 
 4176      20646F64 
 4176      616A650A 
 4176      00
 4177 0011 000000   		.space	3
 4178              	.LC11:
 4179 0014 43757272 		.ascii	"Current pos %d\012\000"
 4179      656E7420 
 4179      706F7320 
 4179      25640A00 
 4180              	.LC12:
 4181 0024 46697273 		.ascii	"First index %d\012\000"
 4181      7420696E 
 4181      64657820 
 4181      25640A00 
 4182              	.LC13:
 4183 0034 69735F66 		.ascii	"is_full %d \012\000"
 4183      756C6C20 
 4183      2564200A 
 4183      00
 4184 0041 000000   		.space	3
 4185              	.LC14:
 4186 0044 25662074 		.ascii	"%f to dodaje\012\000"
 4186      6F20646F 
 4186      64616A65 
 4186      0A00
 4187              		.section	.rodata.draw_actual_temperature.str1.4,"aMS",%progbits,1
 4188              		.align	2
 4189              	.LC34:
 4190 0000 4E6F2076 		.ascii	"No value\000"
 4190      616C7565 
 4190      00
 4191              		.section	.rodata.draw_chart.str1.4,"aMS",%progbits,1
 4192              		.align	2
 4193              	.LC9:
 4194 0000 256400   		.ascii	"%d\000"
 4195              		.section	.rodata.draw_choose_thermometer.str1.4,"aMS",%progbits,1
 4196              		.align	2
 4197              	.LC31:
 4198 0000 54686572 		.ascii	"Thermometer 1\000"
 4198      6D6F6D65 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 107


 4198      74657220 
 4198      3100
 4199 000e 0000     		.space	2
 4200              	.LC32:
 4201 0010 54686572 		.ascii	"Thermometer 2\000"
 4201      6D6F6D65 
 4201      74657220 
 4201      3200
 4202 001e 0000     		.space	2
 4203              	.LC33:
 4204 0020 52657475 		.ascii	"Return\000"
 4204      726E00
 4205              		.section	.rodata.draw_menu.str1.4,"aMS",%progbits,1
 4206              		.align	2
 4207              	.LC29:
 4208 0000 41637475 		.ascii	"Actual temperature\000"
 4208      616C2074 
 4208      656D7065 
 4208      72617475 
 4208      726500
 4209 0013 00       		.space	1
 4210              	.LC30:
 4211 0014 54656D70 		.ascii	"Temperature charts\000"
 4211      65726174 
 4211      75726520 
 4211      63686172 
 4211      747300
 4212              		.section	.rodata.example_do_connect.str1.4,"aMS",%progbits,1
 4213              		.align	2
 4214              	.LC17:
 4215 0000 6C776970 		.ascii	"lwip_test\000"
 4215      5F746573 
 4215      7400
 4216 000a 0000     		.space	2
 4217              	.LC18:
 4218 000c 3139322E 		.ascii	"192.168.0.111\000"
 4218      3136382E 
 4218      302E3131 
 4218      3100
 4219 001a 0000     		.space	2
 4220              	.LC19:
 4221 001c 43726561 		.ascii	"Created ip\000"
 4221      74656420 
 4221      697000
 4222 0027 00       		.space	1
 4223              	.LC20:
 4224 0028 6D717474 		.ascii	"mqtt_connect return tutaj %d\012\000"
 4224      5F636F6E 
 4224      6E656374 
 4224      20726574 
 4224      75726E20 
 4225 0046 0000     		.space	2
 4226              	.LC21:
 4227 0048 6D717474 		.ascii	"mqtt_connectbvgfdbgfdgfd\000"
 4227      5F636F6E 
 4227      6E656374 
 4227      62766766 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 108


 4227      64626766 
 4228              		.section	.rodata.example_publish.str1.4,"aMS",%progbits,1
 4229              		.align	2
 4230              	.LC26:
 4231 0000 67697665 		.ascii	"give_temperature\000"
 4231      5F74656D 
 4231      70657261 
 4231      74757265 
 4231      00
 4232 0011 000000   		.space	3
 4233              	.LC27:
 4234 0014 6573702F 		.ascii	"esp/temperature\000"
 4234      74656D70 
 4234      65726174 
 4234      75726500 
 4235              	.LC28:
 4236 0024 5075626C 		.ascii	"Publish err: %d\012\000"
 4236      69736820 
 4236      6572723A 
 4236      2025640A 
 4236      00
 4237              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 4238              		.align	2
 4239              	.LC44:
 4240 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\012"
 4240      33326D53 
 4240      544D3332 
 4240      46373436 
 4240      20446973 
 4241 002a 00       		.ascii	"\000"
 4242 002b 00       		.space	1
 4243              	.LC45:
 4244 002c 52656775 		.ascii	"Regular printf\000"
 4244      6C617220 
 4244      7072696E 
 4244      746600
 4245              		.section	.rodata.mqtt_connection_cb.str1.4,"aMS",%progbits,1
 4246              		.align	2
 4247              	.LC22:
 4248 0000 6D717474 		.ascii	"mqtt_connection_cb: Successfully connected\000"
 4248      5F636F6E 
 4248      6E656374 
 4248      696F6E5F 
 4248      63623A20 
 4249 002b 00       		.space	1
 4250              	.LC23:
 4251 002c 6573702F 		.ascii	"esp/temperature/client2\000"
 4251      74656D70 
 4251      65726174 
 4251      7572652F 
 4251      636C6965 
 4252              	.LC24:
 4253 0044 6D717474 		.ascii	"mqtt_subscribe return: %d\012\000"
 4253      5F737562 
 4253      73637269 
 4253      62652072 
 4253      65747572 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 109


 4254 005f 00       		.space	1
 4255              	.LC25:
 4256 0060 6D717474 		.ascii	"mqtt_connection_cb: Disconnected, reason: %d\012\000"
 4256      5F636F6E 
 4256      6E656374 
 4256      696F6E5F 
 4256      63623A20 
 4257              		.section	.rodata.mqtt_incoming_data_cb.str1.4,"aMS",%progbits,1
 4258              		.align	2
 4259              	.LC35:
 4260 0000 496E636F 		.ascii	"Incoming publish payload with length %d, flags %u\012"
 4260      6D696E67 
 4260      20707562 
 4260      6C697368 
 4260      20706179 
 4261 0032 00       		.ascii	"\000"
 4262 0033 00       		.space	1
 4263              	.LC36:
 4264 0034 6D717474 		.ascii	"mqtt_incoming_data_cb: %s\012\000"
 4264      5F696E63 
 4264      6F6D696E 
 4264      675F6461 
 4264      74615F63 
 4265 004f 00       		.space	1
 4266              	.LC37:
 4267 0050 43616C6C 		.ascii	"Call an A function ...\012\000"
 4267      20616E20 
 4267      41206675 
 4267      6E637469 
 4267      6F6E202E 
 4268              		.section	.rodata.mqtt_incoming_publish_cb.str1.4,"aMS",%progbits,1
 4269              		.align	2
 4270              	.LC6:
 4271 0000 496E636F 		.ascii	"Incoming publish at topic %s with total length %u\012"
 4271      6D696E67 
 4271      20707562 
 4271      6C697368 
 4271      20617420 
 4272 0032 00       		.ascii	"\000"
 4273 0033 00       		.space	1
 4274              	.LC7:
 4275 0034 7072696E 		.ascii	"print_payload\000"
 4275      745F7061 
 4275      796C6F61 
 4275      6400
 4276 0042 0000     		.space	2
 4277              	.LC8:
 4278 0044 6573702F 		.ascii	"esp/temperature/client1\000"
 4278      74656D70 
 4278      65726174 
 4278      7572652F 
 4278      636C6965 
 4279              		.section	.rodata.mqtt_pub_request_cb.str1.4,"aMS",%progbits,1
 4280              		.align	2
 4281              	.LC3:
 4282 0000 5075626C 		.ascii	"Publish result: %d\012\000"
 4282      69736820 
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 110


 4282      72657375 
 4282      6C743A20 
 4282      25640A00 
 4283              		.section	.rodata.mqtt_sub_request_cb.str1.4,"aMS",%progbits,1
 4284              		.align	2
 4285              	.LC4:
 4286 0000 53756273 		.ascii	"Subscribe result: %d\012\000"
 4286      63726962 
 4286      65207265 
 4286      73756C74 
 4286      3A202564 
 4287 0016 0000     		.space	2
 4288              	.LC5:
 4289 0018 53756273 		.ascii	"Subscribe result is OK!\000"
 4289      63726962 
 4289      65207265 
 4289      73756C74 
 4289      20697320 
 4290              		.section	.rodata.print_data.str1.4,"aMS",%progbits,1
 4291              		.align	2
 4292              	.LC15:
 4293 0000 54656D70 		.ascii	"Temperature1 is:\000"
 4293      65726174 
 4293      75726531 
 4293      2069733A 
 4293      00
 4294 0011 000000   		.space	3
 4295              	.LC16:
 4296 0014 54656D70 		.ascii	"Temperature2 is:\000"
 4296      65726174 
 4296      75726532 
 4296      2069733A 
 4296      00
 4297              		.section	.rodata.str1.4,"aMS",%progbits,1
 4298              		.align	2
 4299              	.LC1:
 4300 0000 64656661 		.ascii	"defaultTask\000"
 4300      756C7454 
 4300      61736B00 
 4301              		.text
 4302              	.Letext0:
 4303              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 4304              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 4305              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 4306              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4307              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 4308              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4309              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 4310              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 4311              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 4312              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 4313              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4314              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 4315              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 4316              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 4317              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 4318              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 111


 4319              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 4320              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 4321              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 4322              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 4323              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 4324              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 4325              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 4326              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 4327              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 4328              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 4329              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 4330              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 4331              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 4332              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 4333              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 4334              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 4335              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 4336              		.file 35 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4337              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4338              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 4339              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 4340              		.file 39 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 4341              		.file 40 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\time.h"
 4342              		.file 41 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 4343              		.file 42 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 4344              		.file 43 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 4345              		.file 44 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 4346              		.file 45 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 4347              		.file 46 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 4348              		.file 47 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 4349              		.file 48 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 4350              		.file 49 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 4351              		.file 50 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 4352              		.file 51 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 4353              		.file 52 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 4354              		.file 53 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 4355              		.file 54 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 4356              		.file 55 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 4357              		.file 56 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 4358              		.file 57 "Inc/lwip.h"
 4359              		.file 58 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 4360              		.file 59 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\unistd.h"
 4361              		.file 60 "Drivers/BSP/STM32746G-Discovery/../../../Utilities/Fonts/fonts.h"
 4362              		.file 61 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 4363              		.file 62 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 4364              		.file 63 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 4365              		.file 64 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 4366              		.file 65 "Middlewares/Third_Party/LwIP/src/include/lwip/inet.h"
 4367              		.file 66 "Middlewares/Third_Party/LwIP/src/include/lwip/netdb.h"
 4368              		.file 67 "Drivers/BSP/Components/wm8994/../Common/audio.h"
 4369              		.file 68 "Drivers/BSP/Components/wm8994/wm8994.h"
 4370              		.file 69 "Middlewares/Third_Party/LwIP/src/include/lwip/apps/mqtt.h"
 4371              		.file 70 "<built-in>"
 4372              		.file 71 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 4373              		.file 72 "Inc/term_io.h"
 4374              		.file 73 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdio.h"
 4375              		.file 74 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 112


 4376              		.file 75 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 4377              		.file 76 "Inc/dbgu.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 113


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:18     .text.mqtt_pub_request_cb:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:24     .text.mqtt_pub_request_cb:00000000 mqtt_pub_request_cb
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:51     .text.mqtt_pub_request_cb:00000010 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:56     .text.mqtt_sub_request_cb:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:62     .text.mqtt_sub_request_cb:00000000 mqtt_sub_request_cb
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:94     .text.mqtt_sub_request_cb:00000018 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:100    .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:106    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:504    .text.MX_GPIO_Init:0000025c $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:520    .text.lcd_start:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:526    .text.lcd_start:00000000 lcd_start
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:600    .text.lcd_start:0000006c $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:606    .text.mqtt_incoming_publish_cb:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:612    .text.mqtt_incoming_publish_cb:00000000 mqtt_incoming_publish_cb
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:677    .text.mqtt_incoming_publish_cb:00000044 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:686    .text.__io_putchar:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:693    .text.__io_putchar:00000000 __io_putchar
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:718    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:723    .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:730    .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:762    .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:767    .text.draw_background:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:774    .text.draw_background:00000000 draw_background
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:809    .text.draw_button:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:816    .text.draw_button:00000000 draw_button
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:894    .text.draw_button:00000058 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:899    .text.draw_chart:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:906    .text.draw_chart:00000000 draw_chart
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1304   .text.draw_chart:00000284 $d
                            *COM*:00000320 buffer
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1319   .text.draw_chart2:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1326   .text.draw_chart2:00000000 draw_chart2
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1724   .text.draw_chart2:00000284 $d
                            *COM*:00000320 buffer2
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1739   .text.initialize_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1746   .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1787   .text.add_data_to_buffer:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:1794   .text.add_data_to_buffer:00000000 add_data_to_buffer
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2002   .text.add_data_to_buffer:00000154 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2021   .text.print_data:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2028   .text.print_data:00000000 print_data
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2186   .text.print_data:000000d0 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2194   .text.example_do_connect:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2201   .text.example_do_connect:00000000 example_do_connect
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2288   .text.example_do_connect:0000005c $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2304   .text.mqtt_connection_cb:00000000 mqtt_connection_cb
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2298   .text.mqtt_connection_cb:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2397   .text.mqtt_connection_cb:0000006c $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2826   .text.mqtt_incoming_data_cb:00000000 mqtt_incoming_data_cb
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2409   .text.example_publish:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2416   .text.example_publish:00000000 example_publish
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2471   .text.example_publish:00000030 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2479   .text.draw_menu:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2486   .text.draw_menu:00000000 draw_menu
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 114


C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2556   .text.draw_menu:00000060 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2564   .text.draw_choose_thermometer:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2571   .text.draw_choose_thermometer:00000000 draw_choose_thermometer
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2647   .text.draw_choose_thermometer:00000070 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2657   .text.draw_actual_temperature:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2664   .text.draw_actual_temperature:00000000 draw_actual_temperature
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2721   .text.draw_actual_temperature:00000050 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2728   .text.draw_chosen_chart:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2735   .text.draw_chosen_chart:00000000 draw_chosen_chart
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2814   .text.draw_chosen_chart:0000005c $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2820   .text.mqtt_incoming_data_cb:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2961   .text.mqtt_incoming_data_cb:000000a4 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2970   .text.touched_button:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:2977   .text.touched_button:00000000 touched_button
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3054   .text.StartDefaultTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3061   .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3347   .text.StartDefaultTask:00000168 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3364   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3371   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3401   .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3406   .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3413   .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3428   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3434   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3485   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3492   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3498   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3548   .text.MX_USART6_UART_Init:00000034 $d
                            *COM*:00000070 huart6
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3555   .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3562   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3765   .text.SystemClock_Config:00000124 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3774   .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3781   .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3888   .text.main:00000084 $d
                            *COM*:00000004 defaultTaskHandle
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4138   .data.button_show_charts:00000000 button_show_charts
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4148   .data.button_show_temperature:00000000 button_show_temperature
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4118   .data.button_choose_thermometer2:00000000 button_choose_thermometer2
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4108   .data.button_choose_thermometer1:00000000 button_choose_thermometer1
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4128   .data.button_return:00000000 button_return
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4101   .bss.which_window:00000000 which_window
                            *COM*:00000004 netconn_thread_handle
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4094   .bss.is_full2:00000000 is_full2
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4059   .bss.current_pos2:00000000 current_pos2
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4073   .bss.first_index2:00000000 first_index2
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4087   .bss.is_full:00000000 is_full
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4052   .bss.current_pos:00000000 current_pos
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4066   .bss.first_index:00000000 first_index
                            *COM*:00000034 hsdram1
                            *COM*:00000040 htim12
                            *COM*:00000040 htim8
                            *COM*:00000040 htim7
                            *COM*:00000040 htim5
                            *COM*:00000040 htim3
                            *COM*:00000040 htim2
                            *COM*:00000040 htim1
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 115


                            *COM*:00000064 hspi2
                            *COM*:0000004c hspdif
                            *COM*:00000084 hsd1
                            *COM*:00000084 hsai_BlockB2
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000020 hrtc
                            *COM*:0000004c hqspi
                            *COM*:000000a8 hltdc
                            *COM*:0000004c hi2c3
                            *COM*:0000004c hi2c1
                            *COM*:00000040 hdma2d
                            *COM*:00000050 hdcmi
                            *COM*:00000024 hcrc
                            *COM*:00000048 hadc3
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:3940   .rodata:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4041   .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4045   .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4048   .bss.current_pos:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4055   .bss.current_pos2:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4062   .bss.first_index:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4069   .bss.first_index2:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4076   .bss.inpub_id:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4080   .bss.inpub_id:00000000 inpub_id
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4083   .bss.is_full:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4090   .bss.is_full2:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4097   .bss.which_window:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4104   .data.button_choose_thermometer1:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4114   .data.button_choose_thermometer2:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4124   .data.button_return:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4134   .data.button_show_charts:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4144   .data.button_show_temperature:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4154   .rodata.MX_USART1_UART_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4158   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4174   .rodata.add_data_to_buffer.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4188   .rodata.draw_actual_temperature.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4192   .rodata.draw_chart.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4196   .rodata.draw_choose_thermometer.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4206   .rodata.draw_menu.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4213   .rodata.example_do_connect.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4229   .rodata.example_publish.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4238   .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4246   .rodata.mqtt_connection_cb.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4258   .rodata.mqtt_incoming_data_cb.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4269   .rodata.mqtt_incoming_publish_cb.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4280   .rodata.mqtt_pub_request_cb.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4284   .rodata.mqtt_sub_request_cb.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4291   .rodata.print_data.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s:4298   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
printf
puts
HAL_GPIO_WritePin
HAL_GPIO_Init
BSP_LCD_SetFont
BSP_LCD_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\cc8BgoTt.s 			page 116


BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
BSP_LCD_SetTransparency
Font12
strcmp
BSP_LCD_SetTextColor
BSP_LCD_FillRect
BSP_LCD_DrawRect
BSP_LCD_DisplayStringAt
BSP_LCD_DrawHLine
BSP_LCD_DrawVLine
BSP_LCD_DrawLine
BSP_LCD_FillPolygon
sprintf
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
__aeabi_d2f
__aeabi_f2d
atof
BSP_LCD_GetFont
strncpy
Font24
ip4addr_aton
mqtt_client_connect
mqtt_set_inpub_callback
mqtt_sub_unsub
mqtt_publish
xprintf
MX_LWIP_Init
vTaskDelay
BSP_TS_GetState
HAL_IncTick
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
memcpy
HAL_Init
debug_init
osThreadCreate
osKernelStart
